Language: PsiLanguageType:SHADERLAB
IShaderLabFile
  IShaderCommand
    ShaderLabTokenType+KeywordTokenElement(type:SHADER_KEYWORD, text:Shader)
    Whitespace(type:WHITESPACE, text: ) spaces: " "
    IShaderValue
      ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Test")
      NewLine(type:NEW_LINE, text:\n) spaces: "\n"
      ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
      Whitespace(type:WHITESPACE, text:    ) spaces: "    "
      NewLine(type:NEW_LINE, text:\n) spaces: "\n"
      Whitespace(type:WHITESPACE, text:    ) spaces: "    "
      ISubShaderCommand
        ShaderLabTokenType+KeywordTokenElement(type:SUB_SHADER_KEYWORD, text:SubShader)
        ISubShaderValue
          ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
          Whitespace(type:WHITESPACE, text:        ) spaces: "        "
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:        ) spaces: "        "
          IRegularPassDef
            ShaderLabTokenType+KeywordTokenElement(type:PASS_KEYWORD, text:Pass)
            IRegularPassValue
              ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
              NewLine(type:NEW_LINE, text:\n) spaces: "\n"
              Whitespace(type:WHITESPACE, text:            ) spaces: "            "
              ITagsCommand
                ShaderLabTokenType+KeywordTokenElement(type:TAGS_KEYWORD, text:Tags)
                Whitespace(type:WHITESPACE, text: ) spaces: " "
                ITagsValue
                  ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
                  Whitespace(type:WHITESPACE, text: ) spaces: " "
                  ITagDeclaration
                    IShaderLabIdentifier
                      Identifier(type:IDENTIFIER, text:LightMode)
                    Whitespace(type:WHITESPACE, text: ) spaces: " "
                    ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
                    Whitespace(type:WHITESPACE, text: ) spaces: " "
                    IShaderLabIdentifier
                      Identifier(type:IDENTIFIER, text:Vertex)
                  Whitespace(type:WHITESPACE, text: ) spaces: " "
                  ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
              NewLine(type:NEW_LINE, text:\n) spaces: "\n"
              Whitespace(type:WHITESPACE, text:            ) spaces: "            "
              ITagsCommand
                ShaderLabTokenType+KeywordTokenElement(type:TAGS_KEYWORD, text:Tags)
                Whitespace(type:WHITESPACE, text: ) spaces: " "
                ITagsValue
                  ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
                  Whitespace(type:WHITESPACE, text: ) spaces: " "
                  ITagDeclaration
                    ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"LightMode")
                    Whitespace(type:WHITESPACE, text: ) spaces: " "
                    ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
                    Whitespace(type:WHITESPACE, text: ) spaces: " "
                    ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Vertex")
                  Whitespace(type:WHITESPACE, text: ) spaces: " "
                  ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
              NewLine(type:NEW_LINE, text:\n) spaces: "\n"
              NewLine(type:NEW_LINE, text:\n) spaces: "\n"
              Whitespace(type:WHITESPACE, text:            ) spaces: "            "
              EndOfLineComment(type:END_OF_LINE_COMMENT, text:// errors:) spaces: "// errors:"
              NewLine(type:NEW_LINE, text:\n) spaces: "\n"
              Whitespace(type:WHITESPACE, text:            ) spaces: "            "
              ITagsCommand
                ShaderLabTokenType+KeywordTokenElement(type:TAGS_KEYWORD, text:Tags)
                Whitespace(type:WHITESPACE, text: ) spaces: " "
                ITagsValue
                  ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
                  Whitespace(type:WHITESPACE, text: ) spaces: " "
                  ITagDeclaration
                    IShaderLabIdentifier
                      Identifier(type:IDENTIFIER, text:LightMode)
                    Whitespace(type:WHITESPACE, text: ) spaces: " "
                    ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
  Whitespace(type:WHITESPACE, text: ) spaces: " "
  ErrorElement:Identifier expected
    ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Vertex")
    Whitespace(type:WHITESPACE, text: ) spaces: " "
    ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
    NewLine(type:NEW_LINE, text:\n) spaces: "\n"
    Whitespace(type:WHITESPACE, text:            ) spaces: "            "
    ShaderLabTokenType+KeywordTokenElement(type:TAGS_KEYWORD, text:Tags)
    Whitespace(type:WHITESPACE, text: ) spaces: " "
    ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
    Whitespace(type:WHITESPACE, text: ) spaces: " "
    ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"LightMode")
    Whitespace(type:WHITESPACE, text: ) spaces: " "
    ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
    Whitespace(type:WHITESPACE, text: ) spaces: " "
    Identifier(type:IDENTIFIER, text:Vertex)
    Whitespace(type:WHITESPACE, text: ) spaces: " "
    ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
    NewLine(type:NEW_LINE, text:\n) spaces: "\n"
    Whitespace(type:WHITESPACE, text:            ) spaces: "            "
    ShaderLabTokenType+KeywordTokenElement(type:CG_PROGRAM, text:CGPROGRAM)
    ShaderLabTokenType+GenericTokenElement(type:CG_CONTENT, text:\n            )
    ShaderLabTokenType+KeywordTokenElement(type:CG_END, text:ENDCG)
    NewLine(type:NEW_LINE, text:\n) spaces: "\n"
    Whitespace(type:WHITESPACE, text:        ) spaces: "        "
    ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
    NewLine(type:NEW_LINE, text:\n) spaces: "\n"
    Whitespace(type:WHITESPACE, text:    ) spaces: "    "
    ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
    NewLine(type:NEW_LINE, text:\n) spaces: "\n"
    ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})


using System;
using System.Collections;
using UnityEngine;
using UnityEditor;

public class |A|(0) : MonoBehaviour
{
    // All serialised by Unity - gutter icons
    public string |ImplicitlyAssignedField|(1);
    public string |ImplicitlyAssignedMultiField1|(2), |ImplicitlyAssignedMultiField2|(3);
    [SerializeField] private int |myImplicitlyAssignedPrivateField|(4);

    // Not serialized by Unity
    public const string UnusedConst = "hello";
    private const string UnusedPrivateConst = "hello";
    [SerializeField] private const string UnusedPrivateConst2 = "hello";
    private string myUnusedField;
    public readonly string UnusedReadonlyField;
    [NonSerialized] public string ExplicitlyUnusedField;
    [NonSerialized, SerializeField] public string ExplicitlyUnusedField2;
    [NonSerialized, SerializeField] private string myExplicitlyUnusedField3;
    public static string UnusedStaticField;
    [SerializeField] private static string ourUnusedPrivateStaticField;

    // Unity function
    private void |OnDestroy|(5)()
    {
    }

    // Not a Unity function
    private void NotMessage()
    {
    }

    // Unity message as coroutine
    private IEnumerator |Start|(6)()
    {
        return null;
    }

    // Optional parameter
    private void |OnCollisionStay|(7)()
    {
    }
}

[InitializeOnLoad]
public class Startup
{
    static |Startup|(8)()
    {
        Debug.Log("Up and running");
    }

    public Startup()
    {
        // Not used
    }
}

class MyClass
{
    [RuntimeInitializeOnLoadMethod]
    static void OnRuntimeMethodLoad()
    {
        Debug.Log("After scene is loaded and game is running");
    }

    [RuntimeInitializeOnLoadMethod]
    public static void OnSecondRuntimeMethodLoad()
    {
        Debug.Log("SecondMethod After scene is loaded and game is running.");
    }

    [RuntimeInitializeOnLoadMethod]
    public void NotAppliedToInstanceMethods()
    {
    }

    [InitializeOnLoadMethod]
    private static void OnProjectLoadedInEditor()
    {
        Debug.Log("Project loaded in Unity Editor");
    }

    [InitializeOnLoadMethod]
    public static void OnProjectLoadedInEditor2()
    {
        Debug.Log("Project loaded in Unity Editor");
    }

    [InitializeOnLoadMethod]
    public void NotAppliedToInstanceMethod()
    {
        Debug.Log("Project loaded in Unity Editor");
    }
}

---------------------------------------------------------
(0): Unity Gutter Icon: Unity scripting component
(1): Unity Gutter Icon: This field is initialised by Unity
(2): Unity Gutter Icon: This field is initialised by Unity
(3): Unity Gutter Icon: This field is initialised by Unity
(4): Unity Gutter Icon: This field is initialised by Unity
(5): Unity Gutter Icon: Unity event function

This function is called when the MonoBehaviour will be destroyed.
(6): Unity Gutter Icon: Unity event function

Start is called on the frame when a script is enabled just before any of the Update methods are called the first time.
This function can be a coroutine.
(7): Unity Gutter Icon: Unity event function

OnCollisionStay is called once per frame for every collider/rigidbody that is touching rigidbody/collider.
This function can be a coroutine.
(8): Unity Gutter Icon: Called when Unity first launches the editor, the player, or recompiles scripts

Language: PsiLanguageType:SHADERLAB
IShaderLabFile
  IShaderCommand
    ShaderLabTokenType+KeywordTokenElement(type:SHADER_KEYWORD, text:Shader)
    Whitespace(type:WHITESPACE, text: ) spaces: " "
    IShaderValue
      ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Vegetation")
      Whitespace(type:WHITESPACE, text: ) spaces: " "
      ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
      NewLine(type:NEW_LINE, text:\n) spaces: "\n"
      Whitespace(type:WHITESPACE, text:    ) spaces: "    "
      IPropertiesCommand
        ShaderLabTokenType+KeywordTokenElement(type:PROPERTIES_KEYWORD, text:Properties)
        Whitespace(type:WHITESPACE, text: ) spaces: " "
        IPropertiesValue
          ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:        ) spaces: "        "
          IPropertyDeclaration
            IShaderLabIdentifier
              Identifier(type:IDENTIFIER, text:_Color)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
            ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Main Color")
            ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ISimplePropertyType
              ShaderLabTokenType+KeywordTokenElement(type:COLOR_KEYWORD, text:Color)
            ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IVectorPropertyValue
              IVectorLiteral
                ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
                INumericValue
                  ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:.5)
                ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
                Whitespace(type:WHITESPACE, text: ) spaces: " "
                INumericValue
                  ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:.5)
                ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
                Whitespace(type:WHITESPACE, text: ) spaces: " "
                INumericValue
                  ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:.5)
                ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
                Whitespace(type:WHITESPACE, text: ) spaces: " "
                INumericValue
                  ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:.5)
                ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:        ) spaces: "        "
          IPropertyDeclaration
            IShaderLabIdentifier
              Identifier(type:IDENTIFIER, text:_MainTex)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
            ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Base (RGB) Alpha (A)")
            ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ITextureDimensionPropertyType
              ShaderLabTokenType+KeywordTokenElement(type:TEXTURE_2D_KEYWORD, text:2D)
            ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ITexturePropertyValue
              ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"white")
              Whitespace(type:WHITESPACE, text: ) spaces: " "
              ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
              ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:        ) spaces: "        "
          IPropertyDeclaration
            IShaderLabIdentifier
              Identifier(type:IDENTIFIER, text:_Cutoff)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
            ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Base Alpha cutoff")
            ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IRangePropertyType
              ShaderLabTokenType+KeywordTokenElement(type:RANGE_KEYWORD, text:Range)
              Whitespace(type:WHITESPACE, text: ) spaces: " "
              ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0)
              ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:.9)
              ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IScalarPropertyValue
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:.5)
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:    ) spaces: "    "
          ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
      NewLine(type:NEW_LINE, text:\n) spaces: "\n"
      Whitespace(type:WHITESPACE, text:    ) spaces: "    "
      IShaderBlock
        ISubShaderCommand
          ShaderLabTokenType+KeywordTokenElement(type:SUB_SHADER_KEYWORD, text:SubShader)
          Whitespace(type:WHITESPACE, text: ) spaces: " "
          ISubShaderValue
            ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
            NewLine(type:NEW_LINE, text:\n) spaces: "\n"
            Whitespace(type:WHITESPACE, text:        ) spaces: "        "
            EndOfLineComment(type:END_OF_LINE_COMMENT, text:// Set up basic lighting) spaces: "// Set up basic lighting"
            NewLine(type:NEW_LINE, text:\n) spaces: "\n"
            Whitespace(type:WHITESPACE, text:        ) spaces: "        "
            IPass
              IMaterialCommand
                ShaderLabTokenType+KeywordTokenElement(type:MATERIAL_KEYWORD, text:Material)
                Whitespace(type:WHITESPACE, text: ) spaces: " "
                IMaterialValue
                  ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
                  NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                  Whitespace(type:WHITESPACE, text:            ) spaces: "            "
                  IDiffuseCommand
                    ShaderLabTokenType+KeywordTokenElement(type:DIFFUSE_KEYWORD, text:Diffuse)
                    Whitespace(type:WHITESPACE, text: ) spaces: " "
                    IColorValue
                      IVariableReference
                        ShaderLabTokenType+FixedTokenElement(type:LBRACK, text:[)
                        IReferenceName
                          IShaderLabIdentifier
                            Identifier(type:IDENTIFIER, text:_Color)
                        ShaderLabTokenType+FixedTokenElement(type:RBRACK, text:])
                  NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                  Whitespace(type:WHITESPACE, text:            ) spaces: "            "
                  IAmbientCommand
                    ShaderLabTokenType+KeywordTokenElement(type:AMBIENT_KEYWORD, text:Ambient)
                    Whitespace(type:WHITESPACE, text: ) spaces: " "
                    IColorValue
                      IVariableReference
                        ShaderLabTokenType+FixedTokenElement(type:LBRACK, text:[)
                        IReferenceName
                          IShaderLabIdentifier
                            Identifier(type:IDENTIFIER, text:_Color)
                        ShaderLabTokenType+FixedTokenElement(type:RBRACK, text:])
                  NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                  Whitespace(type:WHITESPACE, text:        ) spaces: "        "
                  ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
              NewLine(type:NEW_LINE, text:\n) spaces: "\n"
              Whitespace(type:WHITESPACE, text:        ) spaces: "        "
              ILightingCommand
                ShaderLabTokenType+KeywordTokenElement(type:LIGHTING_KEYWORD, text:Lighting)
                Whitespace(type:WHITESPACE, text: ) spaces: " "
                IBoolLiteral
                  ShaderLabTokenType+KeywordTokenElement(type:ON_KEYWORD, text:On)
              NewLine(type:NEW_LINE, text:\n) spaces: "\n"
              NewLine(type:NEW_LINE, text:\n) spaces: "\n"
              Whitespace(type:WHITESPACE, text:        ) spaces: "        "
              EndOfLineComment(type:END_OF_LINE_COMMENT, text:// Render both front and back facing polygons.) spaces: "// Render both front and back facing polygons."
              NewLine(type:NEW_LINE, text:\n) spaces: "\n"
              Whitespace(type:WHITESPACE, text:        ) spaces: "        "
              ICullCommand
                ShaderLabTokenType+KeywordTokenElement(type:CULL_KEYWORD, text:Cull)
                Whitespace(type:WHITESPACE, text: ) spaces: " "
                ICullValue
                  ShaderLabTokenType+KeywordTokenElement(type:OFF_KEYWORD, text:Off)
              NewLine(type:NEW_LINE, text:\n) spaces: "\n"
              NewLine(type:NEW_LINE, text:\n) spaces: "\n"
              Whitespace(type:WHITESPACE, text:        ) spaces: "        "
              EndOfLineComment(type:END_OF_LINE_COMMENT, text:// first pass:) spaces: "// first pass:"
              NewLine(type:NEW_LINE, text:\n) spaces: "\n"
              Whitespace(type:WHITESPACE, text:        ) spaces: "        "
              EndOfLineComment(type:END_OF_LINE_COMMENT, text:// render any pixels that are more than [_Cutoff] opaque) spaces: "// render any pixels that are more than [_Cutoff] opaque"
              NewLine(type:NEW_LINE, text:\n) spaces: "\n"
              Whitespace(type:WHITESPACE, text:        ) spaces: "        "
              ITexturePassDef
                ShaderLabTokenType+KeywordTokenElement(type:PASS_KEYWORD, text:Pass)
                Whitespace(type:WHITESPACE, text: ) spaces: " "
                ITexturePassValue
                  ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
                  NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                  Whitespace(type:WHITESPACE, text:            ) spaces: "            "
                  IAlphaTestCommand
                    ShaderLabTokenType+KeywordTokenElement(type:ALPHA_TEST_KEYWORD, text:AlphaTest)
                    Whitespace(type:WHITESPACE, text: ) spaces: " "
                    IAlphaTestValue
                      IComparisonFunctionValue
                        ShaderLabTokenType+KeywordTokenElement(type:GREATER_KEYWORD, text:Greater)
                      Whitespace(type:WHITESPACE, text: ) spaces: " "
                      INumericValue
                        IVariableReference
                          ShaderLabTokenType+FixedTokenElement(type:LBRACK, text:[)
                          IReferenceName
                            IShaderLabIdentifier
                              Identifier(type:IDENTIFIER, text:_Cutoff)
                          ShaderLabTokenType+FixedTokenElement(type:RBRACK, text:])
                  NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                  Whitespace(type:WHITESPACE, text:            ) spaces: "            "
                  ISetTextureCommand
                    ShaderLabTokenType+KeywordTokenElement(type:SET_TEXTURE_KEYWORD, text:SetTexture)
                    Whitespace(type:WHITESPACE, text: ) spaces: " "
                    ISetTextureValue
                      IVariableReference
                        ShaderLabTokenType+FixedTokenElement(type:LBRACK, text:[)
                        IReferenceName
                          IShaderLabIdentifier
                            Identifier(type:IDENTIFIER, text:_MainTex)
                        ShaderLabTokenType+FixedTokenElement(type:RBRACK, text:])
                      Whitespace(type:WHITESPACE, text: ) spaces: " "
                      ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
                      NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                      Whitespace(type:WHITESPACE, text:                ) spaces: "                "
                      ICombineCommand
                        ShaderLabTokenType+KeywordTokenElement(type:COMBINE_KEYWORD, text:combine)
                        Whitespace(type:WHITESPACE, text: ) spaces: " "
                        ICombineValue
                          ICombineCalculation
                            ICombineOperation
                              ICombineSrc
                                ShaderLabTokenType+KeywordTokenElement(type:TEXTURE_KEYWORD, text:texture)
                              Whitespace(type:WHITESPACE, text: ) spaces: " "
                              ShaderLabTokenType+FixedTokenElement(type:MULTIPLY, text:*)
                              Whitespace(type:WHITESPACE, text: ) spaces: " "
                              ICombineSrc
                                ShaderLabTokenType+KeywordTokenElement(type:PRIMARY_KEYWORD, text:primary)
                          ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
                          Whitespace(type:WHITESPACE, text: ) spaces: " "
                          ICombineCalculation
                            ICombineOperation
                              ICombineSrc
                                ShaderLabTokenType+KeywordTokenElement(type:TEXTURE_KEYWORD, text:texture)
                      NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                      Whitespace(type:WHITESPACE, text:            ) spaces: "            "
                      ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
                  NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                  Whitespace(type:WHITESPACE, text:        ) spaces: "        "
                  ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
            NewLine(type:NEW_LINE, text:\n) spaces: "\n"
            NewLine(type:NEW_LINE, text:\n) spaces: "\n"
            Whitespace(type:WHITESPACE, text:        ) spaces: "        "
            EndOfLineComment(type:END_OF_LINE_COMMENT, text:// Second pass:) spaces: "// Second pass:"
            NewLine(type:NEW_LINE, text:\n) spaces: "\n"
            Whitespace(type:WHITESPACE, text:        ) spaces: "        "
            EndOfLineComment(type:END_OF_LINE_COMMENT, text:// render in the semitransparent details.) spaces: "// render in the semitransparent details."
            NewLine(type:NEW_LINE, text:\n) spaces: "\n"
            Whitespace(type:WHITESPACE, text:        ) spaces: "        "
            IPass
              ITexturePassDef
                ShaderLabTokenType+KeywordTokenElement(type:PASS_KEYWORD, text:Pass)
                Whitespace(type:WHITESPACE, text: ) spaces: " "
                ITexturePassValue
                  ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
                  NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                  Whitespace(type:WHITESPACE, text:            ) spaces: "            "
                  EndOfLineComment(type:END_OF_LINE_COMMENT, text:// Dont write to the depth buffer) spaces: "// Dont write to the depth buffer"
                  NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                  Whitespace(type:WHITESPACE, text:            ) spaces: "            "
                  IZwriteCommand
                    ShaderLabTokenType+KeywordTokenElement(type:ZWRITE_KEYWORD, text:ZWrite)
                    Whitespace(type:WHITESPACE, text: ) spaces: " "
                    IBoolValue
                      ShaderLabTokenType+KeywordTokenElement(type:OFF_KEYWORD, text:off)
                  NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                  Whitespace(type:WHITESPACE, text:            ) spaces: "            "
                  EndOfLineComment(type:END_OF_LINE_COMMENT, text:// Don't write pixels we have already written.) spaces: "// Don't write pixels we have already written."
                  NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                  Whitespace(type:WHITESPACE, text:            ) spaces: "            "
                  IZtestCommand
                    ShaderLabTokenType+KeywordTokenElement(type:ZTEST_KEYWORD, text:ZTest)
                    Whitespace(type:WHITESPACE, text: ) spaces: " "
                    IZtestValue
                      IComparisonFunctionValue
                        ShaderLabTokenType+KeywordTokenElement(type:LESS_KEYWORD, text:Less)
                  NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                  Whitespace(type:WHITESPACE, text:            ) spaces: "            "
                  EndOfLineComment(type:END_OF_LINE_COMMENT, text:// Only render pixels less or equal to the value) spaces: "// Only render pixels less or equal to the value"
                  NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                  Whitespace(type:WHITESPACE, text:            ) spaces: "            "
                  IAlphaTestCommand
                    ShaderLabTokenType+KeywordTokenElement(type:ALPHA_TEST_KEYWORD, text:AlphaTest)
                    Whitespace(type:WHITESPACE, text: ) spaces: " "
                    IAlphaTestValue
                      IComparisonFunctionValue
                        ShaderLabTokenType+KeywordTokenElement(type:LEQUAL_KEYWORD, text:LEqual)
                      Whitespace(type:WHITESPACE, text: ) spaces: " "
                      INumericValue
                        IVariableReference
                          ShaderLabTokenType+FixedTokenElement(type:LBRACK, text:[)
                          IReferenceName
                            IShaderLabIdentifier
                              Identifier(type:IDENTIFIER, text:_Cutoff)
                          ShaderLabTokenType+FixedTokenElement(type:RBRACK, text:])
                  NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                  NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                  Whitespace(type:WHITESPACE, text:            ) spaces: "            "
                  EndOfLineComment(type:END_OF_LINE_COMMENT, text:// Set up alpha blending) spaces: "// Set up alpha blending"
                  NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                  Whitespace(type:WHITESPACE, text:            ) spaces: "            "
                  IBlendCommand
                    ShaderLabTokenType+KeywordTokenElement(type:BLEND_KEYWORD, text:Blend)
                    Whitespace(type:WHITESPACE, text: ) spaces: " "
                    IBlendValue
                      IBlendFactor
                        IShaderLabIdentifier
                          Identifier(type:IDENTIFIER, text:SrcAlpha)
                      Whitespace(type:WHITESPACE, text: ) spaces: " "
                      IBlendFactor
                        IShaderLabIdentifier
                          Identifier(type:IDENTIFIER, text:OneMinusSrcAlpha)
                  NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                  NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                  Whitespace(type:WHITESPACE, text:            ) spaces: "            "
                  ISetTextureCommand
                    ShaderLabTokenType+KeywordTokenElement(type:SET_TEXTURE_KEYWORD, text:SetTexture)
                    Whitespace(type:WHITESPACE, text: ) spaces: " "
                    ISetTextureValue
                      IVariableReference
                        ShaderLabTokenType+FixedTokenElement(type:LBRACK, text:[)
                        IReferenceName
                          IShaderLabIdentifier
                            Identifier(type:IDENTIFIER, text:_MainTex)
                        ShaderLabTokenType+FixedTokenElement(type:RBRACK, text:])
                      Whitespace(type:WHITESPACE, text: ) spaces: " "
                      ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
                      NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                      Whitespace(type:WHITESPACE, text:                ) spaces: "                "
                      ICombineCommand
                        ShaderLabTokenType+KeywordTokenElement(type:COMBINE_KEYWORD, text:combine)
                        Whitespace(type:WHITESPACE, text: ) spaces: " "
                        ICombineValue
                          ICombineCalculation
                            ICombineOperation
                              ICombineSrc
                                ShaderLabTokenType+KeywordTokenElement(type:TEXTURE_KEYWORD, text:texture)
                              Whitespace(type:WHITESPACE, text: ) spaces: " "
                              ShaderLabTokenType+FixedTokenElement(type:MULTIPLY, text:*)
                              Whitespace(type:WHITESPACE, text: ) spaces: " "
                              ICombineSrc
                                ShaderLabTokenType+KeywordTokenElement(type:PRIMARY_KEYWORD, text:primary)
                          ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
                          Whitespace(type:WHITESPACE, text: ) spaces: " "
                          ICombineCalculation
                            ICombineOperation
                              ICombineSrc
                                ShaderLabTokenType+KeywordTokenElement(type:TEXTURE_KEYWORD, text:texture)
                      NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                      Whitespace(type:WHITESPACE, text:            ) spaces: "            "
                      ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
                  NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                  Whitespace(type:WHITESPACE, text:        ) spaces: "        "
                  ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
            NewLine(type:NEW_LINE, text:\n) spaces: "\n"
            Whitespace(type:WHITESPACE, text:    ) spaces: "    "
            ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
      NewLine(type:NEW_LINE, text:\n) spaces: "\n"
      ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
  NewLine(type:NEW_LINE, text:\n) spaces: "\n"


<?xml version="1.0"?>
<package xmlns="http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd">
  <metadata>
    <id>JetBrains.Unity</id>
    <title>Unity Support</title>
    <version>$version$</version>
    <authors>JetBrains</authors>
    <owners>JetBrains</owners>
    <summary>ReSharper support for the Unity engine</summary>
    <description>Adds support for the Unity engine.

&#8226; Code completion of event function declarations in a class.
&#8226; Use Generate Code to create event functions, with parameters, or start typing for automatic completion.
&#8226; Highlights Unity event functions and serializable fields and marks as implicitly used by Unity.
&#8226; Supports Unity API 5.0 - 2018.2, plus undocumented functions.
&#8226; Inspections, Quick Fixes and Context Actions for Unity specific issues, with documented explantations.
&#8226; Navigate to external Unity documentation.
&#8226; Correctly updates .meta files.
&#8226; Code completion and rename support for "magic strings" in Invoke and Start/StopCoroutine methods.
&#8226; Code completion and rename support for "magic strings" in SyncVar attributes.
&#8226; Automatically adds FormerlySerializedAs attribute when renaming fields.
&#8226; Automatically sets Unity projects to C# 4 or C# 6. No more suggestions for features that won't compile!
&#8226; Highlights UnityEngine.Color and Color32. Edit via colour palette quick fix.
&#8226; Unity specific file and live templates.

Inspections, Quick Fixes and Context Actions:

&#8226; Marks empty event methods as dead code.
&#8226; Inspections and Quick Fixes for incorrect event function method signature and return types.
&#8226; Inspection for usage of Camera.main in Update methods.
&#8226; Inspection for incorrect usage of null propogation and coalescing operators with Unity types.
&#8226; Warns if a coroutine return value is unused.
&#8226; Context actions to add SerializeField or NonSerialized attributes to fields.
&#8226; Context actions to mark a field serialized or non-serialized.
&#8226; Context actions to mark a field with HideInInspector, or remove the attribute.
&#8226; Context action to convert auto-property to property with serialized backing field.
&#8226; Context action to convert event function method signature to/from coroutine.
&#8226; Event function descriptions for methods and parameters displayed in tooltips and QuickDoc
&#8226; Code completion, find usages and rename support for Invoke, InvokeRepeating, IsInvoking and CancelInvoke. Also Start/StopCoroutine.
&#8226; Inspections for incorrectly applied attributes.
&#8226; Inspection and Quick Fix to use CompareTag instead of string comparison.
&#8226; Inspection and Quick Fix for using new with ScriptableObject or MonoBehaviour.
&#8226; Inspection and Quick Fix for redundant SerializeField attribute usage.
&#8226; Inspection and Quick Fix for redundant HideInInspector attribute usage.
&#8226; Inspection and Quick Fix for redundant or mis-applied FormerlySerializedAs attribute usage.
&#8226; "Create serialized field" from usage Quick Fix.
&#8226; Inspections for incorrect SyncVarAttribute usage.

ShaderLab support:

&#8226; Parse ShaderLab files, with syntax highlighting and syntax error highlighting.
&#8226; Simple highlighting and code completion in Cg and HLSL code blocks and files.
&#8226; Brace matching, todo explorer and commenting support for ShaderLab files.
&#8226; Colour highlighting and editing in ShaderLab files.
&#8226; Code completion, navigation and find usages for ShaderLab variables.

Assembly Definition file support:

&#8226; Code completion and validation of references.
&#8226; Navigation to referenced assembly definition files.
&#8226; Rename of assembly definition files.
&#8226; JSON validation and code completion of e.g. allowed platforms.
</description>
<releaseNotes>
&#8226; Add support for .asmdef files (#283)
&#8226; Recognise custom serializable classes and handle serialized fields and usge (#419, RIDER-9341, RIDER-12239)
&#8226; Update API details to 2018.2.0b9 (#611, #613)
&#8226; Add undocumented API methods in AssetPostprocessor (OnGeneratedCSProject and OnGeneratedSlnSolution)
&#8226; Consolidate multiple incorrect method signature inspections into one, with quick fix (#534)
&#8226; Add redundant SerializeField attribute on readonly field inspection, plus quick fix (#503, #586)
&#8226; Add redundant HighlightInInspector attribute on serialised field, plus quick fix (#585, #586)
&#8226; Add context actions to toggle HideInInspector attribute on serialised fields (#494, #586)
&#8226; Rework make serialised/non-serialised field context actions (#583, #586)
&#8226; Serialised field context action and quick fixes work correctly with multiple field declarations (#586)
&#8226; Add FormerlySerializedAs attribute when renaming a serialised field (#54, #659, RIDER-12298, RIDER-17887)
&#8226; Add redundant FormerlySerializedAs attribute inspection and quick fix, with code wiki entry
&#8226; Add possible mis-application of FormerlySerializedAs attribute on multiple field declaration, with quick fix and code wiki entry
&#8226; Add inspection for usage of Camera.main in Update methods (#196)
&#8226; Mark potential event handler methods and property setters as in use (#625, RIDER-17276)
&#8226; Add sprop and sfield Live Templates (#565)
&#8226; Don't show incorrect "always false" warning for "this == null" in Unity types (#368)
&#8226; Remove highlighted background for Cg blocks in ShaderLab files (RIDER-16438)
&#8226; Add ShaderLab colour scheme settings page (RIDER-17305)
&#8226; Fix ShaderLab highlighting of keywords (RIDER-17287)
&#8226; Fix rename's "find in text" renaming non-text elements in ShaderLab files
&#8226; Fix Unity specific inspections not showing in Solution Wide Errors tool window (#680)

From 2018.1:
&#8226; Bumped version to 2018.1 to match Rider and ReSharper releases
&#8226; Add inspections for null coalescing and null propagation opertators (#342, #35, #148)
&#8226; Add go to definition, find usages, highlighting, code completion for ShaderLab variable references (#362)
&#8226; Add undocumented UIBehaviour APIs (#394, #395, RIDER-12649)
&#8226; Add code inspection wiki for most inspections
&#8226; Workaround Unity's old version of annotations and make [PublicAPI] mark all members as in use (#337)
&#8226; Change inspection for incorrectly applied attributes from error to redundant code (#325, #322, #376)
&#8226; Remove option to disable ShaderLab parsing from UI (#236)
&#8226; Fix ShaderLab colour reference handling with non-US cultures (#346)
&#8226; Fix ShaderLab vector properties showing colour highlighting or throwing exceptions (#384, #397)
&#8226; Fix parse error with trailing whitespace in ShaderLab variable references (#257, #357)
&#8226; Fix exceptions with existing features

From 2.1.3 (for ReSharper 2017.3):
&#8226; Add context action to convert auto-property to property with serialized backing field (#195, #302)
&#8226; Add context action to mark field as serialized or non-serizable (#191, #295)
* &#8226; Add inspection and quick fix for redundant SerializeField attribute (#295)
&#8226; Add inspections and quick fixes for method signature of methods with Unity attributes (#248)
&#8226; Add inspections for incorrectly applied attributes (#247)
&#8226; Fix code completion before a field with an attribute (#259, #286)
&#8226; Improve relevance of Unity event functions in code completion (#260, #273)
&#8226; Improve reliability of attaching debugger to Unity Editor (#262, #268)

From 2.1.2 (for ReSharper 2017.2):
&#8226; Fix code completion and generation not working with newer versions of Unity (#219)
&#8226; Support Unity API up to 2017.3.0b3 (#218)
&#8226; Recognise projects with modularised UnityEngine assembly references (#241)
&#8226; Add Unity specific file templates (#232, #237)
&#8226; Fix parsing of 2DArray (RIDER-9786)
&#8226; Add colour highlighting and editing to ShaderLab

From 2.1.1 (not released for ReSharper):
&#8226; Improve ShaderLab parsing (#228, #233, RIDER-9214, #222)
&#8226; Show event function descriptions in generate dialog (RIDER-4904)
    
From 2.1.0 (not released for ReSharper):
&#8226; Add annotations for modularised UnityEngine assemblies (#207)

From 2.0.3 (for ReSharper 2017.2):
&#8226; Support for ReSharper 2017.2 (#193)
&#8226; Parse pre-processor directives in ShaderLab (#186)
&#8226; Correctly handle property attributes in shader file (#187)
&#8226; Parse CGINCLUDE blocks at any point in shader file (#188)
&#8226; Parse property reference for BlendOp (RIDER-8386)

From 2.0.2 (not released for ReSharper):
&#8226; Add ability to disable advanced ShaderLab syntax (#183)

From 2.0.0 (for ReSharper 2017.1):
&#8226; Parse ShaderLab files, show syntax error highlighting (#3)
&#8226; Brace matching for ShaderLab files
&#8226; TODO comments support for ShaderLab files
&#8226; Add support for HLSL and GLSL blocks

From 1.9.1:
&#8226; Reduce logging and change tracking for non Unity projects

From 1.9.0:
&#8226; Only set C# language level if Unity project has an Assets folder (#150)
&#8226; Navigate to correct local documentation page, or Unity's search page (#152)

Merge Unity3dRider plugin

From 1.8.0:
&#8226; Inspection and quick fix for calling new on ScriptableObject and MonoBehaviour (#142)
&#8226; Inspections and quick fixes for incorrect method signature for InitializeOnLoad attributes (#143)
&#8226; Added base type required annotations for various attributes (#145)
&#8226; Added implicit use annotations for UnityEngine.Networking attributes (#136)
&#8226; Code completion, find usages and rename support for SyncVarAttribute hook function (#135)
&#8226; Inspection and quick fix to mark empty event functions as dead code (#137)
&#8226; Fixed bug in Invoke symbol resolution to check base class (#138)
&#8226; Support "hook" property of SyncVarAttribute (#136)

From 1.7.0:
&#8226; Support for ReSharper 2017.1 (#110)
&#8226; Fix incorrect signatures in known API (#128)
&#8226; Treats Assertion.Assert as assertion methods (#129)

From 1.6.2:
&#8226; Improve location of "Create serialized field" Quick Fix (#124)

From 1.6.1:
&#8226; Fix nasty bug that will recreate all .meta files when reloading projects. Sorry! (#118)

From 1.6.0:
&#8226; Correctly update .meta files when creating, renaming or refactoring (#56, #61)
&#8226; "Create serialized field" from usage Quick Fix (#111)
&#8226; Inspections and quick fixes for incorrect event function signature and return type
&#8226; Event functions that are coroutines are now recognised and marked as in use (#52)
&#8226; Context action to convert event function signature to/from coroutine
&#8226; Add coroutine and optional parameter information to API and tooltips
&#8226; Expand API support to 5.0 - 5.6
&#8226; Add regex annotations for EditorTestsWithLogParser.ExpectLogLineRegex (#95)
&#8226; Warn if coroutine return value is unused (#99)

From 1.5.0:
&#8226; ReSharper 2016.3 support (#80, #90)
&#8226; Add inspection and Quick Fix to use CompareTag instead of string comparison (#82)
&#8226; Support Unity API for 5.2 - 5.5 (#81)
&#8226; Support undocumented ScriptableObject.OnValidate and Reset (#79)
&#8226; Support method name in string literal of MonoBehaviour.IsInvoking (#85)
&#8226; Support method name in string literal for MonoBehaviour.Start/StopCoroutine (#83)
&#8226; Add gutter icon and "Create" context action for Unity classes (#77)
&#8226; Fix method generation for static event functions (#73)
&#8226; Improve recognition of serialised fields (#87)
&#8226; Remove duplicate items in auto complete list (#92)

From 1.4.0:
&#8226; Enable functionality in projects that reference Unity assemblies, not just those that have the VSTU project flavour GUID (#53)
&#8226; Improve handling of C# language version. Default is correctly set to C# 4, not 5. Uses C# 6 if option is enabled in Unity 5.5. Handles the CSharp60Support plugin. (#50, #60)
&#8226; Treat UnityEngine.Debug.Assert as assertion methods, so ReSharper includes asserts in control flow analysis. (#62, #63 - thanks @joshuaoconnor!)
&#8226; Add string formatting inspections for debug assertion messages.
&#8226; Renamed "message handlers" to "event functions", as per the Unity documentation.
&#8226; Display a "gutter" icon for implicitly used event functions and fields. (#58)
&#8226; Display colour highlights and the colour palette picker for UnityEngine.Color and UnityEngine.Color32. (#51)
&#8226; Fix MonoBehaviour.Invoke code completion and rename support in string literals to work with the correct class, not just the current class. (#66)
&#8226; Support undocumented messages, such as OnGeneratedCSProjectFiles. (#59)
&#8226; Fix namespace provider settings for Assets and Assets\Scripts folders. (#64)
&#8226; Sort event functions alphabetically by default in code completion.

From previous releases:
&#8226; ReSharper 2016.2 support. Thanks @cmcpasserby! (#44, #46)
&#8226; Added support for event functions for all Unity classes, not just MonoBehaviour. Thanks @swalex, @rorydriscoll! (#20, #29, #44)
&#8226; External annotations to improve ReSharper's analysis, e.g. implicit usage and nullability of Component.gameObject. Thanks @bigbadtrumpet! (#34, #13, #15, #23, #42, #43)
&#8226; Code completion, find usages and rename support for Invoke, InvokeRepeating and CancelInvoke (#41)
&#8226; Auto-suggest event function completion when creating methods
&#8226; Event function descriptions for methods and parameters displayed in tooltips and QuickDoc
&#8226; "Read more" in QuickDoc navigates to Unity API documentation
&#8226; Suppress naming consistency checks on event functions
&#8226; Add parameters to generated event functions (#8)
&#8226; Automatically sets Unity projects to C# 5. No more incompatible C# 6 suggestions! (#5)
</releaseNotes>
    <projectUrl>https://github.com/JetBrains/resharper-unity</projectUrl>
    <licenseUrl>https://raw.githubusercontent.com/JetBrains/resharper-unity/master/license.txt</licenseUrl>
    <iconUrl>http://resharper-plugins.jetbrains.com/Content/Images/packageReSharper.png</iconUrl>
    <copyright>Copyright 2018 JetBrains, s.r.o</copyright>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <dependencies>
      <dependency id="Wave" version="[182.0]" />
    </dependencies>
    <tags>resharper unity unity3d</tags>
  </metadata>
  <files>
    <file src="..\..\build\resharper-unity.resharper\bin\$Configuration$\net461\JetBrains.ReSharper.Plugins.Unity.dll" target="DotFiles" />
    <file src="..\..\build\resharper-unity.resharper\bin\$Configuration$\net461\JetBrains.ReSharper.Plugins.Unity.pdb" target="DotFiles" />
    <file src="annotations\UnityEngine*.xml" target="DotFiles\Extensions\JetBrains.Unity\annotations" />
    <file src="annotations\UnityEditor*.xml" target="DotFiles\Extensions\JetBrains.Unity\annotations" />
  </files>
</package>

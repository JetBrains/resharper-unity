// ReSharper disable Unity.RedundantEventFunction
using UnityEditor;
using UnityEngine;

public class |HighlightExactMatchOnly|(0) : MonoBehaviour
{
    public void ||Start|(1)|(2)()
    {
    }

    public void Start(int i)
    {
    }
}

public class |HighlightMultipleExactMatches|(3) : MonoBehaviour
{
    // Both overloads are correct - collisionInfo is optional.
    // Which is picked is ambiguous, so mark both with a warning
    public void ||OnCollisionStay|(4)|(5)(Collision collisionInfo)
    {
    }

    public void ||OnCollisionStay|(6)|(7)()
    {
    }
}

// Incorrect signatures should still be marked as event functions,
// as long as there isn't an exact match
public class |HighlightIncorrectOverloads|(8) : MonoBehaviour
{
    public void ||Start|(9)|(10)(int i)
    {
    }

    public int ||Update|(11)|(12)()
    {
        return 0;
    }

    public void ||OnCollisionStay|(13)|(14)(Collision collisionInfo, int i)
    {
    }

    // Missing all parameters
    public void ||OnAnimatorIK|(15)|(16)()
    {
    }
}

public class ||StaticModifier|(17)|(18) : AssetPostprocessor
{
    // Should be static
    public void ||OnGeneratedCSProjectFiles|(19)|(20)()
    {
    }

    bool ||OnPreGeneratingCSProjectFiles|(21)|(22)()
    {
    }

    // Should not be static
    static void ||OnPreprocessAssembly|(23)|(24)(string pathName)
    {
    }
}

public class ||MyStateMachineBehaviour|(25)|(26) : StateMachineBehaviour
{
    // Do not show incorrect signature warning - the correct signature is implemented in the base class
    public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex, AnimatorControllerPlayable controller)
    {
        base.OnStateEnter(animator, stateInfo, layerIndex, controller);
    }
}

public class |TypeParameters|(27) : MonoBehaviour
{
    public void ||Start|(28)|(29)<T1, T2>()
    {
    }
}

public class ||AllWrong|(30)|(31) : AssetPostprocessor
{
    public int ||OnGeneratedCSProjectFiles|(32)|(33)<T1, T2>(int value)
    {
        return 42;
    }
}

---------------------------------------------------------
(0): ReSharper Unity Implicitly Used Identifier: 
(1): ReSharper Unity Implicitly Used Identifier: 
(2): UnityCodeInsights: 
(3): ReSharper Unity Implicitly Used Identifier: 
(4): ReSharper Unity Implicitly Used Identifier: 
(5): UnityCodeInsights: 
(6): ReSharper Unity Implicitly Used Identifier: 
(7): UnityCodeInsights: 
(8): ReSharper Unity Implicitly Used Identifier: 
(9): ReSharper Unity Implicitly Used Identifier: 
(10): UnityCodeInsights: 
(11): ReSharper Unity Implicitly Used Identifier: 
(12): UnityCodeInsights: 
(13): ReSharper Unity Implicitly Used Identifier: 
(14): UnityCodeInsights: 
(15): ReSharper Unity Implicitly Used Identifier: 
(16): UnityCodeInsights: 
(17): ReSharper Unity Implicitly Used Identifier: 
(18): UnityCodeInsights: 
(19): ReSharper Unity Implicitly Used Identifier: 
(20): UnityCodeInsights: 
(21): ReSharper Unity Implicitly Used Identifier: 
(22): UnityCodeInsights: 
(23): ReSharper Unity Implicitly Used Identifier: 
(24): UnityCodeInsights: 
(25): ReSharper Unity Implicitly Used Identifier: 
(26): UnityCodeInsights: 
(27): ReSharper Unity Implicitly Used Identifier: 
(28): ReSharper Unity Implicitly Used Identifier: 
(29): UnityCodeInsights: 
(30): ReSharper Unity Implicitly Used Identifier: 
(31): UnityCodeInsights: 
(32): ReSharper Unity Implicitly Used Identifier: 
(33): UnityCodeInsights: 

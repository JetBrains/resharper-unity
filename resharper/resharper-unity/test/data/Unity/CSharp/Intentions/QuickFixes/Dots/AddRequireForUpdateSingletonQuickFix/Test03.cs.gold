using Unity.Entities;

struct Killa : IComponentData, IEnableableComponent
{
}

struct Tagilla : IComponentData, IEnableableComponent
{
}

struct Chadilla : IComponentData, IEnableableComponent
{
}

partial struct Foo : ISystem
{
    private void CustomUpdate(ref SysatemState state)
    {
        var k = SystemAPI.GetSingleton{caret}<Killa>();//Must be marked with warning
        var t = SystemAPI.GetSingleton<Tagilla>();//Must be marked with warning
    }
}

partial struct Foo : ISystem
{
    public void OnCreate(ref SystemState state)
    {
      state.RequireForUpdate<Killa>();
      state.RequireForUpdate<Tagilla>();
    }
    
    public void OnUpdate(ref SystemState state)
    {
        var k = SystemAPI.GetSingleton<Killa>();//Must be marked with warning
    }

    public void OnDestroy(ref SystemState state)
    {
        
    }
}

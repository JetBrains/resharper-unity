using UnityEngine;

public class Test : MonoBehaviour
{
    public void Method(GameObject go, Component c, Transform t, Object o)
    {
        var name = o|?|(0).name;
        name = go|?|(1).name;
        name = c|?|(2).name;
        name = t|?|(3).name;
        name = gameObject|?|(4).name;
        name = this.gameObject|?|(5).name;
        name = transform|?|(6).name;
        name = this.transform|?|(7).name;
        name = GameObject.Find("Something")|?|(8).name;
    }
}

---------------------------------------------------------
(0): ReSharper Warning: '?.' on a type deriving from 'UnityEngine.Object' bypasses the lifetime check on the underlying Unity engine object
(1): ReSharper Warning: '?.' on a type deriving from 'UnityEngine.Object' bypasses the lifetime check on the underlying Unity engine object
(2): ReSharper Warning: '?.' on a type deriving from 'UnityEngine.Object' bypasses the lifetime check on the underlying Unity engine object
(3): ReSharper Warning: '?.' on a type deriving from 'UnityEngine.Object' bypasses the lifetime check on the underlying Unity engine object
(4): ReSharper Warning: '?.' on a type deriving from 'UnityEngine.Object' bypasses the lifetime check on the underlying Unity engine object
(5): ReSharper Warning: '?.' on a type deriving from 'UnityEngine.Object' bypasses the lifetime check on the underlying Unity engine object
(6): ReSharper Warning: '?.' on a type deriving from 'UnityEngine.Object' bypasses the lifetime check on the underlying Unity engine object
(7): ReSharper Warning: '?.' on a type deriving from 'UnityEngine.Object' bypasses the lifetime check on the underlying Unity engine object
(8): ReSharper Warning: '?.' on a type deriving from 'UnityEngine.Object' bypasses the lifetime check on the underlying Unity engine object

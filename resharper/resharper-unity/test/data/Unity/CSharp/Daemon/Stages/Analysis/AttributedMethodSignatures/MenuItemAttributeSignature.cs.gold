using UnityEditor;

public class ValidSignatures
{
    [MenuItem("MyMenu/Log Selected Transform Name")]
    static void LogSelectedTransformName()
    {
    }

    [MenuItem("MyMenu/Log Selected Transform Name")]
    static void OptionalMenuCommandArgument(MenuCommand command)
    {
    }

    [MenuItem("MyMenu/Log Selected Transform Name", true)]
    static bool ValidateLogSelectedTransformName()
    {
        return Selection.activeTransform != null;
    }

    [MenuItem("MyMenu/Log Selected Transform Name", validate = true)]
    static bool ValidateLogSelectedTransformName(MenuCommand command)
    {
        return Selection.activeTransform != null;
    }

    [MenuItem("MyMenu/Log Selected Transform Name", priority = 100, validate = true)]
    static bool ValidateLogSelectedTransformName()
    {
        return Selection.activeTransform != null;
    }

    [MenuItem("MyMenu/Log Selected Transform Name", priority = 100, validate = true)]
    static bool ValidateLogSelectedTransformName(MenuCommand command)
    {
        return Selection.activeTransform != null;
    }
}

public class MissingStatic
{
    [MenuItem("MyMenu/Log Selected Transform Name")]
    void |LogSelectedTransformName|(0)()
    {
    }

    [MenuItem("MyMenu/Log Selected Transform Name")]
    void |LogSelectedTransformName2|(1)(MenuCommand command)
    {
    }

    [MenuItem("MyMenu/Log Selected Transform Name", true)]
    bool |ValidateLogSelectedTransformName|(2)()
    {
        return Selection.activeTransform != null;
    }

    [MenuItem("MyMenu/Log Selected Transform Name", validate = true)]
    bool |ValidateLogSelectedTransformName2|(3)()
    {
        return Selection.activeTransform != null;
    }
}

public class IncorrectReturnType
{
    [MenuItem("MyMenu/Log Selected Transform Name")]
    bool |LogSelectedTransformName|(4)()
    {
    }

    [MenuItem("MyMenu/Log Selected Transform Name")]
    bool |LogSelectedTransformName2|(5)(MenuCommand menuCommand)
    {
    }

    [MenuItem("MyMenu/Log Selected Transform Name", false)]
    bool |ValidateLogSelectedTransformName|(6)()
    {
        return Selection.activeTransform != null;
    }

    [MenuItem("MyMenu/Log Selected Transform Name", validate = false)]
    bool |ValidateLogSelectedTransformName2|(7)()
    {
        return Selection.activeTransform != null;
    }
}

public class DuplicateMenuItemShortCutProblemAnalyzer
{
    [MenuItem(|"MyMenu/Do Something with a Shortcut Key %g"|(8))]
    static void LogSelectedTransformName()
    {
    }

    [MenuItem(|"MyMenu/Do Something with a Shortcut Key %g"|(9))]
    static void LogSelectedTransformName1()
    {
    }

    const string myConst = "MyMenu/Do Something with a Shortcut Key %g";

    [MenuItem(|myConst|(10))]
    static void LogSelectedTransformName2()
    {
    }

    [MenuItem(|$"{myConst}"|(11))]
    static void LogSelectedTransformName2()
    {
    }
}

---------------------------------------------------------
(0): ReSharper Warning: Incorrect method signature
(1): ReSharper Warning: Incorrect method signature
(2): ReSharper Warning: Incorrect method signature
(3): ReSharper Warning: Incorrect method signature
(4): ReSharper Warning: Incorrect method signature
(5): ReSharper Warning: Incorrect method signature
(6): ReSharper Warning: Incorrect method signature
(7): ReSharper Warning: Incorrect method signature
(8): ReSharper Warning: The same shortcut is defined for another menu item in this file
(9): ReSharper Warning: The same shortcut is defined for another menu item in this file
(10): ReSharper Warning: The same shortcut is defined for another menu item in this file
(11): ReSharper Warning: The same shortcut is defined for another menu item in this file

using UnityEngine;

public class Test : MonoBehaviour
{
    public void Method(GameObject go, Component c, Transform t, Object o)
    {
        var go2 = go;
        |o ??= null|(0);
        |c ??= null|(1);
        |go ??= gameObject|(2);
        |go ??= this.gameObject|(3);
        |t ??= null|(4);
        |t ??= transform|(5);
        |t ??= this.transform|(6);
        |go ??= null|(7);
        |o ??= go2|(8);
    }
}

---------------------------------------------------------
(0): ReSharper Warning: '??' on a type deriving from 'UnityEngine.Object' bypasses the lifetime check on the underlying Unity engine object
(1): ReSharper Warning: '??' on a type deriving from 'UnityEngine.Object' bypasses the lifetime check on the underlying Unity engine object
(2): ReSharper Warning: '??' on a type deriving from 'UnityEngine.Object' bypasses the lifetime check on the underlying Unity engine object
(3): ReSharper Warning: '??' on a type deriving from 'UnityEngine.Object' bypasses the lifetime check on the underlying Unity engine object
(4): ReSharper Warning: '??' on a type deriving from 'UnityEngine.Object' bypasses the lifetime check on the underlying Unity engine object
(5): ReSharper Warning: '??' on a type deriving from 'UnityEngine.Object' bypasses the lifetime check on the underlying Unity engine object
(6): ReSharper Warning: '??' on a type deriving from 'UnityEngine.Object' bypasses the lifetime check on the underlying Unity engine object
(7): ReSharper Warning: '??' on a type deriving from 'UnityEngine.Object' bypasses the lifetime check on the underlying Unity engine object
(8): ReSharper Warning: '??' on a type deriving from 'UnityEngine.Object' bypasses the lifetime check on the underlying Unity engine object

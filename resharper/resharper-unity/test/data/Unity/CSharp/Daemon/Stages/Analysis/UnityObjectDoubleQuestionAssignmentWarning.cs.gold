using UnityEngine;

public class Test : MonoBehaviour
{
    public void Method(GameObject go, Component c, Transform t, Object o)
    {
        var go2 = go;
        o |??=|(0) null;
        c |??=|(1) null;
        go |??=|(2) gameObject;
        go |??=|(3) this.gameObject;
        t |??=|(4) null;
        t |??=|(5) transform;
        t |??=|(6) this.transform;
        go |??=|(7) null;
        o |??=|(8) go2;
    }
}

---------------------------------------------------------
(0): ReSharper Warning: '??' on a type deriving from 'UnityEngine.Object' bypasses the lifetime check on the underlying Unity engine object
(1): ReSharper Warning: '??' on a type deriving from 'UnityEngine.Object' bypasses the lifetime check on the underlying Unity engine object
(2): ReSharper Warning: '??' on a type deriving from 'UnityEngine.Object' bypasses the lifetime check on the underlying Unity engine object
(3): ReSharper Warning: '??' on a type deriving from 'UnityEngine.Object' bypasses the lifetime check on the underlying Unity engine object
(4): ReSharper Warning: '??' on a type deriving from 'UnityEngine.Object' bypasses the lifetime check on the underlying Unity engine object
(5): ReSharper Warning: '??' on a type deriving from 'UnityEngine.Object' bypasses the lifetime check on the underlying Unity engine object
(6): ReSharper Warning: '??' on a type deriving from 'UnityEngine.Object' bypasses the lifetime check on the underlying Unity engine object
(7): ReSharper Warning: '??' on a type deriving from 'UnityEngine.Object' bypasses the lifetime check on the underlying Unity engine object
(8): ReSharper Warning: '??' on a type deriving from 'UnityEngine.Object' bypasses the lifetime check on the underlying Unity engine object

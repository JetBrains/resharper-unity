// ReSharper disable Unity.RedundantEventFunction
using UnityEditor;
using UnityEngine;

public class Base : MonoBehaviour
{
    public void Start()
    {
    }

    protected void OnEnable()
    {
    }

    protected virtual void OnDestroy()
    {
    }

    private void Awake()
    {
    }

    // Not an event function
	private void OnAudioFilterRead|()|(0)
	{
	}
}

public class Derived : Base
{
    // Requires "new" - inspection comes from R# core
    public void |Start|(1)()
    {
    }

    // Requires "new" - inspection comes from R# core
    public void |OnEnable|(2)()
    {
    }

    // Requires "new" or "override" - inspection comes from R# core
    public void |OnDestroy|(3)()
    {
    }

    // Valid code, but show that it's hiding an event function
    private void |Awake|(4)()
    {
    }

    // Perfectly valid
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}
}


---------------------------------------------------------
(0): ReSharper Warning: Incorrect method parameters. Expected '(float[] data, int channels)'
(1): ReSharper Hides: Hides event function from class 'Base' (Click to navigate)
(2): ReSharper Hides: Hides event function from class 'Base' (Click to navigate)
(3): ReSharper Hides: Hides event function from class 'Base' (Click to navigate)
(4): ReSharper Hides: Hides Unity event function from class 'Base' (Click to navigate)

Language: PsiLanguageType:SHADERLAB
IShaderLabFile
  Whitespace(type:WHITESPACE, text: ) spaces: " "
  IShaderCommand
    ShaderLabTokenType+KeywordTokenElement(type:SHADER_KEYWORD, text:Shader)
    Whitespace(type:WHITESPACE, text: ) spaces: " "
    IShaderValue
      ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"test")
      Whitespace(type:WHITESPACE, text: ) spaces: " "
      ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
      NewLine(type:NEW_LINE, text:\n) spaces: "\n"
      Whitespace(type:WHITESPACE, text:  ) spaces: "  "
      IPropertiesCommand
        ShaderLabTokenType+KeywordTokenElement(type:PROPERTIES_KEYWORD, text:Properties)
        Whitespace(type:WHITESPACE, text: ) spaces: " "
        IPropertiesValue
          ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:    ) spaces: "    "
          IPropertyDeclaration
            IAttribute
              ShaderLabTokenType+FixedTokenElement(type:LBRACK, text:[)
              IShaderLabIdentifier
                Identifier(type:IDENTIFIER, text:HideInInspector)
              ShaderLabTokenType+FixedTokenElement(type:RBRACK, text:])
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IShaderLabIdentifier
              Identifier(type:IDENTIFIER, text:_WaveScale)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
            ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Wave scale")
            ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IRangePropertyType
              ShaderLabTokenType+KeywordTokenElement(type:RANGE_KEYWORD, text:Range)
              Whitespace(type:WHITESPACE, text: ) spaces: " "
              ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.02)
              ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.15)
              ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IScalarPropertyValue
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.07)
          Whitespace(type:WHITESPACE, text: ) spaces: " "
          EndOfLineComment(type:END_OF_LINE_COMMENT, text:// sliders) spaces: "// sliders"
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:    ) spaces: "    "
          IPropertyDeclaration
            IAttribute
              ShaderLabTokenType+FixedTokenElement(type:LBRACK, text:[)
              IShaderLabIdentifier
                Identifier(type:IDENTIFIER, text:KeywordEnum)
              IAttributeParameters
                ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
                IAttributeParameterValues
                  IStringAttributeParameterValue
                    ShaderLabTokenType+GenericTokenElement(type:UNQUOTED_STRING_LITERAL, text:None)
                  ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
                  Whitespace(type:WHITESPACE, text: ) spaces: " "
                  IStringAttributeParameterValue
                    ShaderLabTokenType+GenericTokenElement(type:UNQUOTED_STRING_LITERAL, text:Add)
                  ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
                  Whitespace(type:WHITESPACE, text: ) spaces: " "
                  IStringAttributeParameterValue
                    ShaderLabTokenType+GenericTokenElement(type:UNQUOTED_STRING_LITERAL, text:Multiply)
                ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
              ShaderLabTokenType+FixedTokenElement(type:RBRACK, text:])
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IShaderLabIdentifier
              Identifier(type:IDENTIFIER, text:_Overlay)
            ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
            ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Overlay mode")
            ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ISimplePropertyType
              ShaderLabTokenType+KeywordTokenElement(type:FLOAT_KEYWORD, text:Float)
            ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IScalarPropertyValue
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0)
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:    ) spaces: "    "
          EndOfLineComment(type:END_OF_LINE_COMMENT, text:// Make sure we can handle rogue whitespace. Note leading whitespace is invalid) spaces: "// Make sure we can handle rogue whitespace. Note leading whitespace is invalid"
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:    ) spaces: "    "
          IPropertyDeclaration
            IAttribute
              ShaderLabTokenType+FixedTokenElement(type:LBRACK, text:[)
              Whitespace(type:WHITESPACE, text:   ) spaces: "   "
              IShaderLabIdentifier
                Identifier(type:IDENTIFIER, text:KeywordEnum)
              Whitespace(type:WHITESPACE, text:  ) spaces: "  "
              IAttributeParameters
                ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
                IAttributeParameterValues
                  IStringAttributeParameterValue
                    ShaderLabTokenType+GenericTokenElement(type:UNQUOTED_STRING_LITERAL, text:None)
                  ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
                  Whitespace(type:WHITESPACE, text: ) spaces: " "
                  IStringAttributeParameterValue
                    ShaderLabTokenType+GenericTokenElement(type:UNQUOTED_STRING_LITERAL, text:Add)
                  ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
                  Whitespace(type:WHITESPACE, text: ) spaces: " "
                  IStringAttributeParameterValue
                    ShaderLabTokenType+GenericTokenElement(type:UNQUOTED_STRING_LITERAL, text:Multiply)
                ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
              ShaderLabTokenType+FixedTokenElement(type:RBRACK, text:])
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IShaderLabIdentifier
              Identifier(type:IDENTIFIER, text:_Overlay2)
            ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
            ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Overlay mode 2")
            ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ISimplePropertyType
              ShaderLabTokenType+KeywordTokenElement(type:FLOAT_KEYWORD, text:Float)
            ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IScalarPropertyValue
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0)
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:    ) spaces: "    "
          IPropertyDeclaration
            IAttribute
              ShaderLabTokenType+FixedTokenElement(type:LBRACK, text:[)
              IShaderLabIdentifier
                Identifier(type:IDENTIFIER, text:KeywordEnum)
              Whitespace(type:WHITESPACE, text:  ) spaces: "  "
              IAttributeParameters
                ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
                IAttributeParameterValues
                  IStringAttributeParameterValue
                    ShaderLabTokenType+GenericTokenElement(type:UNQUOTED_STRING_LITERAL, text:None)
                  ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
                  Whitespace(type:WHITESPACE, text: ) spaces: " "
                  IStringAttributeParameterValue
                    ShaderLabTokenType+GenericTokenElement(type:UNQUOTED_STRING_LITERAL, text:Add)
                  ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
                  Whitespace(type:WHITESPACE, text: ) spaces: " "
                  IStringAttributeParameterValue
                    ShaderLabTokenType+GenericTokenElement(type:UNQUOTED_STRING_LITERAL, text:Multiply)
                ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
              ShaderLabTokenType+FixedTokenElement(type:RBRACK, text:])
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IShaderLabIdentifier
              Identifier(type:IDENTIFIER, text:_Overlay2)
            ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
            ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Overlay mode 2")
            ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ISimplePropertyType
              ShaderLabTokenType+KeywordTokenElement(type:FLOAT_KEYWORD, text:Float)
            ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IScalarPropertyValue
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0)
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:    ) spaces: "    "
          IPropertyDeclaration
            IAttribute
              ShaderLabTokenType+FixedTokenElement(type:LBRACK, text:[)
              IShaderLabIdentifier
                Identifier(type:IDENTIFIER, text:KeywordEnum)
              Whitespace(type:WHITESPACE, text:  ) spaces: "  "
              IAttributeParameters
                ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
                IAttributeParameterValues
                  IStringAttributeParameterValue
                    ShaderLabTokenType+GenericTokenElement(type:UNQUOTED_STRING_LITERAL, text:None)
                  ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
                  Whitespace(type:WHITESPACE, text: ) spaces: " "
                  IStringAttributeParameterValue
                    ShaderLabTokenType+GenericTokenElement(type:UNQUOTED_STRING_LITERAL, text:Add)
                  ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
                  Whitespace(type:WHITESPACE, text: ) spaces: " "
                  IStringAttributeParameterValue
                    ShaderLabTokenType+GenericTokenElement(type:UNQUOTED_STRING_LITERAL, text:Multiply)
                ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
              Whitespace(type:WHITESPACE, text:  ) spaces: "  "
              ShaderLabTokenType+FixedTokenElement(type:RBRACK, text:])
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IShaderLabIdentifier
              Identifier(type:IDENTIFIER, text:_Overlay2)
            ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
            ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Overlay mode 2")
            ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ISimplePropertyType
              ShaderLabTokenType+KeywordTokenElement(type:FLOAT_KEYWORD, text:Float)
            ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IScalarPropertyValue
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0)
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:    ) spaces: "    "
          IPropertyDeclaration
            IAttribute
              ShaderLabTokenType+FixedTokenElement(type:LBRACK, text:[)
              IShaderLabIdentifier
                Identifier(type:IDENTIFIER, text:Toggle)
              ShaderLabTokenType+FixedTokenElement(type:RBRACK, text:])
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IShaderLabIdentifier
              Identifier(type:IDENTIFIER, text:_Invert)
            ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
            ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Invert color?")
            ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ISimplePropertyType
              ShaderLabTokenType+KeywordTokenElement(type:FLOAT_KEYWORD, text:Float)
            ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IScalarPropertyValue
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0)
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:    ) spaces: "    "
          EndOfLineComment(type:END_OF_LINE_COMMENT, text:// Blend mode values) spaces: "// Blend mode values"
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:    ) spaces: "    "
          IPropertyDeclaration
            IAttribute
              ShaderLabTokenType+FixedTokenElement(type:LBRACK, text:[)
              IShaderLabIdentifier
                Identifier(type:IDENTIFIER, text:Enum)
              IAttributeParameters
                ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
                IAttributeParameterValues
                  IStringAttributeParameterValue
                    ShaderLabTokenType+GenericTokenElement(type:UNQUOTED_STRING_LITERAL, text:UnityEngine.Rendering.BlendMode)
                ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
              ShaderLabTokenType+FixedTokenElement(type:RBRACK, text:])
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IShaderLabIdentifier
              Identifier(type:IDENTIFIER, text:_Blend)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
            ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Blend mode")
            ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ISimplePropertyType
              ShaderLabTokenType+KeywordTokenElement(type:FLOAT_KEYWORD, text:Float)
            ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IScalarPropertyValue
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:1)
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:    ) spaces: "    "
          EndOfLineComment(type:END_OF_LINE_COMMENT, text:// A subset of blend mode values, just "One" (value 1) and "SrcAlpha" (value 5).) spaces: "// A subset of blend mode values, just "One" (value 1) and "SrcAlpha" (value 5)."
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:    ) spaces: "    "
          IPropertyDeclaration
            IAttribute
              ShaderLabTokenType+FixedTokenElement(type:LBRACK, text:[)
              IShaderLabIdentifier
                Identifier(type:IDENTIFIER, text:Enum)
              IAttributeParameters
                ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
                IAttributeParameterValues
                  IStringAttributeParameterValue
                    ShaderLabTokenType+GenericTokenElement(type:UNQUOTED_STRING_LITERAL, text:One)
                  ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
                  INumberAttributeParameterValue
                    ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:1)
                  ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
                  IStringAttributeParameterValue
                    ShaderLabTokenType+GenericTokenElement(type:UNQUOTED_STRING_LITERAL, text:SrcAlpha)
                  ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
                  INumberAttributeParameterValue
                    ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:5)
                ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
              ShaderLabTokenType+FixedTokenElement(type:RBRACK, text:])
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IShaderLabIdentifier
              Identifier(type:IDENTIFIER, text:_Blend2)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
            ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Blend mode subset")
            ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ISimplePropertyType
              ShaderLabTokenType+KeywordTokenElement(type:FLOAT_KEYWORD, text:Float)
            ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IScalarPropertyValue
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:1)
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:    ) spaces: "    "
          EndOfLineComment(type:END_OF_LINE_COMMENT, text:// A slider with 3.0 response curve) spaces: "// A slider with 3.0 response curve"
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:    ) spaces: "    "
          IPropertyDeclaration
            IAttribute
              ShaderLabTokenType+FixedTokenElement(type:LBRACK, text:[)
              IShaderLabIdentifier
                Identifier(type:IDENTIFIER, text:PowerSlider)
              IAttributeParameters
                ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
                IAttributeParameterValues
                  INumberAttributeParameterValue
                    ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:3.0)
                ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
              ShaderLabTokenType+FixedTokenElement(type:RBRACK, text:])
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IShaderLabIdentifier
              Identifier(type:IDENTIFIER, text:_Shininess)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
            ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Shininess")
            ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IRangePropertyType
              ShaderLabTokenType+KeywordTokenElement(type:RANGE_KEYWORD, text:Range)
              Whitespace(type:WHITESPACE, text: ) spaces: " "
              ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.01)
              ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
              Whitespace(type:WHITESPACE, text: ) spaces: " "
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:1)
              ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IScalarPropertyValue
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.08)
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:    ) spaces: "    "
          IPropertyDeclaration
            IAttribute
              ShaderLabTokenType+FixedTokenElement(type:LBRACK, text:[)
              IShaderLabIdentifier
                Identifier(type:IDENTIFIER, text:Header)
              IAttributeParameters
                ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
                IAttributeParameterValues
                  IStringAttributeParameterValue
                    ShaderLabTokenType+GenericTokenElement(type:UNQUOTED_STRING_LITERAL, text:Header Text)
                ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
              ShaderLabTokenType+FixedTokenElement(type:RBRACK, text:])
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            NewLine(type:NEW_LINE, text:\n) spaces: "\n"
            Whitespace(type:WHITESPACE, text:    ) spaces: "    "
            IAttribute
              ShaderLabTokenType+FixedTokenElement(type:LBRACK, text:[)
              IShaderLabIdentifier
                Identifier(type:IDENTIFIER, text:Toggle)
              ShaderLabTokenType+FixedTokenElement(type:RBRACK, text:])
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IShaderLabIdentifier
              Identifier(type:IDENTIFIER, text:_Toggle)
            ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
            ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Toggle label text")
            ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ISimplePropertyType
              ShaderLabTokenType+KeywordTokenElement(type:FLOAT_KEYWORD, text:Float)
            ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IScalarPropertyValue
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.0)
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:  ) spaces: "  "
          ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
      NewLine(type:NEW_LINE, text:\n) spaces: "\n"
      ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
  NewLine(type:NEW_LINE, text:\n) spaces: "\n"


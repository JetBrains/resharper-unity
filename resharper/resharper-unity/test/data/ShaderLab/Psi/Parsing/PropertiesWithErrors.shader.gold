Language: PsiLanguageType:SHADERLAB
IShaderLabFile
  Whitespace(type:WHITESPACE, text: ) spaces: " "
  IShaderCommand
    ShaderLabTokenType+KeywordTokenElement(type:SHADER_KEYWORD, text:Shader)
    Whitespace(type:WHITESPACE, text: ) spaces: " "
    IShaderValue
      ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"test")
      Whitespace(type:WHITESPACE, text: ) spaces: " "
      ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
      NewLine(type:NEW_LINE, text:\n) spaces: "\n"
      Whitespace(type:WHITESPACE, text:  ) spaces: "  "
      IPropertiesCommand
        ShaderLabTokenType+KeywordTokenElement(type:PROPERTIES_KEYWORD, text:Properties)
        Whitespace(type:WHITESPACE, text: ) spaces: " "
        IPropertiesValue
          ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
          IPropertyDeclaration
            ErrorElement:Unexpected token
            NewLine(type:NEW_LINE, text:\n) spaces: "\n"
            Whitespace(type:WHITESPACE, text:    ) spaces: "    "
            ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
            ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Wave scale")
            ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IRangePropertyType
              ShaderLabTokenType+KeywordTokenElement(type:RANGE_KEYWORD, text:Range)
              Whitespace(type:WHITESPACE, text: ) spaces: " "
              ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.02)
              ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.15)
              ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IScalarPropertyValue
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.07)
          Whitespace(type:WHITESPACE, text: ) spaces: " "
          EndOfLineComment(type:END_OF_LINE_COMMENT, text:// Missing name) spaces: "// Missing name"
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:    ) spaces: "    "
          IPropertyDeclaration
            IShaderLabIdentifier
              Identifier(type:IDENTIFIER, text:_MissingOpenBrace)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ErrorElement:( expected
              ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Reflection distort")
              ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
              Whitespace(type:WHITESPACE, text: ) spaces: " "
              ShaderLabTokenType+KeywordTokenElement(type:RANGE_KEYWORD, text:Range)
              Whitespace(type:WHITESPACE, text: ) spaces: " "
              ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0)
              ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:1.5)
              ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
              ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IScalarPropertyValue
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.5)
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:    ) spaces: "    "
          IPropertyDeclaration
            IShaderLabIdentifier
              Identifier(type:IDENTIFIER, text:_DisplayNameNotStringLiteral)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
            ErrorElement:"XXX" expected
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:1.0)
              ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
              Whitespace(type:WHITESPACE, text: ) spaces: " "
              ShaderLabTokenType+KeywordTokenElement(type:RANGE_KEYWORD, text:Range)
              Whitespace(type:WHITESPACE, text: ) spaces: " "
              ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0)
              ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:1.5)
              ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
              ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IScalarPropertyValue
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.4)
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:    ) spaces: "    "
          IPropertyDeclaration
            IShaderLabIdentifier
              Identifier(type:IDENTIFIER, text:_DisplayNameMissing)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
            ErrorElement:"XXX" expected
              ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
              Whitespace(type:WHITESPACE, text: ) spaces: " "
              ShaderLabTokenType+KeywordTokenElement(type:RANGE_KEYWORD, text:Range)
              Whitespace(type:WHITESPACE, text: ) spaces: " "
              ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0)
              ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:1.5)
              ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
              ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IScalarPropertyValue
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.4)
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:    ) spaces: "    "
          IPropertyDeclaration
            IShaderLabIdentifier
              Identifier(type:IDENTIFIER, text:_PropertyTypeIncorrect)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
            ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Whatever")
            ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ErrorElement:Property type expected
              Identifier(type:IDENTIFIER, text:Thing)
              ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IScalarPropertyValue
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.5)
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:    ) spaces: "    "
          IPropertyDeclaration
            IShaderLabIdentifier
              Identifier(type:IDENTIFIER, text:_PropertyTypeMissing)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
            ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Whatever")
            ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ErrorElement:Property type expected
              ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IScalarPropertyValue
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.5)
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:    ) spaces: "    "
          IPropertyDeclaration
            IShaderLabIdentifier
              Identifier(type:IDENTIFIER, text:_PropertyTypeMissing2)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
            ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Whatever")
            ErrorElement:, expected
              ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IScalarPropertyValue
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.5)
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:    ) spaces: "    "
          IPropertyDeclaration
            IShaderLabIdentifier
              Identifier(type:IDENTIFIER, text:_TooManyParameters)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
            ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Whatever")
            ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ISimplePropertyType
              ShaderLabTokenType+KeywordTokenElement(type:INT_KEYWORD, text:Int)
            ErrorElement:) expected
              ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
              Whitespace(type:WHITESPACE, text: ) spaces: " "
              Identifier(type:IDENTIFIER, text:SomethingElse)
              ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IScalarPropertyValue
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.5)
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:    ) spaces: "    "
          IPropertyDeclaration
            IShaderLabIdentifier
              Identifier(type:IDENTIFIER, text:_RangeMissingOpenBrace)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
            ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Whatever")
            ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IRangePropertyType
              ShaderLabTokenType+KeywordTokenElement(type:RANGE_KEYWORD, text:Range)
              Whitespace(type:WHITESPACE, text: ) spaces: " "
              ErrorElement:( expected
                ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.3)
                ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
                Whitespace(type:WHITESPACE, text: ) spaces: " "
                ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.1)
            ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            ErrorElement:'=' expected
              ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IScalarPropertyValue
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.3)
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:    ) spaces: "    "
          IPropertyDeclaration
            IShaderLabIdentifier
              Identifier(type:IDENTIFIER, text:_RangeMissingFirstParameter)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
            ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Whatever")
            ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IRangePropertyType
              ShaderLabTokenType+KeywordTokenElement(type:RANGE_KEYWORD, text:Range)
              Whitespace(type:WHITESPACE, text: ) spaces: " "
              ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
              ErrorElement:0.0 expected
                ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
                Whitespace(type:WHITESPACE, text: ) spaces: " "
                ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.1)
            ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            ErrorElement:'=' expected
              ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IScalarPropertyValue
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.3)
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:    ) spaces: "    "
          IPropertyDeclaration
            IShaderLabIdentifier
              Identifier(type:IDENTIFIER, text:_RangeFirstParameterIncorrectType)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
            ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Whatever")
            ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IRangePropertyType
              ShaderLabTokenType+KeywordTokenElement(type:RANGE_KEYWORD, text:Range)
              Whitespace(type:WHITESPACE, text: ) spaces: " "
              ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
              ErrorElement:0.0 expected
                Identifier(type:IDENTIFIER, text:Whatever)
                ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
                Whitespace(type:WHITESPACE, text: ) spaces: " "
                ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.1)
            ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            ErrorElement:'=' expected
              ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IScalarPropertyValue
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.3)
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:    ) spaces: "    "
          IPropertyDeclaration
            IShaderLabIdentifier
              Identifier(type:IDENTIFIER, text:_RangeMissingSecondParameter)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
            ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Whatever")
            ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IRangePropertyType
              ShaderLabTokenType+KeywordTokenElement(type:RANGE_KEYWORD, text:Range)
              Whitespace(type:WHITESPACE, text: ) spaces: " "
              ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.1)
              ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
              ErrorElement:0.0 expected
            ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            ErrorElement:'=' expected
              ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IScalarPropertyValue
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.3)
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:    ) spaces: "    "
          IPropertyDeclaration
            IShaderLabIdentifier
              Identifier(type:IDENTIFIER, text:_RangeSecondParameterIncorrectType)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
            ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Whatever")
            ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IRangePropertyType
              ShaderLabTokenType+KeywordTokenElement(type:RANGE_KEYWORD, text:Range)
              Whitespace(type:WHITESPACE, text: ) spaces: " "
              ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.1)
              ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
              Whitespace(type:WHITESPACE, text: ) spaces: " "
              ErrorElement:0.0 expected
                Identifier(type:IDENTIFIER, text:Whatever)
            ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            ErrorElement:'=' expected
              ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IScalarPropertyValue
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.3)
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:    ) spaces: "    "
          IPropertyDeclaration
            IShaderLabIdentifier
              Identifier(type:IDENTIFIER, text:_RangeMissingClosingBrace)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
            ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Whatever")
            ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IRangePropertyType
              ShaderLabTokenType+KeywordTokenElement(type:RANGE_KEYWORD, text:Range)
              Whitespace(type:WHITESPACE, text: ) spaces: " "
              ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.1)
              ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
              Whitespace(type:WHITESPACE, text: ) spaces: " "
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.3)
              ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
              ErrorElement:')' expected
            ErrorElement:) expected
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IScalarPropertyValue
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.3)
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:    ) spaces: "    "
          IPropertyDeclaration
            IShaderLabIdentifier
              Identifier(type:IDENTIFIER, text:_RangeMissingAllClosingBraces)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
            ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Whatever")
            ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IRangePropertyType
              ShaderLabTokenType+KeywordTokenElement(type:RANGE_KEYWORD, text:Range)
              Whitespace(type:WHITESPACE, text: ) spaces: " "
              ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.1)
              ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
              Whitespace(type:WHITESPACE, text: ) spaces: " "
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.3)
              ErrorElement:) expected
            ErrorElement:) expected
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IScalarPropertyValue
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.3)
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:    ) spaces: "    "
          IPropertyDeclaration
            IShaderLabIdentifier
              Identifier(type:IDENTIFIER, text:_ColorWithWrongType)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
            ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Whatever")
            ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ISimplePropertyType
              ShaderLabTokenType+KeywordTokenElement(type:COLOR_KEYWORD, text:Color)
            ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IVectorPropertyValue
              IVectorLiteral
                ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
                ErrorElement:Numeric literal or referenced property expected
                  Identifier(type:IDENTIFIER, text:Thing)
                  ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
                  Whitespace(type:WHITESPACE, text: ) spaces: " "
                  ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.3)
                  ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
                  Whitespace(type:WHITESPACE, text: ) spaces: " "
                  ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:.3)
                  ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
                  Whitespace(type:WHITESPACE, text: ) spaces: " "
                  ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:.3)
                ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:    ) spaces: "    "
          IPropertyDeclaration
            IShaderLabIdentifier
              Identifier(type:IDENTIFIER, text:_ColorWithMissingValue)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
            ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Whatever")
            ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ISimplePropertyType
              ShaderLabTokenType+KeywordTokenElement(type:COLOR_KEYWORD, text:Color)
            ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IVectorPropertyValue
              IVectorLiteral
                ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
                ErrorElement:Numeric literal or referenced property expected
                  ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
                  Whitespace(type:WHITESPACE, text: ) spaces: " "
                  ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.3)
                  ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
                  Whitespace(type:WHITESPACE, text: ) spaces: " "
                  ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:.3)
                  ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
                  Whitespace(type:WHITESPACE, text: ) spaces: " "
                  ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:.3)
                ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:    ) spaces: "    "
          IPropertyDeclaration
            IShaderLabIdentifier
              Identifier(type:IDENTIFIER, text:_ColorWithMissingOpenBrace)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
            ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Whatever")
            ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ISimplePropertyType
              ShaderLabTokenType+KeywordTokenElement(type:COLOR_KEYWORD, text:Color)
            ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IScalarPropertyValue
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.3)
          IPropertyDeclaration
            ErrorElement:Unexpected token
            ErrorElement:( expected
              ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
              Whitespace(type:WHITESPACE, text: ) spaces: " "
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.3)
              ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
              Whitespace(type:WHITESPACE, text: ) spaces: " "
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:.3)
              ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
              Whitespace(type:WHITESPACE, text: ) spaces: " "
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:.3)
              ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
              NewLine(type:NEW_LINE, text:\n) spaces: "\n"
              Whitespace(type:WHITESPACE, text:    ) spaces: "    "
              Identifier(type:IDENTIFIER, text:_ColorWithMissingClosingBrace)
              Whitespace(type:WHITESPACE, text: ) spaces: " "
              ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
              ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Whatever")
              ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
              Whitespace(type:WHITESPACE, text: ) spaces: " "
              ShaderLabTokenType+KeywordTokenElement(type:COLOR_KEYWORD, text:Color)
              ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IVectorPropertyValue
              IVectorLiteral
                ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
                INumericValue
                  ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.3)
                ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
                Whitespace(type:WHITESPACE, text: ) spaces: " "
                INumericValue
                  ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.3)
                ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
                Whitespace(type:WHITESPACE, text: ) spaces: " "
                INumericValue
                  ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:.3)
                ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
                Whitespace(type:WHITESPACE, text: ) spaces: " "
                INumericValue
                  ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:.3)
                NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                Whitespace(type:WHITESPACE, text:    ) spaces: "    "
                ErrorElement:')' expected
                  Identifier(type:IDENTIFIER, text:_ColorWithTooManyValues)
                  Whitespace(type:WHITESPACE, text: ) spaces: " "
                  ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
                  ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Whatever")
                  ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
                  Whitespace(type:WHITESPACE, text: ) spaces: " "
                  ShaderLabTokenType+KeywordTokenElement(type:COLOR_KEYWORD, text:Color)
                ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
          IPropertyDeclaration
            ErrorElement:Unexpected token
            ErrorElement:( expected
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IVectorPropertyValue
              IVectorLiteral
                ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
                INumericValue
                  ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.3)
                ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
                Whitespace(type:WHITESPACE, text: ) spaces: " "
                INumericValue
                  ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.3)
                ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
                Whitespace(type:WHITESPACE, text: ) spaces: " "
                INumericValue
                  ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:.3)
                ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
                Whitespace(type:WHITESPACE, text: ) spaces: " "
                INumericValue
                  ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:.3)
                ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
                Whitespace(type:WHITESPACE, text: ) spaces: " "
                INumericValue
                  ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:.3)
                ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
                Whitespace(type:WHITESPACE, text: ) spaces: " "
                INumericValue
                  ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:.3)
                ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:    ) spaces: "    "
          IPropertyDeclaration
            IShaderLabIdentifier
              Identifier(type:IDENTIFIER, text:_MissingValue)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
            ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Whatever")
            ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ISimplePropertyType
              ShaderLabTokenType+KeywordTokenElement(type:INT_KEYWORD, text:Int)
            ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
            ErrorElement:Unexpected token
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:    ) spaces: "    "
          IPropertyDeclaration
            IShaderLabIdentifier
              Identifier(type:IDENTIFIER, text:_MissingEquals)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
            ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Whatever")
            ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ISimplePropertyType
              ShaderLabTokenType+KeywordTokenElement(type:INT_KEYWORD, text:Int)
            ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ErrorElement:'=' expected
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.2)
              NewLine(type:NEW_LINE, text:\n) spaces: "\n"
              Whitespace(type:WHITESPACE, text:    ) spaces: "    "
              Identifier(type:IDENTIFIER, text:_TextureWithMissingName)
              Whitespace(type:WHITESPACE, text: ) spaces: " "
              ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
              ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Whatever")
              ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
              Whitespace(type:WHITESPACE, text: ) spaces: " "
              ShaderLabTokenType+KeywordTokenElement(type:TEXTURE_2D_KEYWORD, text:2D)
              ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ErrorElement:Unexpected token
              ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
              ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:    ) spaces: "    "
          IPropertyDeclaration
            IShaderLabIdentifier
              Identifier(type:IDENTIFIER, text:_TextureWithMissingBlock)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
            ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Whatever")
            ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ITextureDimensionPropertyType
              ShaderLabTokenType+KeywordTokenElement(type:TEXTURE_2D_KEYWORD, text:2D)
            ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ITexturePropertyValue
              ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Name")
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:    ) spaces: "    "
          IPropertyDeclaration
            IShaderLabIdentifier
              Identifier(type:IDENTIFIER, text:_TextureWithExtraBlockValues)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
            ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Whatever")
            ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ITextureDimensionPropertyType
              ShaderLabTokenType+KeywordTokenElement(type:TEXTURE_2D_KEYWORD, text:2D)
            ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ITexturePropertyValue
              ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Name")
              Whitespace(type:WHITESPACE, text: ) spaces: " "
              ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
              Whitespace(type:WHITESPACE, text: ) spaces: " "
              ErrorElement:Unexpected token
                Identifier(type:IDENTIFIER, text:Thing)
              Whitespace(type:WHITESPACE, text: ) spaces: " "
              ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:    ) spaces: "    "
          IPropertyDeclaration
            IShaderLabIdentifier
              Identifier(type:IDENTIFIER, text:_TextureWithExtraBlockValues2)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
            ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Whatever")
            ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ITextureDimensionPropertyType
              ShaderLabTokenType+KeywordTokenElement(type:TEXTURE_2D_KEYWORD, text:2D)
            ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ITexturePropertyValue
              ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Name")
              Whitespace(type:WHITESPACE, text: ) spaces: " "
              ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
              Whitespace(type:WHITESPACE, text: ) spaces: " "
              ErrorElement:Unexpected token
                Identifier(type:IDENTIFIER, text:Thing)
                ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
                Whitespace(type:WHITESPACE, text: ) spaces: " "
                Identifier(type:IDENTIFIER, text:Whatever)
                ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
                ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
                ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
                Whitespace(type:WHITESPACE, text: ) spaces: " "
                Identifier(type:IDENTIFIER, text:Stuff)
                ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
                Whitespace(type:WHITESPACE, text: ) spaces: " "
                ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
                ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
              Whitespace(type:WHITESPACE, text:  ) spaces: "  "
              ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:  ) spaces: "  "
          ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
      NewLine(type:NEW_LINE, text:\n) spaces: "\n"
      ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
  NewLine(type:NEW_LINE, text:\n) spaces: "\n"


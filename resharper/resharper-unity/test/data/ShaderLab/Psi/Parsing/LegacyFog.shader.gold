Language: PsiLanguageType:SHADERLAB
IShaderLabFile
  IShaderCommand
    ShaderLabTokenType+KeywordTokenElement(type:SHADER_KEYWORD, text:Shader)
    Whitespace(type:WHITESPACE, text: ) spaces: " "
    IShaderValue
      ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Solid Red")
      NewLine(type:NEW_LINE, text:\n) spaces: "\n"
      ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
      NewLine(type:NEW_LINE, text:\n) spaces: "\n"
      Whitespace(type:WHITESPACE, text:    ) spaces: "    "
      IPropertiesCommand
        ShaderLabTokenType+KeywordTokenElement(type:PROPERTIES_KEYWORD, text:Properties)
        Whitespace(type:WHITESPACE, text: ) spaces: " "
        IPropertiesValue
          ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:        ) spaces: "        "
          IPropertyDeclaration
            IShaderLabIdentifier
              Identifier(type:IDENTIFIER, text:_Color)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
            ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Main Color")
            ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ISimplePropertyType
              ShaderLabTokenType+KeywordTokenElement(type:COLOR_KEYWORD, text:COLOR)
            ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IVectorPropertyValue
              IVectorLiteral
                ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
                INumericValue
                  ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:1)
                ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
                INumericValue
                  ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:1)
                ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
                INumericValue
                  ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:1)
                ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
                INumericValue
                  ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:1)
                ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:        ) spaces: "        "
          IPropertyDeclaration
            IShaderLabIdentifier
              Identifier(type:IDENTIFIER, text:_Density)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
            ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Density")
            ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IRangePropertyType
              ShaderLabTokenType+KeywordTokenElement(type:RANGE_KEYWORD, text:Range)
              Whitespace(type:WHITESPACE, text: ) spaces: " "
              ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.01)
              ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
              Whitespace(type:WHITESPACE, text: ) spaces: " "
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:1)
              ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IScalarPropertyValue
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.7)
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:        ) spaces: "        "
          IPropertyDeclaration
            IShaderLabIdentifier
              Identifier(type:IDENTIFIER, text:_Min)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
            ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Min")
            ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IRangePropertyType
              ShaderLabTokenType+KeywordTokenElement(type:RANGE_KEYWORD, text:Range)
              Whitespace(type:WHITESPACE, text: ) spaces: " "
              ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.01)
              ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
              Whitespace(type:WHITESPACE, text: ) spaces: " "
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:1)
              ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IScalarPropertyValue
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.7)
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:        ) spaces: "        "
          IPropertyDeclaration
            IShaderLabIdentifier
              Identifier(type:IDENTIFIER, text:_Max)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
            ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Max")
            ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IRangePropertyType
              ShaderLabTokenType+KeywordTokenElement(type:RANGE_KEYWORD, text:Range)
              Whitespace(type:WHITESPACE, text: ) spaces: " "
              ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.01)
              ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
              Whitespace(type:WHITESPACE, text: ) spaces: " "
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:1)
              ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IScalarPropertyValue
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.7)
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:    ) spaces: "    "
          ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
      NewLine(type:NEW_LINE, text:\n) spaces: "\n"
      Whitespace(type:WHITESPACE, text:    ) spaces: "    "
      IShaderBlock
        ISubShaderCommand
          ShaderLabTokenType+KeywordTokenElement(type:SUB_SHADER_KEYWORD, text:SubShader)
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:    ) spaces: "    "
          ISubShaderValue
            ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
            NewLine(type:NEW_LINE, text:\n) spaces: "\n"
            Whitespace(type:WHITESPACE, text:        ) spaces: "        "
            IPass
              ITexturePassDef
                ShaderLabTokenType+KeywordTokenElement(type:PASS_KEYWORD, text:Pass)
                NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                Whitespace(type:WHITESPACE, text:        ) spaces: "        "
                ITexturePassValue
                  ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
                  NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                  Whitespace(type:WHITESPACE, text:            ) spaces: "            "
                  IFogCommand
                    ShaderLabTokenType+KeywordTokenElement(type:FOG_KEYWORD, text:Fog)
                    Whitespace(type:WHITESPACE, text: ) spaces: " "
                    IFogValue
                      ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
                      Whitespace(type:WHITESPACE, text: ) spaces: " "
                      IModeCommand
                        ShaderLabTokenType+KeywordTokenElement(type:MODE_KEYWORD, text:Mode)
                        Whitespace(type:WHITESPACE, text: ) spaces: " "
                        IModeValue
                          ShaderLabTokenType+KeywordTokenElement(type:OFF_KEYWORD, text:Off)
                      Whitespace(type:WHITESPACE, text: ) spaces: " "
                      ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
                  NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                  Whitespace(type:WHITESPACE, text:        ) spaces: "        "
                  ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
            NewLine(type:NEW_LINE, text:\n) spaces: "\n"
            Whitespace(type:WHITESPACE, text:        ) spaces: "        "
            IPass
              ITexturePassDef
                ShaderLabTokenType+KeywordTokenElement(type:PASS_KEYWORD, text:Pass)
                NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                Whitespace(type:WHITESPACE, text:        ) spaces: "        "
                ITexturePassValue
                  ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
                  NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                  Whitespace(type:WHITESPACE, text:            ) spaces: "            "
                  IFogCommand
                    ShaderLabTokenType+KeywordTokenElement(type:FOG_KEYWORD, text:Fog)
                    NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                    Whitespace(type:WHITESPACE, text:            ) spaces: "            "
                    IFogValue
                      ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
                      NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                      Whitespace(type:WHITESPACE, text:                ) spaces: "                "
                      IModeCommand
                        ShaderLabTokenType+KeywordTokenElement(type:MODE_KEYWORD, text:Mode)
                        Whitespace(type:WHITESPACE, text: ) spaces: " "
                        IModeValue
                          ShaderLabTokenType+KeywordTokenElement(type:GLOBAL_KEYWORD, text:Global)
                      NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                      Whitespace(type:WHITESPACE, text:                ) spaces: "                "
                      IColorCommand
                        ShaderLabTokenType+KeywordTokenElement(type:COLOR_KEYWORD, text:Color)
                        Whitespace(type:WHITESPACE, text: ) spaces: " "
                        IColorValue
                          IVectorLiteral
                            ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
                            INumericValue
                              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:1)
                            ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
                            Whitespace(type:WHITESPACE, text: ) spaces: " "
                            INumericValue
                              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:1)
                            ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
                            Whitespace(type:WHITESPACE, text: ) spaces: " "
                            INumericValue
                              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:1)
                            ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
                            Whitespace(type:WHITESPACE, text: ) spaces: " "
                            INumericValue
                              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:1)
                            ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
                      NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                      Whitespace(type:WHITESPACE, text:                ) spaces: "                "
                      IDensityCommand
                        ShaderLabTokenType+KeywordTokenElement(type:DENSITY_KEYWORD, text:Density)
                        Whitespace(type:WHITESPACE, text: ) spaces: " "
                        INumericValue
                          ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:134)
                      NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                      Whitespace(type:WHITESPACE, text:                ) spaces: "                "
                      IRangeCommand
                        ShaderLabTokenType+KeywordTokenElement(type:RANGE_KEYWORD, text:Range)
                        Whitespace(type:WHITESPACE, text: ) spaces: " "
                        IRangeValue
                          INumericValue
                            ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:120)
                          ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
                          Whitespace(type:WHITESPACE, text: ) spaces: " "
                          INumericValue
                            ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:140)
                      NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                      Whitespace(type:WHITESPACE, text:            ) spaces: "            "
                      ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
                  NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                  Whitespace(type:WHITESPACE, text:        ) spaces: "        "
                  ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
            NewLine(type:NEW_LINE, text:\n) spaces: "\n"
            Whitespace(type:WHITESPACE, text:        ) spaces: "        "
            IPass
              ITexturePassDef
                ShaderLabTokenType+KeywordTokenElement(type:PASS_KEYWORD, text:Pass)
                NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                Whitespace(type:WHITESPACE, text:        ) spaces: "        "
                ITexturePassValue
                  ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
                  NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                  Whitespace(type:WHITESPACE, text:            ) spaces: "            "
                  IFogCommand
                    ShaderLabTokenType+KeywordTokenElement(type:FOG_KEYWORD, text:Fog)
                    NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                    Whitespace(type:WHITESPACE, text:            ) spaces: "            "
                    IFogValue
                      ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
                      NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                      Whitespace(type:WHITESPACE, text:                ) spaces: "                "
                      IModeCommand
                        ShaderLabTokenType+KeywordTokenElement(type:MODE_KEYWORD, text:Mode)
                        Whitespace(type:WHITESPACE, text: ) spaces: " "
                        IModeValue
                          ShaderLabTokenType+KeywordTokenElement(type:EXP2_KEYWORD, text:Exp2)
                      NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                      Whitespace(type:WHITESPACE, text:                ) spaces: "                "
                      IColorCommand
                        ShaderLabTokenType+KeywordTokenElement(type:COLOR_KEYWORD, text:Color)
                        Whitespace(type:WHITESPACE, text: ) spaces: " "
                        IColorValue
                          IVariableReference
                            ShaderLabTokenType+FixedTokenElement(type:LBRACK, text:[)
                            IReferenceName
                              IShaderLabIdentifier
                                Identifier(type:IDENTIFIER, text:_Color)
                            ShaderLabTokenType+FixedTokenElement(type:RBRACK, text:])
                      NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                      Whitespace(type:WHITESPACE, text:                ) spaces: "                "
                      IDensityCommand
                        ShaderLabTokenType+KeywordTokenElement(type:DENSITY_KEYWORD, text:Density)
                        Whitespace(type:WHITESPACE, text: ) spaces: " "
                        INumericValue
                          IVariableReference
                            ShaderLabTokenType+FixedTokenElement(type:LBRACK, text:[)
                            IReferenceName
                              IShaderLabIdentifier
                                Identifier(type:IDENTIFIER, text:_Density)
                            ShaderLabTokenType+FixedTokenElement(type:RBRACK, text:])
                      NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                      Whitespace(type:WHITESPACE, text:                ) spaces: "                "
                      IRangeCommand
                        ShaderLabTokenType+KeywordTokenElement(type:RANGE_KEYWORD, text:Range)
                        Whitespace(type:WHITESPACE, text: ) spaces: " "
                        IRangeValue
                          INumericValue
                            IVariableReference
                              ShaderLabTokenType+FixedTokenElement(type:LBRACK, text:[)
                              IReferenceName
                                IShaderLabIdentifier
                                  Identifier(type:IDENTIFIER, text:_Min)
                              ShaderLabTokenType+FixedTokenElement(type:RBRACK, text:])
                          ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
                          Whitespace(type:WHITESPACE, text: ) spaces: " "
                          INumericValue
                            IVariableReference
                              ShaderLabTokenType+FixedTokenElement(type:LBRACK, text:[)
                              IReferenceName
                                IShaderLabIdentifier
                                  Identifier(type:IDENTIFIER, text:_Max)
                              ShaderLabTokenType+FixedTokenElement(type:RBRACK, text:])
                      NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                      Whitespace(type:WHITESPACE, text:            ) spaces: "            "
                      ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
                  NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                  Whitespace(type:WHITESPACE, text:        ) spaces: "        "
                  ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
            NewLine(type:NEW_LINE, text:\n) spaces: "\n"
            Whitespace(type:WHITESPACE, text:    ) spaces: "    "
            ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
      NewLine(type:NEW_LINE, text:\n) spaces: "\n"
      ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
  NewLine(type:NEW_LINE, text:\n) spaces: "\n"


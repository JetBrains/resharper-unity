//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JetBrains.ReSharper.Plugins.Unity.Resources.Icons
{
    public sealed class InsightUnityIcons
    {
        #region InsightHot
        /// <summary>
        ///	<para>
        ///		<para>InsightHot Themed Icon generated identifiers:</para>
        ///		<para>— <see cref="InsightHot"></see> identifier class, for use in attributes, XAML, and generic parameters;</para>
        ///		<para>— <see cref="Id"></see> identifier object, as a field in the identifier class, for use where an <see cref="JetBrains.UI.Icons.IconId"></see> value is expected.</para>
        ///		<para>
        ///			<code>
        ///
        ///
        ///
        ///
        ///
        ///
        ///
        ///
        ///
        ///
        ///
        ///
        ///
        ///
        ///
        ///
        ///</code>
        ///		</para>
        ///	</para>
        ///</summary>
        ///<remarks>
        ///	<para>For details on Themed Icons and their use, see Remarks on the outer class.</para>
        ///</remarks>
        ///<example>
        ///	<code>&lt;Image Source="{icons:ThemedIcon myres:BumigydThemedIconsThemedIcons+InsightHot}" /&gt;        &lt;!-- XAML --&gt;</code>
        ///</example>
        ///<example>
        ///	<code>[Item(Name="Sample", Icon=typeof(BumigydThemedIconsThemedIcons.InsightHot))]        // C# Type attribute</code>
        ///</example>
        ///<example>
        ///	<code>IconId iconid = BumigydThemedIconsThemedIcons.InsightHot.Id;        // IconId identifier object</code>
        ///</example>
        ///<example>
        ///	<code>themediconmanager.GetIcon&lt;BumigydThemedIconsThemedIcons.InsightHot&gt;()        // Icon image for rendering</code>
        ///</example>
        [global::JetBrains.Application.Icons.CompiledIconsCs.CompiledIconCsAttribute()]
        public sealed class InsightHot : global::JetBrains.Application.Icons.CompiledIconsCs.CompiledIconCsClass
        {

            /// <inheritdoc cref="InsightHot">identifier class</inheritdoc>
            public static global::JetBrains.UI.Icons.IconId Id = new global::JetBrains.Application.Icons.CompiledIconsCs.CompiledIconCsId(typeof(InsightHot));

            /// <summary>Loads the image for Themed Icon InsightHot theme aspect Default.</summary>
            public global::JetBrains.Util.Icons.TiImage Load_Default()
            {
                return global::JetBrains.Util.Icons.TiImageConverter.FromTiSvg(@"<svg ti:v='1' width='16' height='16' viewBox='0,0,16,16' xmlns='http://www.w3.org/2000/svg' xmlns:ti='urn:schemas-jetbrains-com:tisvg'><g><path fill-rule='evenodd' d='M9.6387,11.2656C9.2747,12.1556,8.2987,13.0716,7.2817,13.0716C6.5867,13.0716,5.4207,12.7716,5.4207,10.7626C5.4207,8.9766,6.8137,7.0926,7.5097,6.0236C7.7767,6.9326,7.8567,8.7776,7.3487,10.1946C8.2107,9.8836,9.5767,9.0286,10.0757,7.8686C10.1527,8.6016,10.0827,10.1796,9.6387,11.2656ZM11.0437,3.6256C10.8877,4.6966,10.9667,6.0416,8.8007,7.0786C9.4837,4.3896,8.6857,1.7646,7.2027,0.9996C7.7447,4.7166,3.9997,6.4586,3.9997,10.0436C3.9997,12.9826,5.5857,13.9996,7.1087,13.9996C11.7897,13.9996,11.9997,8.8806,11.9997,7.3636C11.9997,5.8576,11.6917,4.4496,11.0437,3.6256Z' fill='#9AA7B0'/></g></svg>");
            }

            /// <summary>Returns the set of theme images for Themed Icon InsightHot.</summary>
            public override global::JetBrains.Application.Icons.CompiledIconsCs.CompiledIconCsIdOwner.ThemedIconThemeImage[] GetThemeImages()
            {
                return new global::JetBrains.Application.Icons.CompiledIconsCs.CompiledIconCsIdOwner.ThemedIconThemeImage[] {
                        new global::JetBrains.Application.Icons.CompiledIconsCs.CompiledIconCsIdOwner.ThemedIconThemeImage("Default", new global::JetBrains.Application.Icons.CompiledIconsCs.CompiledIconCsIdOwner.LoadImageDelegate(this.Load_Default))};
            }
        }
        #endregion


		#region InsightUnity
		/// <summary>
		///	<para>
		///		<para>InsightUnity Themed Icon generated identifiers:</para>
		///		<para>— <see cref="InsightUnity"></see> identifier class, for use in attributes, XAML, and generic parameters;</para>
		///		<para>— <see cref="Id"></see> identifier object, as a field in the identifier class, for use where an <see cref="JetBrains.UI.Icons.IconId"></see> value is expected.</para>
		///		<para>
		///			<code>
		///                                 
		///                                 
		///                                 
		///                                 
		///                                 
		///                                 
		///                                 
		///                                 
		///                                 
		///                                 
		///                                 
		///                                 
		///                                 
		///                                 
		///                                 
		///                                 
		///</code>
		///		</para>
		///	</para>
		///</summary>
		///<remarks>
		///	<para>For details on Themed Icons and their use, see Remarks on the outer class.</para>
		///</remarks>
		///<example>
		///	<code>&lt;Image Source="{icons:ThemedIcon myres:FefaxulThemedIconsThemedIcons+InsightUnity}" /&gt;        &lt;!-- XAML --&gt;</code>
		///</example>
		///<example>
		///	<code>[Item(Name="Sample", Icon=typeof(FefaxulThemedIconsThemedIcons.InsightUnity))]        // C# Type attribute</code>
		///</example>
		///<example>
		///	<code>IconId iconid = FefaxulThemedIconsThemedIcons.InsightUnity.Id;        // IconId identifier object</code>
		///</example>
		///<example>
		///	<code>themediconmanager.GetIcon&lt;FefaxulThemedIconsThemedIcons.InsightUnity&gt;()        // Icon image for rendering</code>
		///</example>
		[global::JetBrains.Application.Icons.CompiledIconsCs.CompiledIconCsAttribute()]
		public sealed class InsightUnity : global::JetBrains.Application.Icons.CompiledIconsCs.CompiledIconCsClass
		{
			
			/// <inheritdoc cref="InsightUnity">identifier class</inheritdoc>
			public static global::JetBrains.UI.Icons.IconId Id = new global::JetBrains.Application.Icons.CompiledIconsCs.CompiledIconCsId(typeof(InsightUnity));
			
			/// <summary>Loads the image for Themed Icon InsightUnity theme aspect Default.</summary>
			public global::JetBrains.Util.Icons.TiImage Load_Default()
			{
				return global::JetBrains.Util.Icons.TiImageConverter.FromTiSvg(@"<svg ti:v='1' width='16' height='16' viewBox='0,0,16,16' xmlns='http://www.w3.org/2000/svg' xmlns:ti='urn:schemas-jetbrains-com:tisvg'><g><path d='M13,9.452L13,4.732L9,2.423L9,4.732L10.214,5.433L8,6.738L5.786,5.433L7,4.732L7,2.423L3,4.732L3,9.453L5,8.274L5,6.828L7.2,8.124L7.2,10.717L5.984,10.015L4.005,11.182L8,13.488L11.995,11.181L10.016,10.015L8.8,10.717L8.8,8.124L11,6.828L11,8.274L13,9.452ZM13,9.452' fill='#9AA7B0'/></g></svg>");
			}
			
			/// <summary>Returns the set of theme images for Themed Icon InsightUnity.</summary>
			public override global::JetBrains.Application.Icons.CompiledIconsCs.CompiledIconCsIdOwner.ThemedIconThemeImage[] GetThemeImages()
			{
				return new global::JetBrains.Application.Icons.CompiledIconsCs.CompiledIconCsIdOwner.ThemedIconThemeImage[] {
						new global::JetBrains.Application.Icons.CompiledIconsCs.CompiledIconCsIdOwner.ThemedIconThemeImage("Default", new global::JetBrains.Application.Icons.CompiledIconsCs.CompiledIconCsIdOwner.LoadImageDelegate(this.Load_Default))};
			}
		}
		#endregion
    }
}

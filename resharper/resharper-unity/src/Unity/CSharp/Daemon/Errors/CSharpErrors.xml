<?xml version="1.0" encoding="utf-8"?>
<Errors language="C#" configurableSeverityImplementationLanguage="CSHARP" baseClass="CSharpUnityHighlightingBase, IUnityAnalyzerHighlighting">
  <Usings>
    JetBrains.ReSharper.Psi.CSharp;
    JetBrains.ReSharper.Psi.CSharp.Tree;
    JetBrains.ReSharper.Plugins.Unity.CSharp.Daemon.Errors;
    JetBrains.ReSharper.Plugins.Unity.CSharp.Daemon.Stages.Highlightings;
    JetBrains.ReSharper.Plugins.Unity.CSharp.Psi.Resolve;
    JetBrains.ReSharper.Plugins.Unity.CSharp.Daemon.Stages.PerformanceCriticalCodeAnalysis.Highlightings;
    JetBrains.ReSharper.Plugins.Unity.UnityEditorIntegration.Api;
    Strings = JetBrains.ReSharper.Plugins.Unity.Resources.Strings;
  </Usings>
  
  <!-- Register the static severity groups. This is mostly used in grouping items in SWEA results.
       The groups should be different to any configurable severity groups -->
  <StaticSeverityGroups>
    <Group name="Unity Errors" key="UnityErrors" />
    <Group name="Unity Warnings" key="UnityWarnings" />
  </StaticSeverityGroups>
  
  <!-- Register the configurable severities
       Can take a child Tag or Group element
       * Tag is configurable severity without a group
       * Group[@name] specifies the name of the group, expects child Tag elements.
         Note that the group name/title should be registered with
         [assembly: RegisterConfigurableHighlightingsGroup(name, "Title")]
       * Tag[@name] is the HIGHLIGHTING_ID of a warning/error. It is treated as a string
         literal and quoted. It is referenced in Warning[@configurableSeverity]
       * Tag[@default] is the default severity. Just the enum value, no leading "Severity."
       * Tag[@type] is optional. Default is "simple". Other options include "global",
         "localAndGlobal"
       * Tag[@externalName] is also the HIGHLIGHTING_ID, but is treated verbatim, rather
         than as a string literal. This allows for using the fully qualified name of the
         HIGHLIGHTING_ID
       * Tag[@alternatives] the value of RegisterConfigurableSeverityAttribute.AlternativeIDs
       * Tag/Title is the short title of the severity, usually matching the highlight's MESSAGE
       * Tag/Description is a longer description, shown in the options pages
       * Tag/CompoundItemName only used if Tag[@type] is missing or "simple". Sets the compound
         item name
       -->
  <SeverityConfiguration>
    <Group name="UnityHighlightingGroupIds.Unity">
      <Tag externalName="DuplicateEventFunctionWarning.HIGHLIGHTING_ID" default="WARNING">
        <Title resourceName="EventFunctionWithTheSameNameIsAlreadyDeclared" resourceType="Strings" />
        <Description resourceName="EventFunctionWithTheSameNameIsAlreadyDeclared2" resourceType="Strings" />
      </Tag>
      <Tag externalName="ExpectedComponentWarning.HIGHLIGHTING_ID" default="WARNING">
        <Title resourceName="ExpectedTypeDerivedFromComponentOrMonoBehaviour" resourceType="Strings" />
        <Description resourceName="ExpectedBuiltInTypeDerivedFromComponentOrUserTypeDerivedFromMonoBehaviour" resourceType="Strings" />
      </Tag>
      <Tag externalName="ExpectedScriptableObjectWarning.HIGHLIGHTING_ID" default="WARNING">
        <Title resourceName="ExpectedTypeDerivedFromScriptableObject" resourceType="Strings" />
        <Description resourceName="ExpectedTypeDerivedFromScriptableObject3" resourceType="Strings" />
      </Tag>
      <Tag externalName="ExplicitTagStringComparisonWarning.HIGHLIGHTING_ID" default="WARNING">
        <Title resourceName="UseCompareTagInsteadOfExplicitStringComparison" resourceType="Strings" />
        <Description resourceName="ExplicitStringComparisonWithGameObjectTagOrComponentTagIsInefficientUseTheCompareTagMethodInstead" resourceType="Strings" />
      </Tag>
      <Tag externalName="IncorrectMonoBehaviourInstantiationWarning.HIGHLIGHTING_ID" default="WARNING">
        <Title resourceName="MonoBehaviourInstancesMustBeInstantiatedWithGameObjectAddComponentTInsteadOfnew" resourceType="Strings" />
        <Description resourceName="UsingnewToInstantiateAClassDerivedFromMonoBehaviourWillNotAttachItToAGameObjectInstanceAndUnityWillNotCallAnyEventFunctionsCreateANewInstanceUsingGameObjectAddComponentT" resourceType="Strings" />
      </Tag>
      <Tag externalName="IncorrectScriptableObjectInstantiationWarning.HIGHLIGHTING_ID" default="WARNING">
        <Title resourceName="ScriptableObjectInstancesMustBeInstantiatedWithScriptableObjectCreateInstanceTInsteadOfnew" resourceType="Strings" />
        <Description resourceName="UsingnewToInstantiateAClassDerivedFromScriptableObjectMeansThatUnityWillNotCallAnyEventFunctionsCreateANewInstanceUsingGameObjectAddComponentT" resourceType="Strings" />
      </Tag>
      <Tag externalName="IncorrectSignatureWarning.HIGHLIGHTING_ID" default="WARNING">
        <Title resourceName="IncorrectMethodSignature" resourceType="Strings" />
        <Description resourceName="MethodDoesNotMatchExpectedSignature" resourceType="Strings" />
      </Tag>
      <Tag externalName="InefficientPropertyAccessWarning.HIGHLIGHTING_ID" default="WARNING">
        <Title resourceName="RepeatedAccessOfPropertyOnBuiltInComponentIsInefficient" resourceType="Strings" />
        <Description resourceName="SomeUnityObjectPropertiesResultInNativeMethodsCallsAndRepeatedlyAccessingThePropertyIsInefficientIntroduceAVariableToLocallyCacheThePropertyValue" resourceType="Strings" />
      </Tag>
      <Tag externalName="InstantiateWithoutParentWarning.HIGHLIGHTING_ID" default="WARNING">
        <Title resourceName="SettingparentPropertyImmediatelyAfterObjectInstantiationIsInefficient" resourceType="Strings" />
        <Description resourceName="InstantiatingAUnityObjectAndSettingTheparentPropertyAsSeparateOperationsIsInefficientAsTheTransformHierarchyIsCreatedAndImmediatelyReplacedCombineSettingTheparentPropertyWithTheCallToInstantiateTheObject" resourceType="Strings" />
      </Tag>
      <!-- TODO: Merge this with ExpectedComponentWarning? -->
      <Tag externalName="ParameterNotDerivedFromComponentWarning.HIGHLIGHTING_ID" default="WARNING">
        <Title resourceName="ParameterShouldBeDerivedFromComponent" resourceType="Strings" />
        <Description resourceName="ParameterShouldBeDerivedFromComponent4" resourceType="Strings" />
      </Tag>
      <Tag externalName="PossibleMisapplicationOfAttributeToMultipleFieldsWarning.HIGHLIGHTING_ID" default="WARNING">
        <Title resourceName="PossibleIncorrectApplicationOfAttributeToMultipleFields" resourceType="Strings" />
        <Description resourceName="ApplyingAnAttributeToASingleDeclarationContainingMultipleFieldsWillApplyTheAttributeToEachFieldTheHighlightedAttributeEGFormerlySerializedAsIsIntendedToBeAppliedOnlyToASingleFieldPreferAnExplicitApplicationToASingleFieldInASingleDeclaration" resourceType="Strings" />
      </Tag>
      <Tag externalName="PreferAddressByIdToGraphicsParamsWarning.HIGHLIGHTING_ID" default="WARNING">
        <Title resourceName="StringBasedGraphicsPropertyLookupIsInefficient" resourceType="Strings" />
        <Description resourceName="StringBasedPropertyLookupIsInefficientAsEachTimeTheMethodIsCalledTheStringNameIsConvertedIntoAnIntegerValuePreferCalculatingTheIntegerValueOnceAndCachingTheResult" resourceType="Strings" />
      </Tag>
      <Tag externalName="PreferGenericMethodOverloadWarning.HIGHLIGHTING_ID" default="WARNING">
        <Title resourceName="StringBasedLookupOfComponentTypeIsInefficient" resourceType="Strings" />
        <Description resourceName="UsingAStringTypeNameToLookUpAComponentIsSlowerThanSpecifyingTheTypeAsAGenericTypeParameter" resourceType="Strings" />
      </Tag>
      <Tag externalName="PreferNonAllocApiWarning.HIGHLIGHTING_ID" default="WARNING">
        <Title resourceName="AlternativeNonAllocatingMethodAvailable" resourceType="Strings" />
        <Description resourceName="AnAlternativeMethodIsAvailableThatAvoidsAllocationAndReusesAnExistingBuffer" resourceType="Strings" />
      </Tag>
      <Tag externalName="PropertyDrawerOnGUIBaseWarning.HIGHLIGHTING_ID" default="WARNING">
        <Title resourceName="AvoidbaseOnGUIInClassesDerivedFromPropertyDrawer" resourceType="Strings" />
        <Description resourceName="TheDefaultImplementationForOnGUIInPropertyDrawerWillPrintNoGUIImplementedInTheUnityInspector" resourceType="Strings" />
      </Tag>
      <Tag externalName="RedundantAttributeOnTargetWarning.HIGHLIGHTING_ID" default="WARNING">
        <Title resourceName="AttributeIsRedundantWhenAppliedToThisDeclarationType" resourceType="Strings" />
        <CompoundItemName resourceName="RedundantAttributeUsage" resourceType="Strings" />
        <Description resourceName="TheAttributeDoesNotDefineAnyRestrictionsOnValidTargetsButIsOnlyUsefulWhenAppliedToSpecificDeclarationsEGFieldClassOrMethod" resourceType="Strings" />
      </Tag>
      <Tag externalName="RedundantEventFunctionWarning.HIGHLIGHTING_ID" default="WARNING">
        <Title resourceName="RedundantUnityEventFunction" resourceType="Strings" />
        <Description resourceName="EmptyUnityEventFunctionsAreStillCalledFromNativeCodeWhichAffectsPerformance" resourceType="Strings" />
      </Tag>
      <Tag externalName="RedundantFormerlySerializedAsAttributeWarning.HIGHLIGHTING_ID" default="WARNING">
        <Title resourceName="RedundantFormerlySerializedAsAttribute" resourceType="Strings" />
        <CompoundItemName resourceName="RedundantAttributeUsage" resourceType="Strings" />
        <Description resourceName="TheFormerlySerializedAsAttributeIsOnlyValidOnUnitySerializedFieldsItCanAlsoBeRedundantIfTheNameArgumentMatchesTheCurrentNameOfTheField" resourceType="Strings" />
      </Tag>
      <Tag externalName="RedundantHideInInspectorAttributeWarning.HIGHLIGHTING_ID" default="WARNING">
        <Title resourceName="RedundantHideInInspectorAttribute" resourceType="Strings" />
        <CompoundItemName resourceName="RedundantAttributeUsage" resourceType="Strings" />
        <Description resourceName="TheHideInInspectorAttributeOnlyAppliesToSerialisedFields" resourceType="Strings" />
      </Tag>
      <Tag externalName="RedundantInitializeOnLoadAttributeWarning.HIGHLIGHTING_ID" default="WARNING">
        <Title resourceName="RedundantInitializeOnLoadAttribute" resourceType="Strings" />
        <CompoundItemName resourceName="RedundantAttributeUsage" resourceType="Strings" />
        <Description resourceName="TheInitializeOnLoadAttributeIsRedundantWhenTheStaticConstructorIsMissing" resourceType="Strings" />
      </Tag>
      <Tag externalName="RedundantSerializeFieldAttributeWarning.HIGHLIGHTING_ID" default="WARNING">
        <Title resourceName="RedundantSerializeFieldAttribute" resourceType="Strings" />
        <CompoundItemName resourceName="RedundantAttributeUsage" resourceType="Strings" />
        <Description resourceName="UnityWillIgnoreTheSerializeFieldAttributeIfAFieldIsAlsoMarkedWithTheNonSerializedAttribute" resourceType="Strings" />
      </Tag>
      <Tag externalName="StringLiteralReferenceIncorrectSignatureWarning.HIGHLIGHTING_ID" default="WARNING">
        <Title resourceName="MethodReferencedInStringLiteralDoesNotHaveTheExpectedSignature" resourceType="Strings" />
        <Description resourceName="MethodReferencedInStringLiteralDoesNotHaveTheExpectedSignature5" resourceType="Strings" />
      </Tag>
      <Tag externalName="UnityObjectNullCoalescingWarning.HIGHLIGHTING_ID" default="WARNING">
        <Title resourceName="OnATypeDerivingFromUnityEngineObjectBypassesTheLifetimeCheckOnTheUnderlyingUnityEngineObject" resourceType="Strings" />
        <CompoundItemName resourceName="PossibleUnintendedBypassOfLifetimeCheckOfUnderlyingUnityEngineObject" resourceType="Strings" />
        <Description resourceName="TheNullCoalescingOperatorDoesNotCallTheCustomEqualityOperatorsDefinedOnUnityEngineObjectWhichWillCheckToSeeIfTheUnderlyingUnityEngineObjectHasBeenDestroyedPreferAnExplicitNullComparisonOrImplicitBoolComparisonIfTheLifetimeCheckIsIntendedOrExplicitlyUseobjectReferenceEqualsForAStandardAndQuickerCLRNullCheck" resourceType="Strings" />
      </Tag>
      <Tag externalName="UnityObjectNullPropagationWarning.HIGHLIGHTING_ID" default="WARNING">
        <Title resourceName="OnATypeDerivingFromUnityEngineObjectBypassesTheLifetimeCheckOnTheUnderlyingUnityEngineObject6" resourceType="Strings" />
        <CompoundItemName resourceName="PossibleUnintendedBypassOfLifetimeCheckOfUnderlyingUnityEngineObject" resourceType="Strings" />
        <Description resourceName="TheNullPropagatingOperatorDoesNotCallTheCustomEqualityOperatorsDefinedOnUnityEngineObjectWhichWillCheckToSeeIfTheUnderlyingUnityEngineObjectHasBeenDestroyedPreferAnExplicitNullComparisonOrImplicitBoolComparisonIfTheLifetimeCheckIsIntendedOrExplicitlyUseobjectReferenceEqualsForAStandardAndQuickerCLRNullCheck" resourceType="Strings" />
      </Tag>
      <Tag externalName="UnresolvedComponentOrScriptableObjectWarning.HIGHLIGHTING_ID" default="WARNING">
        <Title resourceName="CannotResolveComponentOrScriptableObject" resourceType="Strings" />
        <Description resourceName="TheClassReferredToInTheCallToGetComponentAddComponentOrScriptableObjectCreateInstanceCannotBeFoundInTheCurrentProjectOrReferencedAssembliesTheCallIsLikelyToFailAtRuntimeAndReturnNull" resourceType="Strings" />
      </Tag>
      <Tag externalName="LoadSceneWrongIndexWarning.HIGHLIGHTING_ID" default="WARNING">
        <Title resourceName="TheIndexIsMissingInTheBuildSettings" resourceType="Strings" />
        <Description resourceName="ThereIsNoSceneWithTheSameIndexInTheUnityBuildSettings" resourceType="Strings" />
      </Tag>
      <Tag externalName="LoadSceneAmbiguousSceneNameWarning.HIGHLIGHTING_ID" default="WARNING">
        <Title resourceName="ShortSceneNameIsNotUnique" resourceType="Strings" />
        <Description resourceName="ThereAreSeveralScenesWithTheSameNameInTheUnityBuildSettingsOnlySceneWithSmallestIndexWillBeUsed" resourceType="Strings" />
      </Tag>
      <Tag externalName="LoadSceneUnknownSceneNameWarning.HIGHLIGHTING_ID" default="WARNING">
        <Title resourceName="ThereIsNoSceneWithTheSameNameInTheBuildSettings" resourceType="Strings" />
        <Description resourceName="TheSceneIsMissingInTheUnityBuildSettings" resourceType="Strings" />
      </Tag>
      <Tag externalName="LoadSceneUnexistingSceneNameWarning.HIGHLIGHTING_ID" default="WARNING">
        <Title resourceName="SceneDoesNotExist" resourceType="Strings" />
        <Description resourceName="ThereIsNoSceneWithTheSameNameInTheProject" resourceType="Strings" />
      </Tag>
      <Tag externalName="LoadSceneDisabledSceneNameWarning.HIGHLIGHTING_ID" default="WARNING">
        <Title resourceName="SceneIsDisabledInTheBuildSettings" resourceType="Strings" />
        <Description resourceName="SceneIsDisabledInTheUnityBuildSettingsSoItCouldNotBeLoaded" resourceType="Strings" />
      </Tag>
      <Tag externalName="UnknownInputAxesWarning.HIGHLIGHTING_ID" default="WARNING">
        <Title resourceName="TheInputNameIsNotDefinedInTheInputManager" resourceType="Strings" />
        <Description resourceName="TheNameIsNotDefinedInTheInputManagerTheCallIsLikelyToFailAtRuntime" resourceType="Strings" />
      </Tag>
      <Tag externalName="UnknownTagWarning.HIGHLIGHTING_ID" default="WARNING">
        <Title resourceName="TheTagIsNotDefinedInTheTagsLayers" resourceType="Strings" />
        <Description resourceName="TheTagIsNotDefinedInTheTagsLayersExpressionWillReturnfalse" resourceType="Strings" />
      </Tag>
      <Tag externalName="UnknownResourceWarning.HIGHLIGHTING_ID" default="WARNING">
        <Title resourceName="TheResourceIsNotDefinedInTheProject" resourceType="Strings" />
        <Description resourceName="TheResourceIsNotDefinedInTheProjectExpressionWillReturnnull" resourceType="Strings" />
      </Tag>
      <Tag externalName="UnknownLayerWarning.HIGHLIGHTING_ID" default="WARNING">
        <Title resourceName="TheLayerIsNotDefinedInTheTagsLayers" resourceType="Strings" />
        <Description resourceName="TheLayerIsNotDefinedInTheTagsLayersTheCallIsLikelyToFailAtRuntime" resourceType="Strings" />
      </Tag>
      <Tag externalName="DuplicateShortcutWarning.HIGHLIGHTING_ID" default="WARNING">
        <Title resourceName="TheSameShortcutIsDefinedForAnotherMenuItem" resourceType="Strings" />
        <Description resourceName="TheSameShortcutIsDefinedForAnotherMenuItem" resourceType="Strings" />
      </Tag>
      <Tag externalName="UnknownAnimatorStateNameWarning.HIGHLIGHTING_ID" default="WARNING">
        <Title resourceName="ThereIsNoAnimatorStateWithTheSameNameInTheProject" resourceType="Strings" />
        <Description resourceName="ThereIsNoAnimatorStateWithTheSameNameInTheProject" resourceType="Strings" />
      </Tag>
      <Tag externalName="NotUpdatedComponentLookupWarning.HIGHLIGHTING_ID" default="WARNING">
        <Title resourceName="UnityDots_CurrentComponentLookupMustBeUpdated" resourceType="Strings" />
        <Description resourceName="UnityDots_CurrentComponentLookupMustBeUpdated" resourceType="Strings" />
      </Tag>
      <Tag externalName="SingletonMustBeRequestedWarning.HIGHLIGHTING_ID" default="WARNING">
        <Title resourceName="UnityDots_GetSingletonMustBeRequested" resourceType="Strings" />
        <Description resourceName="UnityDots_GetSingletonMustBeRequested" resourceType="Strings" />
      </Tag>
    </Group>
  </SeverityConfiguration>
  
  <!-- Warning, Error, Info or LocalAndGlobal
       * @name - name of the highlighting. Suffix based on parent element is automatically added
       * @configurableSeverity - the value of HIGHLIGHTING_ID. Treated as a string literal and quoted
       * @externalConfigurableSeverity - the value of HIGHLIGHTING_ID. Treated verbatim to refer to code
       * @staticGroup - define the static group this highlight belongs to. Must have been registered
         in /Errors/StaticSeverityGroups
       * ./Parameter - multiple elements for constructor parameters. Requires the @name and @type attributes.
       * ./Parameter[@name] is capitalised and turned into a public property
       * ./Message[@value] the string format template for the message
       * ./Message/Argument multiple code snippets to be used as the arguments to string.Format
       * ./Range code snippt to be the return value of CalculateRange()
       * ./Behavour - NOTE THE SPELLING!
       * ./Behavour[@attributeID] (optional) defines ConfigurableSeverityHighlightingAttribute.AttributeId
       * ./Behavour[@overlapResolvePolicy] (optional) defines ConfigurableSeverityHighlightingAttribute.OverlapResolve
       * ./Behavour/QuickFix multiple elements listing the types that will implement a quick fix
         for this highlight. Only used when the file is processed in QUICKFIX mode (default is
         to use ERROR mode)
       -->
  <Warning name="UnknownAnimatorStateName" configurableSeverity="Unity.UnknownAnimatorStateName">
    <Parameter type="IArgument" name="argument" />
    <Message resourceName="ThereIsNoAnimatorStateWithTheSameNameInTheProjectMessage" resourceType="Strings" />
    <Range>Argument.GetDocumentRange()</Range>
    <Behavour overlapResolvePolicy="WARNING" />
  </Warning>

  <Warning name="UnknownInputAxes" configurableSeverity="Unity.UnknownInputAxes">
    <Parameter type="ITreeNode" name="node" />
    <Message resourceName="TheNameIsNotDefinedInTheInputManagerTheCallIsLikelyToFailAtRuntimeMessage" resourceType="Strings" />
    <Range>Node.GetDocumentRange()</Range>
    <Behavour overlapResolvePolicy="WARNING" />
  </Warning>

  <Warning name="UnknownTag" configurableSeverity="Unity.UnknownTag">
    <Parameter type="ITreeNode" name="node" />
    <Message resourceName="TheTagIsNotDefinedInTheTagsLayersExpressionWillReturnfalseMessage" resourceType="Strings" />
    <Range>Node.GetDocumentRange()</Range>
    <Behavour overlapResolvePolicy="NONE" />
  </Warning>

  <Warning name="UnknownResource" configurableSeverity="Unity.UnknownResource">
    <Parameter type="ITreeNode" name="node" />
    <Parameter type="string" name="resourceName" />
    <Message resourceName="TheResourceIsNotDefinedInTheProjectExpressionWillReturnnullMessage" resourceType="Strings">
        <Argument>ResourceName</Argument>
    </Message>
    <Range>Node.GetDocumentRange()</Range>
    <Behavour overlapResolvePolicy="NONE" />
  </Warning>

  <Warning name="UnknownLayer" configurableSeverity="Unity.UnknownLayer">
    <Parameter type="ITreeNode" name="node" />
    <Message resourceName="TheLayerIsNotDefinedInTheTagsLayersTheCallIsLikelyToFailAtRuntimeMessage" resourceType="Strings" />
    <Range>Node.GetDocumentRange()</Range>
    <Behavour overlapResolvePolicy="WARNING" />
  </Warning>

  <Warning name="DuplicateShortcut" configurableSeverity="Unity.DuplicateShortcut">
    <Parameter type="ITreeNode" name="node" />
    <Parameter type="string" name="file" />
    <Message resourceName="TheSameShortcutIsDefinedForAnotherMenuItemInMessage" resourceType="Strings">
      <Argument>File</Argument>
    </Message>
    <Range>Node.GetDocumentRange()</Range>
    <Behavour overlapResolvePolicy="WARNING" />
  </Warning>

  <Warning name="LoadSceneUnexistingSceneName" configurableSeverity="Unity.LoadSceneUnexistingScene">
    <Parameter type="IArgument" name="argument" />
    <Message resourceName="ThereIsNoSceneWithSameNameInTheProjectMessage" resourceType="Strings" />
    <Range>Argument.GetDocumentRange()</Range>
    <Behavour overlapResolvePolicy="WARNING" />
  </Warning>

  <Warning name="LoadSceneDisabledSceneName" configurableSeverity="Unity.LoadSceneDisabledSceneName">
    <Parameter type="IArgument" name="argument" />
    <Parameter type="string" name="sceneName" />
    <Message resourceName="SceneIsDisabledInTheUnityBuildSettingsSoItCouldNotBeLoadedMessage" resourceType="Strings" />
    <Range>Argument.GetDocumentRange()</Range>
    <Behavour overlapResolvePolicy="WARNING" />
  </Warning>

  <Warning name="LoadSceneUnknownSceneName" configurableSeverity="Unity.LoadSceneUnknownSceneName">
    <Parameter type="IArgument" name="argument" />
    <Parameter type="string" name="sceneName" />
    <Message resourceName="TheSceneIsMissingInTheUnityBuildSettingsMessage" resourceType="Strings" />
    <Range>Argument.GetDocumentRange()</Range>
    <Behavour overlapResolvePolicy="WARNING" />
  </Warning>

  <Warning name="LoadSceneAmbiguousSceneName" configurableSeverity="Unity.LoadSceneAmbiguousSceneName">
    <Parameter type="IArgument" name="argument" />
    <Parameter type="string" name="sceneName" />
    <Message resourceName="ThereAreSeveralScenesWithSameNameInTheUnityBuildSettingsOnlySceneWithSmallestIndexWillBeUsedMessage" resourceType="Strings" />
    <Range>Argument.GetDocumentRange()</Range>
    <Behavour overlapResolvePolicy="WARNING" />
  </Warning>

  <Warning name="LoadSceneWrongIndex" configurableSeverity="Unity.LoadSceneWrongIndex">
    <Parameter type="IArgument" name="argument" />
    <Message resourceName="ThereIsNoSceneWithSameIndexInTheUnityBuildSettingsMessage" resourceType="Strings" />
    <Range>Argument.GetDocumentRange()</Range>
    <Behavour overlapResolvePolicy="WARNING" />
  </Warning>

  <Warning name="DuplicateEventFunction" configurableSeverity="Unity.DuplicateEventFunction">
    <Parameter type="IMethodDeclaration" name="methodDeclaration" />
    <Message resourceName="EventFunctionWithTheSameNameIsAlreadyDeclaredMessage" resourceType="Strings" />
    <Range>CSharpErrorUtil.GetMethodNameAndParametersHighlightingRange(MethodDeclaration)</Range>
    <Behavour overlapResolvePolicy="WARNING" />
  </Warning>

  <Warning name="ExpectedComponent" configurableSeverity="Unity.ExpectedComponent">
    <Parameter type="IReference" name="reference" />
    <Parameter type="string" name="requiredBaseType" />
    <Message resourceName="ExpectedTypeDerivedFromMessage" resourceType="Strings">
      <Argument>RequiredBaseType</Argument>
    </Message>
    <Range>Reference.GetDocumentRange()</Range>
  </Warning>

  <Warning name="ExpectedScriptableObject" configurableSeverity="Unity.ExpectedScriptableObject">
    <Parameter type="IReference" name="reference" />
    <Message resourceName="ExpectedTypeDerivedFromUnityEngineScriptableObjectMessage" resourceType="Strings" />
    <Range>Reference.GetDocumentRange()</Range>
    <Behavour overlapResolvePolicy="WARNING" />
  </Warning>

  <Warning name="ExplicitTagStringComparison" configurableSeverity="Unity.ExplicitTagComparison">
    <Parameter type="IEqualityExpression" name="equalityExpression" />
    <Parameter type="bool" name="leftOperandIsTagReference" />
    <Message resourceName="ExplicitStringComparisonIsInefficientUseCompareTagInsteadMessage" resourceType="Strings" />
    <Range>EqualityExpression.GetHighlightingRange()</Range>
    <Behavour overlapResolvePolicy="NONE" />
  </Warning>

  <Warning name="IncorrectMonoBehaviourInstantiation" configurableSeverity="Unity.IncorrectMonoBehaviourInstantiation">
    <Parameter type="IObjectCreationExpression" name="creationExpression" />
    <Message resourceName="MonoBehaviourInstancesMustBeInstantiatedWithGameObjectAddComponentTInsteadOfnewMessage" resourceType="Strings" />
    <Range>CreationExpression.GetHighlightingRange()</Range>
    <Behavour overlapResolvePolicy="WARNING" />
  </Warning>

  <Warning name="IncorrectScriptableObjectInstantiation" configurableSeverity="Unity.IncorrectScriptableObjectInstantiation">
    <Parameter type="IObjectCreationExpression" name="creationExpression" />
    <Message resourceName="ScriptableObjectInstancesMustBeInstantiatedWithScriptableObjectCreateInstanceTInsteadOfnewMessage" resourceType="Strings" />
    <Range>CreationExpression.GetHighlightingRange()</Range>
    <Behavour overlapResolvePolicy="WARNING" />
  </Warning>

  <Warning name="IncorrectSignature" configurableSeverity="Unity.IncorrectMethodSignature">
    <Parameter type="IMethodDeclaration" name="methodDeclaration" />
    <Parameter type="MethodSignature" name="expectedMethodSignature" isValid="skip" />
    <Parameter type="MethodSignatureMatch" name="methodSignatureMatch" isValid="skip" />
    <Message resourceName="IncorrectMethodSignatureExpectedMessage" resourceType="Strings">
      <Argument>ExpectedMethodSignature.FormatSignature(MethodDeclaration.DeclaredName)</Argument>
    </Message>
    <Range>MethodDeclaration.GetNameDocumentRange()</Range>
    <Behavour overlapResolvePolicy="WARNING" />
  </Warning>

  <Warning name="IncorrectSignatureWithChoice" configurableSeverity="Unity.IncorrectMethodSignature">
    <Parameter type="IMethodDeclaration" name="methodDeclaration" />
    <Parameter type="MethodSignature[]" name="expectedMethodSignatures" isValid="skip" />
    <Message resourceName="IncorrectMethodSignatureMessage" resourceType="Strings" />
    <Range>MethodDeclaration.GetNameDocumentRange()</Range>
    <Behavour overlapResolvePolicy="WARNING" />
  </Warning>

  <Warning name="InefficientPropertyAccess" configurableSeverity="Unity.InefficientPropertyAccess">
    <Parameter type="IReferenceExpression" name="highlightedReference" />
    <Parameter type="List&lt;IReferenceExpression&gt;" name="references" isValid="skip" />
    <Parameter type="ICSharpTreeNode" name="cacheAnchor" />
    <Parameter type="bool" name="inlineCacheValue" />
    <Parameter type="ICSharpTreeNode" name="restoreAnchor" />
    <Parameter type="bool" name="inlineRestoreValue" />
    <Message resourceName="RepeatedPropertyAccessOfBuiltInComponentIsInefficientMessage" resourceType="Strings" />
    <Range>HighlightedReference.GetDocumentRange()</Range>
    <Behavour overlapResolvePolicy="NONE" />
  </Warning>

  <Warning name="InstantiateWithoutParent" configurableSeverity="Unity.InstantiateWithoutParent">
    <Parameter type="IReferenceExpression" name="reference" />
    <Parameter type="IInvocationExpression" name="invocation" />
    <Parameter type="ICSharpExpression" name="newArgument" isValid="skip" />
    <Parameter type="bool" name="stayInWorldCoords" isValid="skip" />
    <Message resourceName="SettingparentPropertyImmediatelyAfterObjectInstantiationIsInefficientMessage" resourceType="Strings" />
    <Range>Reference.GetDocumentRange()</Range>
    <Behavour overlapResolvePolicy="NONE" />
  </Warning>

  <Warning name="InvalidParameters" configurableSeverity="Unity.IncorrectMethodSignature">
    <Parameter type="IMethodDeclaration" name="methodDeclaration" />
    <Parameter type="MethodSignature" name="expectedMethodSignature" isValid="skip" />
    <Message resourceName="IncorrectMethodParametersExpectedMessage" resourceType="Strings">
      <Argument>ExpectedMethodSignature.Parameters.GetParameterList()</Argument>
    </Message>
    <Range>CSharpErrorUtil.GetParametersHighlightingRange(MethodDeclaration)</Range>
    <Behavour overlapResolvePolicy="WARNING" />
  </Warning>

  <Warning name="InvalidReturnType" configurableSeverity="Unity.IncorrectMethodSignature">
    <Parameter type="IMethodDeclaration" name="methodDeclaration" />
    <Parameter type="MethodSignature" name="expectedMethodSignature" isValid="skip" />
    <Message resourceName="IncorrectReturnTypeExpectedMessage" resourceType="Strings">
      <Argument>ExpectedMethodSignature.GetReturnTypeName()</Argument>
    </Message>
    <Range>CSharpErrorUtil.GetReturnTypeHighlightingRange(MethodDeclaration)</Range>
    <Behavour overlapResolvePolicy="WARNING" />
  </Warning>

  <Warning name="InvalidStaticModifier" configurableSeverity="Unity.IncorrectMethodSignature">
    <Parameter type="IMethodDeclaration" name="methodDeclaration" />
    <Parameter type="MethodSignature" name="expectedMethodSignature" isValid="skip" />
    <Message resourceName="Message" resourceType="Strings">
      <Argument>MethodDeclaration.IsStatic ? "Incorrect static modifier" : "Missing static modifier"</Argument>
    </Message>
    <Range>CSharpErrorUtil.GetStaticModifierOrMethodNameHighlightingRange(MethodDeclaration)</Range>
    <Behavour overlapResolvePolicy="WARNING" />
  </Warning>

  <Warning name="InvalidTypeParameters" configurableSeverity="Unity.IncorrectMethodSignature">
    <Parameter type="IMethodDeclaration" name="methodDeclaration" />
    <Parameter type="MethodSignature" name="expectedMethodSignature" isValid="skip" />
    <Message resourceName="IncorrectTypeParametersMessage" resourceType="Strings" />
    <Range>CSharpErrorUtil.GetTypeParametersOrMethodNameHighlightingRange(MethodDeclaration)</Range>
    <Behavour overlapResolvePolicy="WARNING" />
  </Warning>

  <!-- TODO: Merge this with ExpectedComponentWarning? -->
  <Warning name="ParameterNotDerivedFromComponent" configurableSeverity="Unity.ParameterNotDerivedFromComponent">
    <Parameter type="ICSharpParameterDeclaration" name="parameterDeclaration" />
    <Message resourceName="ParameterShouldBeDerivedFromComponentMessage" resourceType="Strings">
      <Argument>ParameterDeclaration.DeclaredName</Argument>
    </Message>
    <Range>ParameterDeclaration.GetHighlightingRange()</Range>
    <Behavour overlapResolvePolicy="WARNING" />
  </Warning>

  <Warning name="PossibleMisapplicationOfAttributeToMultipleFields" configurableSeverity="Unity.PossibleMisapplicationOfAttributeToMultipleFields">
    <Parameter type="IAttribute" name="attribute" />
    <Message resourceName="PossibleIncorrectApplicationOfFormerlySerializedAsAttributeToMultipleFieldsMessage" resourceType="Strings" />
    <Range>Attribute.GetHighlightingRange()</Range>
    <Behavour overlapResolvePolicy="WARNING" />
  </Warning>

  <Warning name="PreferAddressByIdToGraphicsParams" configurableSeverity="Unity.PreferAddressByIdToGraphicsParams">
    <Parameter type="IInvocationExpression" name="invocationMethod" />
    <Parameter type="ICSharpArgument" name="argument" />
    <Parameter type="IExpression" name="argumentExpression" />
    <Parameter type="string" name="literal" />
    <Parameter type="string" name="typeName" />
    <Parameter type="string" name="mapFunction" />
    <Message resourceName="StringBasedPropertyLookupIsInefficientMessage" resourceType="Strings" />
    <Range>Argument.GetHighlightingRange()</Range>
    <Behavour overlapResolvePolicy="NONE" />
  </Warning>

  <Warning name="PreferGenericMethodOverload" configurableSeverity="Unity.PreferGenericMethodOverload">
    <Parameter type="IInvocationExpression" name="invocationMethod" />
    <Parameter type="string" name="methodName" isValid="skip" />
    <Parameter type="ILiteralExpression" name="argument" />
    <Parameter type="ITypeElement" name="typeElement" isValid="skip" />
    <Message resourceName="StringBasedTypeLookupIsInefficientUseGenericOverloadMessage" resourceType="Strings" />
    <Range>Argument.GetHighlightingRange()</Range>
    <Behavour overlapResolvePolicy="NONE" />
  </Warning>

  <Warning name="PreferNonAllocApi" configurableSeverity="Unity.PreferNonAllocApi">
    <Parameter type="IInvocationExpression" name="invocationExpression" />
    <Parameter type="IReferenceExpression" name="invokedExpression" />
    <Parameter type="IMethod" name="nonAllocMethod" />
    <Message resourceName="UseNonAllocatingMethodMessage" resourceType="Strings">
      <Argument>NonAllocMethod.ShortName</Argument>
    </Message>
    <Range>InvokedExpression.Reference.GetDocumentRange()</Range>
    <Behavour overlapResolvePolicy="WARNING" />
  </Warning>

  <Warning name="PropertyDrawerOnGUIBase" configurableSeverity="Unity.PropertyDrawerOnGUIBase">
    <Parameter type="IReference" name="invocation" />
    <Message resourceName="baseOnGUIWillPrintNoGUIImplementedInTheUnityInspectorMessage" resourceType="Strings" />
    <Range>Invocation.GetDocumentRange()</Range>
    <Behavour overlapResolvePolicy="NONE" />
  </Warning>

  <Warning name="RedundantAttributeOnTarget" configurableSeverity="Unity.RedundantAttributeOnTarget">
    <Parameter type="IAttribute" name="attribute" />
    <Parameter type="ITypeElement" name="attributeType" />
    <Parameter type="System.AttributeTargets" name="validTargets" isValid="skip" />
    <Message resourceName="AttributeIsRedundantOnThisDeclarationTypeItIsOnlyUsedWhenAppliedToDeclarationsMessage" resourceType="Strings">
      <Argument>DeclaredElementPresenter.Format(CSharpLanguage.Instance, DeclaredElementPresenter.QUALIFIED_NAME_PRESENTER, AttributeType)</Argument>
      <Argument>ValidTargets</Argument>
    </Message>
    <Range>Attribute.GetHighlightingRange()</Range>
    <Behavour overlapResolvePolicy="DEADCODE" attributeID="DEADCODE" />
  </Warning>

  <Warning name="RedundantEventFunction" configurableSeverity="Unity.RedundantEventFunction">
    <Parameter type="IMethodDeclaration" name="methodDeclaration" />
    <Message resourceName="RedundantUnityEventFunctionMessage" resourceType="Strings" />
    <Range>MethodDeclaration.GetHighlightingRange()</Range>
    <Behavour overlapResolvePolicy="DEADCODE" attributeID="DEADCODE" />
  </Warning>

  <Warning name="RedundantFormerlySerializedAsAttribute" configurableSeverity="Unity.RedundantFormerlySerializedAsAttribute">
    <Parameter type="IAttribute" name="attribute" />
    <Message resourceName="RedundantFormerlySerializedAsAttributeMessage" resourceType="Strings" />
    <Range>Attribute.GetHighlightingRange()</Range>
    <Behavour overlapResolvePolicy="DEADCODE" attributeID="DEADCODE" />
  </Warning>

  <Warning name="RedundantHideInInspectorAttribute" configurableSeverity="Unity.RedundantHideInInspectorAttribute">
    <Parameter type="IAttribute" name="attribute" />
    <Message resourceName="RedundantHideInInspectorAttributeMessage" resourceType="Strings" />
    <Range>Attribute.GetHighlightingRange()</Range>
    <Behavour attributeID="DEADCODE" overlapResolvePolicy="DEADCODE" />
  </Warning>

  <Warning name="RedundantInitializeOnLoadAttribute" configurableSeverity="Unity.RedundantInitializeOnLoadAttribute">
    <Parameter type="IAttribute" name="attribute" />
    <Message resourceName="InitializeOnLoadAttributeIsRedundantWhenStaticConstructorIsMissingMessage" resourceType="Strings" />
    <Range>Attribute.GetHighlightingRange()</Range>
    <Behavour overlapResolvePolicy="DEADCODE" attributeID="DEADCODE" />
  </Warning>

  <Warning name="RedundantSerializeFieldAttribute" configurableSeverity="Unity.RedundantSerializeFieldAttribute">
    <Parameter type="IAttribute" name="attribute" />
    <Message resourceName="RedundantSerializeFieldAttributeMessage" resourceType="Strings" />
    <Range>Attribute.GetHighlightingRange()</Range>
    <Behavour attributeID="DEADCODE" overlapResolvePolicy="DEADCODE" />
  </Warning>

  <Error name="StringLiteralReferenceIncorrectSignature" staticGroup="UnityErrors">
    <Parameter type="SyncVarHookReference" name="reference" />
    <Message resourceName="ExpectedAMethodWithSignatureMessage" resourceType="Strings">
      <Argument>Reference.MethodSignature.FormatSignature(Reference.GetName())</Argument>
    </Message>
    <Range>Reference.GetDocumentRange()</Range>
    <Behavour overlapResolvePolicy="WARNING" />
  </Error>


  <Warning name="StringLiteralReferenceIncorrectSignature" configurableSeverity="Unity.IncorrectMethodSignatureInStringLiteral">
    <Parameter type="UnityEventFunctionReference" name="reference" isValid="skip" />
    <Message resourceName="ExpectedAMethodWithSignatureMessage" resourceType="Strings">
      <Argument>Reference.MethodSignature.FormatSignature(Reference.GetName())</Argument>
    </Message>
    <Range>Reference.GetDocumentRange()</Range>
    <Behavour overlapResolvePolicy="WARNING" />
  </Warning>

  <Error name="SyncVarUsage" staticGroup="UnityErrors">
    <Parameter type="IAttribute" name="attribute" />
    <Message resourceName="SyncVarAttributeCanOnlyBeAppliedInAClassThatDerivesFromNetworkBehaviourMessage" resourceType="Strings" />
    <Range>Attribute.GetHighlightingRange()</Range>
    <Behavour overlapResolvePolicy="ERROR" />
  </Error>


  <Warning name="UnityObjectNullCoalescing" configurableSeverity="Unity.NoNullCoalescing">
    <Parameter type="INullCoalescingExpression" name="expression" />
    <Message resourceName="OnATypeDerivingFromUnityEngineObjectBypassesTheLifetimeCheckOnTheUnderlyingUnityEngineObjectMessage" resourceType="Strings" />
    <Range>Expression.GetHighlightingRange()</Range>
    <Behavour overlapResolvePolicy="WARNING" />
  </Warning>

  <Warning name="UnityObjectNullPropagation" configurableSeverity="Unity.NoNullPropagation">
    <Parameter type="IConditionalAccessExpression" name="expression" />
    <Message resourceName="OnATypeDerivingFromUnityEngineObjectBypassesTheLifetimeCheckOnTheUnderlyingUnityEngineObjectMessage1" resourceType="Strings" />
    <Range>Expression.GetHighlightingRange()</Range>
    <Behavour overlapResolvePolicy="WARNING" />
  </Warning>

  <Warning name="UnresolvedComponentOrScriptableObject" configurableSeverity="Unity.UnresolvedComponentOrScriptableObject">
    <Parameter type="IReference" name="reference" />
    <Message resourceName="CannotResolveSymbolMessage" resourceType="Strings">
      <Argument>Reference.GetName()</Argument>
    </Message>
    <Range>Reference.GetDocumentRange()</Range>
  </Warning>

  <Warning name="NotUpdatedComponentLookup" configurableSeverity="Unity.Entities.NotUpdatedComponentLookup">
    <Parameter type="IFieldDeclaration" name="queryLookupFieldDeclaration" />
    <Parameter type="IClassLikeDeclaration" name="classLikeDeclaration" />
    <Parameter type="IMethodDeclaration" name="availableUpdateMethod" />
    <Parameter type="string" name="componentLookupName" />
    <Message resourceName="UnityDots_ComponentLookupFieldMustBeUpdated" resourceType="Strings">
      <Argument>componentLookupName</Argument>
    </Message>
    <Range>QueryLookupFieldDeclaration.GetDocumentRange()</Range>
    <Behavour overlapResolvePolicy="NONE" />
  </Warning>


  <Warning name="SingletonMustBeRequested" configurableSeverity="Unity.Entities.SingletonMustBeRequested">
    <Parameter type="IClassLikeDeclaration" name="classLikeDeclaration" />
    <Parameter type="ICSharpExpression" name="availableUpdateMethod" />
    <Parameter type="IType" name="requestedType" />
    <Parameter type="string" name="requestedTypeName" />
    <Message resourceName="UnityDots_GetSingletonMustBeRequested" resourceType="Strings">
      <Argument>requestedTypeName</Argument>
    </Message>
    <Range>AvailableUpdateMethod.GetDocumentRange()</Range>
    <Behavour overlapResolvePolicy="NONE" />
  </Warning>

</Errors>
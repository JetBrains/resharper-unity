<?xml version="1.0" encoding="utf-8" ?>
<!-- About this file

     The root node can be anything. TokenGenerator doesn't care. It uses whatever the root node is,
     and then looks for `BaseTokenNodeTypeIndex`, `TokenTypeNamespace` and `TokenTypeClass` child elements.
     It will also look for `Import` elements which are used to add arbitrary using namespaces.
     It will then loop over all other children of the root node, and treat them like sections. Each
     child node must have a `NodeType` attribute, and optionally a `TokenElement` attribute. If there
     is no `TokenElement` attribute, the token is generated as an instance of the `NodeType` class. If
     there is a `TokenElement` attribute, then a new class is generated for the node type and the element.
     There is no real difference between the two - identification is carried out based on reference equality
     to a singleton instance and and generated types are private. The only difference is the derived classes
     will have a smaller footprint - no text or node type fields. But that's negligible. On the flip side,
     there will be fewer classes. Micro-optimisation swings and roundabouts.
     When generating, TokenGenerator will look for `name` and `representation` attributes.
-->
<ShaderLabTokens>

  <!-- Default is 1000 -->
  <BaseTokenNodeTypeIndex>1000</BaseTokenNodeTypeIndex>
  <TokenTypeNamespace>JetBrains.ReSharper.Plugins.Unity.Shaders.ShaderLab.Psi.Parsing</TokenTypeNamespace>
  <TokenTypeClass>ShaderLabTokenType</TokenTypeClass>

  <!-- CG_INCLUDE/CG_PROGRAM et al are handled by a pre-processor. *INCLUDE can be anywhere in the
       file, and are simply removed by the pre-processor. When *PROGRAM is processed by the shader
       compiler, the content is prepended with any and all *INCLUDE blocks, and compiled/stored in
       memory. The pre-processor replaces the *PROGRAM block with a `GpuProgramId <index>` command
       where <index> is the index of the program in memory. We never see this command in the file,
       and never need to parse it. We could actually parse *PROGRAM blocks in the parser, as
       GpuProgramId can only be in the stateCommand parse rule. But we might as well treat it like
       the pre-processor token it is -->
  <CgBlockDelimiters NodeType="FixedTokenNodeType" TokenElement="FixedTokenElementBase">
    <Token name="CG_PROGRAM" representation="CGPROGRAM" filtered="true" /> 
    <Token name="CG_INCLUDE" representation="CGINCLUDE" filtered="true" />
    <Token name="CG_END" representation="ENDCG" filtered="true" />
    
    <!-- Shader code written in OpenGL https://docs.unity3d.com/Manual/SL-GLSLShaderPrograms.html -->
    <Token name="GLSL_PROGRAM" representation="GLSLPROGRAM" filtered="true" />
    <Token name="GLSL_INCLUDE" representation="GLSLINCLUDE" filtered="true" />
    <Token name="GLSL_END" representation="ENDGLSL" filtered="true" />
    
    <!-- Identical to CGPROGRAM/GCINCLUDE but some includes are not automatically included
         HLSLSupport.cginc, UnityShaderVariables.cginc and UnityShaderUtilties.cginc (This info direct from Unity devs)
         Added in 5.6.0 - https://unity3d.com/unity/whats-new/unity-5.6.0 -->
    <Token name="HLSL_PROGRAM" representation="HLSLPROGRAM" filtered="true" />
    <Token name="HLSL_INCLUDE" representation="HLSLINCLUDE" filtered="true" />
    <Token name="HLSL_END" representation="ENDHLSL" filtered="true" />
  </CgBlockDelimiters>

  <Tokens NodeType="FixedTokenNodeType">
    <Token name="LPAREN" representation="(" />
    <Token name="RPAREN" representation=")" />
    <Token name="LBRACK" representation="[" />
    <Token name="RBRACK" representation="]" />
    <Token name="LBRACE" representation="{" />
    <Token name="RBRACE" representation="}" />
    <Token name="COMMA" representation="," />
    <Token name="DOT" representation="." />
    <Token name="EQUALS" representation="=" />
    <Token name="PLUS" representation="+" />
    <Token name="MINUS" representation="-" />
    <Token name="MULTIPLY" representation="*" />
    <Token name="PLUS_MINUS" representation="+-" />
  </Tokens>
  
  <!-- Specifying the TokenElement generates subtypes of NodeType and TokenElement,
       and the filtered="true" overrides IsFiltered -->
  <Tokens NodeType="FixedTokenNodeType" TokenElement="FixedTokenElementBase">
    <Token name="PP_WARNING" representation="#warning" filtered="true" />
    <Token name="PP_ERROR" representation="#error" filtered="true" />
    <Token name="PP_LINE" representation="#line" filtered="true" />
  </Tokens>

  <Commands NodeType="CommandKeywordTokenNodeType">
    <Command name="SHADER_KEYWORD" representation="Shader" />
    <Command name="PROPERTIES_KEYWORD" representation="Properties" />
    <Command name="CATEGORY_KEYWORD" representation="Category" />
    <Command name="SUB_SHADER_KEYWORD" representation="SubShader" />
    <Command name="FALLBACK_KEYWORD" representation="Fallback" />
    <Command name="CUSTOM_EDITOR_KEYWORD" representation="CustomEditor" />
    <Command name="DEPENDENCY_KEYWORD" representation="Dependency" />
  </Commands>

  <PropertyTypeKeywords NodeType="KeywordTokenNodeType">
    <Keyword name="FLOAT_KEYWORD" representation="Float" />
    <Keyword name="INT_KEYWORD" representation="Int" />
    <Keyword name="INTEGER_KEYWORD" representation="Integer" />
    <Keyword name="VECTOR_KEYWORD" representation="Vector" />
  </PropertyTypeKeywords>
  
  <TextureDimensionKeywords NodeType="KeywordTokenNodeType">
    <Keyword name="ANY_KEYWORD" representation="Any" />
    <Keyword name="CUBE_KEYWORD" representation="Cube" />
    <Keyword name="CUBE_ARRAY_KEYWORD" representation="CubeArray" />
    <Keyword name="RECT_KEYWORD" representation="Rect" />
    <Keyword name="TEXTURE_2D_KEYWORD" representation="2D" />
    <Keyword name="TEXTURE_2D_ARRAY_KEYWORD" representation="2DArray" />
    <Keyword name="TEXTURE_3D_KEYWORD" representation="3D" />
  </TextureDimensionKeywords>

  <SubShaderCommands NodeType="CommandKeywordTokenNodeType">
    <Command name="TAGS_KEYWORD" representation="Tags" />
    <Command name="PASS_KEYWORD" representation="Pass" />
    <Command name="USEPASS_KEYWORD" representation="UsePass" />
    <Command name="GRABPASS_KEYWORD" representation="GrabPass" />
  </SubShaderCommands>

  <RenderStateCommands NodeType="CommandKeywordTokenNodeType">
    <Command name="CULL_KEYWORD" representation="Cull" />
    <Command name="ZCLIP_KEYWORD" representation="ZClip" />
    <Command name="ZTEST_KEYWORD" representation="ZTest" />
    <Command name="ZWRITE_KEYWORD" representation="ZWrite" />
    <Command name="CONSERVATIVE_KEYWORD" representation="Conservative" />
    <Command name="OFFSET_KEYWORD" representation="Offset" />
    <Command name="BLEND_KEYWORD" representation="Blend" />
    <Command name="BLEND_OP_KEYWORD" representation="BlendOp" />
    <Command name="ALPHA_TO_MASK_KEYWORD" representation="AlphaToMask" />
    <Command name="COLOR_MASK_KEYWORD" representation="ColorMask" />
    <Command name="STENCIL_KEYWORD" representation="Stencil" />
    <Command name="NAME_KEYWORD" representation="Name" />
    <Command name="LOD_KEYWORD" representation="LOD" />
    <Command name="BIND_CHANNELS_KEYWORD" representation="BindChannels" />
  </RenderStateCommands>
  
  <CullOrientationKeywords NodeType="KeywordTokenNodeType">
    <Keyword name="BACK_KEYWORD" representation="Back" />
    <Keyword name="FRONT_KEYWORD" representation="Front" />
  </CullOrientationKeywords>
  
  <BlendFactorKeywords NodeType="KeywordTokenNodeType">
    <Keyword name="SRC_COLOR_KEYWORD" representation="SrcColor" />
    <Keyword name="SRC_ALPHA_KEYWORD" representation="SrcAlpha" />
    <Keyword name="SRC_ALPHA_SATURATE_KEYWORD" representation="SrcAlphaSaturate" />
    <Keyword name="DST_COLOR_KEYWORD" representation="DstColor" />
    <Keyword name="DST_ALPHA_KEYWORD" representation="DstAlpha" />
    <Keyword name="ONE_MINUS_SRC_COLOR_KEYWORD" representation="OneMinusSrcColor" />
    <Keyword name="ONE_MINUS_SRC_ALPHA_KEYWORD" representation="OneMinusSrcAlpha" />
    <Keyword name="ONE_MINUS_DST_COLOR_KEYWORD" representation="OneMinusDstColor" />
    <Keyword name="ONE_MINUS_DST_ALPHA_KEYWORD" representation="OneMinusDstAlpha" />
  </BlendFactorKeywords>

  <BlendOpOperationKeywords NodeType="KeywordTokenNodeType">
    <Keyword name="ADD_KEYWORD" representation="Add" />
    <Keyword name="SUB_KEYWORD" representation="Sub" />
    <Keyword name="REV_SUB_KEYWORD" representation="RevSub" />
    <Keyword name="MIN_KEYWORD" representation="Min" />
    <Keyword name="MAX_KEYWORD" representation="Max" />
    <Keyword name="LOGICAL_CLEAR_KEYWORD" representation="LogicalClear" />
    <Keyword name="LOGICAL_SET_KEYWORD" representation="LogicalSet" />
    <Keyword name="LOGICAL_COPY_KEYWORD" representation="LogicalCopy" />
    <Keyword name="LOGICAL_COPY_INVERTED_KEYWORD" representation="LogicalCopyInverted" />
    <Keyword name="LOGICAL_NOOP_KEYWORD" representation="LogicalNoop" />
    <Keyword name="LOGICAL_INVERT_KEYWORD" representation="LogicalInvert" />
    <Keyword name="LOGICAL_AND_KEYWORD" representation="LogicalAnd" />
    <Keyword name="LOGICAL_NAND_KEYWORD" representation="LogicalNand" />
    <Keyword name="LOGICAL_OR_KEYWORD" representation="LogicalOr" />
    <Keyword name="LOGICAL_NOR_KEYWORD" representation="LogicalNor" />
    <Keyword name="LOGICAL_XOR_KEYWORD" representation="LogicalXor" />
    <Keyword name="LOGICAL_EQUIV_KEYWORD" representation="LogicalEquiv" />
    <Keyword name="LOGICAL_AND_REVERSE_KEYWORD" representation="LogicalAndReverse" />
    <Keyword name="LOGICAL_AND_INVERTED_KEYWORD" representation="LogicalAndInverted" />
    <Keyword name="LOGICAL_OR_REVERSE_KEYWORD" representation="LogicalOrReverse" />
    <Keyword name="LOGICAL_OR_INVERTED_KEYWORD" representation="LogicalOrInverted" />
    <Keyword name="MULTIPLY_KEYWORD" representation="Multiply" />
    <Keyword name="SCREEN_KEYWORD" representation="Screen" />
    <Keyword name="OVERLAY_KEYWORD" representation="Overlay" />
    <Keyword name="DARKEN_KEYWORD" representation="Darken" />
    <Keyword name="LIGHTEN_KEYWORD" representation="Lighten" />
    <Keyword name="COLOR_DODGE_KEYWORD" representation="ColorDodge" />
    <Keyword name="COLOR_BURN_KEYWORD" representation="ColorBurn" />
    <Keyword name="HARD_LIGHT_KEYWORD" representation="HardLight" />
    <Keyword name="SOFT_LIGHT_KEYWORD" representation="SoftLight" />
    <Keyword name="DIFFERENCE_KEYWORD" representation="Difference" />
    <Keyword name="EXCLUSION_KEYWORD" representation="Exclusion" />
    <Keyword name="HSL_HUE_KEYWORD" representation="HSLHue" />
    <Keyword name="HSL_SATURATION_KEYWORD" representation="HSLSaturation" />
    <Keyword name="HSL_COLOR_KEYWORD" representation="HSLColor" />
    <Keyword name="HSL_LUMINOSITY_KEYWORD" representation="HSLLuminosity" />
  </BlendOpOperationKeywords>

  <LegacyFixedFunctionCommands NodeType="CommandKeywordTokenNodeType">
    <Command name="LIGHTING_KEYWORD" representation="Lighting" />
    <Command name="MATERIAL_KEYWORD" representation="Material" />
    <Command name="SEPARATE_SPECULAR_KEYWORD" representation="SeparateSpecular" />
    <Command name="COLOR_MATERIAL_KEYWORD" representation="ColorMaterial" />
    <Command name="FOG_KEYWORD" representation="Fog" />
    <Command name="ALPHA_TEST_KEYWORD" representation="AlphaTest" />
    <Command name="SET_TEXTURE_KEYWORD" representation="SetTexture" />
  </LegacyFixedFunctionCommands>

  <LegacyMaterialCommands NodeType="CommandKeywordTokenNodeType">
    <Command name="DIFFUSE_KEYWORD" representation="Diffuse" />
    <Command name="AMBIENT_KEYWORD" representation="Ambient" />
    <Command name="SPECULAR_KEYWORD" representation="Specular" />
    <Command name="SHININESS_KEYWORD" representation="Shininess" />
  </LegacyMaterialCommands>

  <LegacyTextureCommands NodeType="CommandKeywordTokenNodeType">
    <Keyword name="COMBINE_KEYWORD" representation="Combine" />
    <Keyword name="CONSTANT_COLOR_KEYWORD" representation="ConstantColor" />
    <Keyword name="MATRIX_KEYWORD" representation="Matrix" />
    <Keyword name="LIGHTMAP_MODE_KEYWORD" representation="LightmapMode" />
    <Keyword name="TEX_GEN_KEYWORD" representation="TexGen" />
  </LegacyTextureCommands>

  <LegacyTextureCombinerKeywords NodeType="KeywordTokenNodeType">
    <Keyword name="PREVIOUS_KEYWORD" representation="Previous" />
    <Keyword name="PRIMARY_KEYWORD" representation="Primary" />
    <Keyword name="TEXTURE_KEYWORD" representation="Texture" />
    <Keyword name="CONSTANT_KEYWORD" representation="Constant" />
    <Keyword name="DOUBLE_KEYWORD" representation="Double" />
    <Keyword name="QUAD_KEYWORD" representation="Quad" />
    <Keyword name="LERP_KEYWORD" representation="Lerp" />
    <Keyword name="ONE_KEYWORD" representation="One" />
    <Keyword name="ALPHA_KEYWORD" representation="Alpha" />
    <Keyword name="DOT3_KEYWORD" representation="Dot3" />
    <Keyword name="DOT3RGBA_KEYWORD" representation="Dot3Rgba" />
  </LegacyTextureCombinerKeywords>

  <LegacyTexGenModeKeywords NodeType="KeywordTokenNodeType">
    <Keyword name="SPHERE_MAP_KEYWORD" representation="SphereMap" />
    <Keyword name="EYE_LINEAR_KEYWORD" representation="EyeLinear" />
    <Keyword name="CUBE_REFLECT_KEYWORD" representation="CubeReflect" />
    <Keyword name="CUBE_NORMAL_KEYWORD" representation="CubeNormal" />
    <Keyword name="OBJECT_LINEAR_KEYWORD" representation="ObjectLinear" />
  </LegacyTexGenModeKeywords>

  <LegacyBindChannelsCommands NodeType="CommandKeywordTokenNodeType">
    <Command name="BIND_KEYWORD" representation="Bind" />
  </LegacyBindChannelsCommands>
  
  <!-- region: Multipurpose commands -->
  <ColorCommand NodeType="PropertyAndCommandKeywordTokenNodeType">
    <Keyword name="COLOR_KEYWORD" representation="Color" />
    <Keyword name="RANGE_KEYWORD" representation="Range" />
  </ColorCommand>

  <EmissionCommand NodeType="EmissionCommandKeywordTokenNodeType">
    <Keyword name="EMISSION_KEYWORD" representation="Emission" />
  </EmissionCommand>
  <!-- endregion: Multipurpose commands -->

  <ColorMaterialKeywords NodeType="KeywordTokenNodeType">
    <Keyword name="AMBIENT_AND_DIFFUSE_KEYWORD" representation="AmbientAndDiffuse" />
  </ColorMaterialKeywords>

  <LegacyFogCommands NodeType="CommandKeywordTokenNodeType">
    <Command name="MODE_KEYWORD" representation="Mode" />
    <Command name="DENSITY_KEYWORD" representation="Density" />
  </LegacyFogCommands>

  <FogModeKeywords NodeType="KeywordTokenNodeType">
    <Keyword name="GLOBAL_KEYWORD" representation="Global" />
    <Keyword name="LINEAR_KEYWORD" representation="Linear" />
    <Keyword name="EXP_KEYWORD" representation="Exp" />
    <Keyword name="EXP2_KEYWORD" representation="Exp2" />
  </FogModeKeywords>

  <StencilCommands NodeType="CommandKeywordTokenNodeType">
    <Command name="REF_KEYWORD" representation="Ref" />
    <Command name="READ_MASK_KEYWORD" representation="ReadMask" />
    <Command name="WRITE_MASK_KEYWORD" representation="WriteMask" />
    <Command name="PASS_FRONT_KEYWORD" representation="PassFront" />
    <Command name="PASS_BACK_KEYWORD" representation="PassBack" />
    <Command name="COMP_KEYWORD" representation="Comp" />
    <Command name="COMP_FRONT_KEYWORD" representation="CompFront" />
    <Command name="COMP_BACK_KEYWORD" representation="CompBack" />
    <Command name="FAIL_KEYWORD" representation="Fail" />
    <Command name="FAIL_FRONT_KEYWORD" representation="FailFront" />
    <Command name="FAIL_BACK_KEYWORD" representation="FailBack" />
    <Command name="ZFAIL_KEYWORD" representation="ZFail" />
    <Command name="ZFAIL_FRONT_KEYWORD" representation="ZFailFront" />
    <Command name="ZFAIL_BACK_KEYWORD" representation="ZFailBack" />
  </StencilCommands>

  <ComparisonFunctionKeywords NodeType="KeywordTokenNodeType">
    <Keyword name="GREATER_KEYWORD" representation="Greater" />
    <Keyword name="GEQUAL_KEYWORD" representation="GEqual" />
    <Keyword name="LESS_KEYWORD" representation="Less" />
    <Keyword name="LEQUAL_KEYWORD" representation="LEqual" />
    <Keyword name="EQUAL_KEYWORD" representation="Equal" />
    <Keyword name="NOT_EQUAL_KEYWORD" representation="NotEqual" />
    <Keyword name="ALWAYS_KEYWORD" representation="Always" />
    <Keyword name="NEVER_KEYWORD" representation="Never" />
  </ComparisonFunctionKeywords>

  <StencilOperationKeywords NodeType="KeywordTokenNodeType">
    <Keyword name="KEEP_KEYWORD" representation="Keep" />
    <Keyword name="ZERO_KEYWORD" representation="Zero" />
    <Keyword name="REPLACE_KEYWORD" representation="Replace" />
    <Keyword name="INCR_SAT_KEYWORD" representation="IncrSat" />
    <Keyword name="DECR_SAT_KEYWORD" representation="DecrSat" />
    <Keyword name="INVERT_KEYWORD" representation="Invert" />
    <Keyword name="INCR_WRAP_KEYWORD" representation="IncrWrap" />
    <Keyword name="DECR_WRAP_KEYWORD" representation="DecrWrap" />
  </StencilOperationKeywords>

  <BoolKeywords NodeType="KeywordTokenNodeType">
    <Keyword name="TRUE_KEYWORD" representation="True" />
    <Keyword name="FALSE_KEYWORD" representation="False" />
    <Keyword name="ON_KEYWORD" representation="On" />
    <Keyword name="OFF_KEYWORD" representation="Off" />
  </BoolKeywords>
</ShaderLabTokens>

<idea-plugin>
  <id>com.intellij.resharper.unity</id>
  <name>Unity Support</name>
  <description><![CDATA[
<p>Unity support for Rider.</p>
<p></p>
<p><b>Features</b></p>
<p></p>
<p>
<ul>
  <li>Event functions and serialised fields that are implicitly used by Unity are marked with an icon in the text editor gutter.</li>
  <li>Implicitly used methods, fields and attributed types are no longer marked as unused.</li>
  <li>Generate event functions via Insert Code GUI or auto complete as you type method definitions.</li>
  <li>Code completion, find usages and rename of method names in string literal arguments for <code>MonoBehaviour.Invoke</code>, <code>InvokeRepeating</code>, <code>IsInvoking</code>, and <code>CancelInvoke</code>. Also <code>MonoBehaviour.StartCoroutine</code>/<code>StopCoroutine</code>.</li>
  <li>Inspections and Quick Fix for <code>CompareTag</code> instead of string comparison.</li>
  <li>All Unity based classes are supported via analysis of the Unity API documentation (<code>MonoBehaviour</code>, <code>ScriptableObject</code>, <code>EditorWindow</code>, etc.)</li>
  <li>Descriptions for message handler methods and parameters in Unity based classes are shown in tooltips and QuickDoc.</li>
  <li>"Read more" in QuickDoc will navigate to the Unity API documentation, locally if available, or via the Unity website.</li>
  <li>Supports Unity API versions 5.2 to 5.5.</li>
  <li>Suppress naming consistency warnings for known Unity message handlers. E.g. Rider no longer suggests that <code>AnimatorIK</code> be renamed to <code>AnimatorIk</code>.</li>
  <li>Disables the <code>Assets</code> and <code>Assets\Scripts</code> from being considered as "namespace providers". This means Rider will no longer suggest to include Assets or Scripts in the namespace of your code.</li>
  <li>Automatically sets C# language level, to C# 4 or C# 6, as appropriate.</li>
</ul>
</p>
<p></p>
<p><b>Links</b></p>
<p></p>
<p>
<ul>
  <li><a href="https://github.com/JetBrains/resharper-unity">GitHub</a>
  <li><a href="https://github.com/JetBrains/resharper-unity/issues">Issues</a>
</ul>
</p>
]]>
  </description>
  <change-notes>
<![CDATA[
<p>Updated to EAP19</p>
<p>Improve location of "Create serialized field" Quick Fix (<a href="https://github.com/JetBrains/resharper-unity/issues/124">#124</a>)</p>
<ul>
  <ul>Fix nasty bug that will recreate all .meta files when reloading projects. Sorry! (<a href="https://github.com/JetBrains/resharper-unity/issues/118">#118</a>)</ul>
  <li>Correctly update .meta files when creating, renaming or refactoring (<a href="https://github.com/JetBrains/resharper-unity/issues/56">#56</a>, <a href="https://github.com/JetBrains/resharper-unity/issues/61">#61</a>)</li>
  <li>"Create serialized field" from usage Quick Fix (<a href="https://github.com/JetBrains/resharper-unity/issues/111">#111</a>)</li>
  <li>Inspections and quick fixes for incorrect event function signature and return type</li>
  <li>Event functions that are coroutines are now recognised and marked as in use (<a href="https://github.com/JetBrains/resharper-unity/issues/52">#52</a>)</li>
  <li>Context action to convert event function signature to/from coroutine</li>
  <li>Add coroutine and optional parameter information to API and tooltips</li>
  <li>Expand API support to 5.0 - 5.6</li>
  <li>Add regex annotations for EditorTestsWithLogParser.ExpectLogLineRegex (<a href="https://github.com/JetBrains/resharper-unity/issues/95">#95</a>)</li>
  <li>Warn if coroutine return value is unused (<a href="https://github.com/JetBrains/resharper-unity/issues/99">#99</a>)</li>
</ul>
]]>
  </change-notes>
  <version>1.6.2.0</version>
  <vendor url="https://www.jetbrains.com" logo="resharper/Logos/UnityLogo.png">JetBrains</vendor>
  <idea-version since-build="171.3655" until-build="171.3655.9999" />
  <extensions defaultExtensionNs="com.intellij" />
  <depends>com.intellij.modules.rider</depends>
</idea-plugin>

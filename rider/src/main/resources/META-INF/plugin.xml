<idea-plugin>
  <id>com.intellij.resharper.unity</id>
  <name>Unity Support</name>
  <version>2019.3.0.9999</version>
  <vendor url="https://www.jetbrains.com">JetBrains</vendor>

  <depends>com.intellij.modules.rider</depends>
  <depends optional="true" config-file="PluginYamlPluginPart.xml">org.jetbrains.plugins.yaml</depends>
  <depends optional="true" config-file="PluginAppenderPluginPart.xml">rider.intellij.plugin.appender</depends>

  <extensionPoints>
    <extensionPoint name="unityAttachConfiguration" area="IDEA_PROJECT" interface="com.jetbrains.rider.run.configurations.unity.UnityAttachConfigurationExtension" />
  </extensionPoints>

  <extensions defaultExtensionNs="com.intellij">
    <configurationType implementation="com.jetbrains.rider.plugins.unity.run.configurations.UnityDebugConfigurationType" />
    <postStartupActivity implementation="com.jetbrains.rider.plugins.unity.ui.UnityUIMinimizer"/>

    <applicationConfigurable groupId="language" instance="com.jetbrains.rider.settings.UnityPluginOptionsPage" id="preferences.build.unityPlugin" />

    <projectConfigurable parentId="FileTemplatesSettingsId" instance="com.jetbrains.rider.settings.templates.UnityFileTemplatesOptionPage" groupWeight="-120" />
    <projectConfigurable parentId="LiveTemplatesSettingsId" instance="com.jetbrains.rider.settings.templates.UnityLiveTemplatesOptionPage" groupWeight="-120" />

    <!-- This has to be first, as the default Rider handler returns an empty list instead of null, and IJ considers that handled -->
    <lang.documentationProvider language="C#" implementationClass="com.jetbrains.rider.plugins.unity.quickDoc.UnityDocumentationProvider"
                                order="first" />


    <ignoredFileProvider implementation="com.jetbrains.rider.plugins.unity.UnityIgnoredFileProvider"/>

    <!-- For future reference, fileTypeFactory[@id] defines the name used in the @language attributes of the other
         registration elements. This @id MUST match the value returned by FileType.getName() - case sensitive! -->

    <!-- ShaderLab support -->
    <fileType name="ShaderLab" fieldName="INSTANCE" implementationClass="com.jetbrains.rider.plugins.unity.ideaInterop.fileTypes.shaderLab.ShaderLabFileType" language="ShaderLab" extensions="shader"/>
    <lang.altEnter language="ShaderLab" implementationClass="com.jetbrains.rider.intentions.altEnter.ReSharperBulbMenuModelFactory" />
    <lang.parserDefinition language="ShaderLab" implementationClass="com.jetbrains.rider.plugins.unity.ideaInterop.fileTypes.shaderLab.ShaderLabParserDefinition" />
    <lang.syntaxHighlighterFactory language="ShaderLab" implementationClass="com.jetbrains.rider.plugins.unity.ideaInterop.fileTypes.shaderLab.ShaderLabSyntaxHighlighterProvider" />
    <backend.markup.adapterFactory language="ShaderLab" implementationClass="com.jetbrains.rdclient.daemon.FrontendMarkupAdapterFactory" />
    <backend.actions.support language="ShaderLab" implementationClass="com.jetbrains.rider.actions.RiderActionSupportPolicy" />
    <backend.autoPopup.support language="ShaderLab" implementationClass="com.jetbrains.rider.completion.BackendAndGenericRider" />
    <iconProvider implementation="com.jetbrains.rider.plugins.unity.ideaInterop.fileTypes.shaderLab.ShaderLabIconProvider" />
    <completion.contributor language="ShaderLab" implementationClass="com.jetbrains.rdclient.completion.ProtocolCompletionContributor" />
    <completion.contributor language="ShaderLab" implementationClass="com.jetbrains.rider.plugins.unity.ideaInterop.fileTypes.cg.CgCompletionContributor" />

    <!-- Cg support -->
    <!-- Don't forget to update CgProjectFileType list on the backend -->
    <fileType name="Cg" fieldName="INSTANCE" implementationClass="com.jetbrains.rider.plugins.unity.ideaInterop.fileTypes.cg.CgFileType" language="Cg" extensions="cginc;compute;hlsl;glsl;hlslinc;glslinc"/>
    <lang.parserDefinition language="Cg" implementationClass="com.jetbrains.rider.plugins.unity.ideaInterop.fileTypes.cg.CgParserDefinition" />
    <lang.syntaxHighlighterFactory language="Cg" implementationClass="com.jetbrains.rider.plugins.unity.ideaInterop.fileTypes.cg.CgSyntaxHighlighterProvider" />
    <backend.markup.adapterFactory language="Cg" implementationClass="com.jetbrains.rdclient.daemon.FrontendMarkupAdapterFactory" />
    <backend.actions.support language="Cg" implementationClass="com.jetbrains.rider.actions.RiderActionSupportPolicy" />
    <iconProvider implementation="com.jetbrains.rider.plugins.unity.ideaInterop.fileTypes.cg.CgIconProvider" />
    <completion.contributor language="Cg" implementationClass="com.jetbrains.rider.plugins.unity.ideaInterop.fileTypes.cg.CgCompletionContributor" />

    <!-- asmdef support -->
    <fileType name="AsmDef" fieldName="INSTANCE" implementationClass="com.jetbrains.rider.plugins.unity.ideaInterop.fileTypes.asmdef.AsmDefFileType" language="JSON" extensions="asmdef"/>
    <lang.altEnter language="JSON" implementationClass="com.jetbrains.rider.intentions.altEnter.ReSharperBulbMenuModelFactory" />
    <backend.actions.support language="JSON" implementationClass="com.jetbrains.rider.actions.RiderActionSupportPolicy" />
    <backend.markup.adapterFactory language="JSON" implementationClass="com.jetbrains.rdclient.daemon.FrontendMarkupAdapterFactory" />
    <completion.contributor language="JSON" implementationClass="com.jetbrains.rdclient.completion.ProtocolCompletionContributor" />
    <quoteHandler fileType="AsmDef" className="com.intellij.json.JsonQuoteHandler"/>

    <fileType name="UnityYaml" fieldName="INSTANCE" implementationClass="com.jetbrains.rider.plugins.unity.ideaInterop.fileTypes.yaml.UnityYamlFileType" language="UnityYaml" extensions="meta;unity;prefab;asset"/>
    <iconProvider implementation="com.jetbrains.rider.plugins.unity.ideaInterop.fileTypes.yaml.UnityYamlIconProvider" />
    <lang.altEnter language="UnityYaml" implementationClass="com.jetbrains.rider.intentions.altEnter.ReSharperBulbMenuModelFactory" />
    <lang.parserDefinition language="UnityYaml" implementationClass="com.jetbrains.rider.plugins.unity.ideaInterop.fileTypes.yaml.UnityYamlParserDefinition" />
    <backend.actions.support language="UnityYaml" implementationClass="com.jetbrains.rider.actions.RiderActionSupportPolicy" />
    <backend.markup.adapterFactory language="UnityYaml" implementationClass="com.jetbrains.rdclient.daemon.FrontendMarkupAdapterFactory" />
    <backend.typedHandler language="UnityYaml" implementationClass="com.jetbrains.rdclient.editorActions.FrontendTypedHandler"/>

    <editorNotificationProvider implementation="com.jetbrains.rider.plugins.unity.ui.NonUserEditableEditorNotification" />

    <!-- Unity Explorer -->
    <projectViewPane implementation="com.jetbrains.rider.plugins.unity.explorer.UnityExplorer" id="UnityExplorer" order="first, before SolutionExplorer"/>
    <projectModelViewUpdater implementation="com.jetbrains.rider.plugins.unity.explorer.UnityExplorerProjectModelViewUpdater"/>

    <xdebugger.attachDebuggerProvider implementation="com.jetbrains.rider.plugins.unity.run.attach.UnityAttachEditorDebuggerProvider" />

    <rider.android.project.validator implementation="com.jetbrains.rider.plugins.unity.android.UnityCustomAndroidProjectValidator"/>
    <rdclient.traceScenarioHolder implementation="com.jetbrains.rider.plugins.unity.logs.UnityLogTraceScenarios"/>

    <feedbackDescriptionProvider implementation="com.jetbrains.rider.plugins.unity.UnityFeedbackDescriptionProvider" />
    <statusBarWidgetProvider implementation="com.jetbrains.rider.plugins.unity.ui.UnityStatusBarWidget" />
  </extensions>

  <project-components>
    <component><implementation-class>com.jetbrains.rider.plugins.unity.ui.UnitTest.UnitTestLauncherState</implementation-class></component>
    <component><implementation-class>com.jetbrains.rider.UnityProjectDiscoverer</implementation-class></component>
    <component><implementation-class>com.jetbrains.rider.plugins.unity.ui.UnityUIManager</implementation-class></component>
    <component><implementation-class>com.jetbrains.rider.plugins.unity.ContentModelUpdater</implementation-class></component>
    <component><implementation-class>com.jetbrains.rider.plugins.unity.notifications.OutOfSyncEditorNotification</implementation-class></component>
    <component><implementation-class>com.jetbrains.rider.plugins.unity.notifications.YamlHugeFileNotification</implementation-class></component>
    <component><implementation-class>com.jetbrains.rider.plugins.unity.notifications.AssetModeForceTextNotification</implementation-class></component>
    <component><implementation-class>com.jetbrains.rider.settings.RiderUnitySettings</implementation-class></component>
    <component><implementation-class>com.jetbrains.rider.plugins.unity.run.DefaultRunConfigurationGenerator</implementation-class></component>
    <component><implementation-class>com.jetbrains.rider.plugins.unity.UnityHost</implementation-class></component>
    <component><implementation-class>com.jetbrains.rider.plugins.unity.notifications.UnityAutoSaveConfigureNotification</implementation-class></component>
    <component><implementation-class>com.jetbrains.rider.plugins.unity.SaveAllTracker</implementation-class></component>
    <component><implementation-class>com.jetbrains.rider.plugins.unity.VcsPullTracker</implementation-class></component>
    <component><implementation-class>com.jetbrains.rider.plugins.unity.toolWindow.UnityToolWindowManager</implementation-class></component>
    <component><implementation-class>com.jetbrains.rider.plugins.unity.toolWindow.UnityToolWindowFactory</implementation-class></component>
    <component><implementation-class>com.jetbrains.rider.plugins.unity.notifications.OpenUnityProjectAsFolderNotification</implementation-class></component>
    <component><implementation-class>com.jetbrains.rider.plugins.unity.notifications.UpdateMonoNotification</implementation-class></component>
  </project-components>

  <actions>
    <action id="AttachToUnityProcessAction"
            class="com.jetbrains.rider.plugins.unity.actions.AttachToUnityProcessAction"
            text="Attach to Unity Process&#8230;"
            description="Attach debugger to Unity Editor process"
            icon="UnityIcons.Actions.AttachToUnity">
      <add-to-group group-id="XDebugger.AttachGroup" anchor="after" relative-to-action="XDebugger.AttachToLocalProcess" />
    </action>

    <action id="ShowUnitySettingsInRider"
            class="com.jetbrains.rider.plugins.unity.actions.UnityPluginShowSettingsAction"
            text="Unity Settings&#8230;"
            description="Show Unity settings"
            icon="AllIcons.General.Settings" />

    <group id="UnityToolbarActions">
      <add-to-group group-id="ActiveRuntimeGroup" relative-to-action="BuildSolutionAction" anchor="after" />

      <separator/>

      <group id="UnityShowImportantAction" popup="true" class="com.jetbrains.rider.plugins.unity.ui.UnityImportantActions" text="Important Unity-related Actions">
        <action id="StartUnityAction"
                class="com.jetbrains.rider.plugins.unity.actions.StartUnityAction"
                text="Start Unity"
                description="Start Unity with current project"
                icon="UnityIcons.Actions.StartUnity" />
        <reference ref="AttachToUnityProcessAction" />
        <reference ref="ShowUnitySettingsInRider" />

        <separator/>

        <action id="SwitchUIModeAction"
                class="com.jetbrains.rider.plugins.unity.ui.SwitchUIMode"
                text="Toggle UI Mode"
                description="Show or hide unnecessary UI tool windows" />
        <action id="ShowUnityLogInRiderAction"
                class="com.jetbrains.rider.plugins.unity.actions.ShowUnityLogInRiderAction"
                text="Show Unity Log Window" />
      </group>

      <group id="UnityDllShowImportantAction" popup="true" class="com.jetbrains.rider.plugins.unity.ui.UnityDllImportantActions" text="Important Unity-related Actions">
        <reference ref="AttachToUnityProcessAction" />
        <reference ref="ShowUnitySettingsInRider" />
      </group>

      <action id="TriggerRefreshInUnity"
              class="com.jetbrains.rider.plugins.unity.actions.RefreshInUnityAction"
              text="Refresh Unity Assets"
              description="Trigger refresh assets in Unity Editor"
              icon="AllIcons.Actions.Refresh" />
      <action id="TriggerPlayInUnity"
              class="com.jetbrains.rider.plugins.unity.actions.PlayInUnityAction"
              text="Play/Edit"
              description="Toggle play mode in Unity Editor"
              icon="UnityIcons.Actions.Execute" />
      <action id="TriggerPauseInUnityEditor"
              class="com.jetbrains.rider.plugins.unity.actions.PauseInUnityAction"
              text="Pause/Resume"
              description="Toggle play/pause in Unity Editor"
              icon="UnityIcons.Actions.Pause" />
      <action id="TriggerStepInUnityEditor"
              class="com.jetbrains.rider.plugins.unity.actions.StepInUnityAction"
              text="Step"
              description="Step a single frame in Unity Editor"
              icon="UnityIcons.Actions.Step" />
      <separator/>
    </group>

    <group id="Rider.UnitTesting.TopToolbar.MiscOptions.Unity">
      <add-to-group group-id="Rider.UnitTesting.TopToolbar.MiscOptions.Plugin" anchor="last"/>
      <action id="UnityTestLauncher"
              class="com.jetbrains.rider.plugins.unity.ui.UnitTest.SwitchUnitTestLauncherComboBoxAction" />
    </group>

    <!-- Note that this doesn't have text, so it doesn't show up in the keymap options page -->
    <action id="ShowReferencePropertiesAction"
            class="com.jetbrains.rider.plugins.unity.explorer.ShowReferencePropertiesAction"
            use-shortcut-of="ShowIntentionActions">
      <add-to-group group-id="SolutionExplorerPopupMenu" anchor="last" />
    </action>

    <action id="InstallEditorPluginAction"
            class="com.jetbrains.rider.plugins.unity.actions.InstallEditorPluginAction"
            text="Install Unity Editor Plugin" />

    <action class="com.jetbrains.rider.plugins.unity.actions.FindUnityUsagesAction" id="RdFindUnityUsagesAction" text="Find Unity Usages">
      <add-to-group group-id="FindMenuGroup" anchor="after" relative-to-action="FindUsages"/>
      <add-to-group group-id="EditorPopupMenu1.FindRefactor" anchor="after" relative-to-action="FindUsages"/>
    </action>
  </actions>

  <extensions defaultExtensionNs="com.intellij">
    <!-- IDEA default schemes -->
    <additionalTextAttributes file="colorSchemes/default_additional.xml" scheme="Default" />
    <additionalTextAttributes file="colorSchemes/darcula_additional.xml" scheme="Darcula" />
  </extensions>

  <extensions defaultExtensionNs="JavaScript">
    <JsonSchema.ProviderFactory implementation="com.jetbrains.rider.plugins.unity.asmdef.AsmDefJsonSchemeProviderFactory"/>
  </extensions>


  <description><![CDATA[
<p>Adds support for the Unity engine.</p>
<p>
<strong>Features</strong>
<ul>
  <li>Code completion of event function declarations in a class.</li>
  <li>Use Generate Code to create event functions, with parameters, or start typing for automatic completion.</li>
  <li>Highlights Unity event functions and serializable fields and marks as implicitly used by Unity.</li>
  <li>Supports Unity API 5.0 - 2019.2, plus undocumented functions.</li>
  <li>Inspections, Quick Fixes and Context Actions for Unity specific issues, with documented explanations.</li>
  <li>Performance indicators to avoid known code patterns that affect performance.</li>
  <li>Parse class and method usage from scene, prefab and assets.</li>
  <li>Support for ShaderLab and Assembly Definition files.</li>
  <li>Automatically connect debugger to Unity editor.</li>
  <li>Lists and debugs external players.</li>
  <li>Extra Unity data in debugger views.</li>
  <li>Play/pause/step directly from Rider.</li>
  <li>View Unity console in Rider, with parsed stack traces and text filter.</li>
  <li>Run Unity editor tests directly from Rider.</li>
  <li>Unity Explorer to view project as shown in Unity's Assets view, with Packages.</li>
  <li>Navigate to external Unity documentation.</li>
  <li>Correctly updates <tt>.meta</tt> files.</li>
  <li>Code completion, rename and find usages for "magic strings" in method calls.</li>
  <li>Automatically adds <tt>FormerlySerializedAs</tt> attribute when renaming fields.</li>
  <li>Automatically sets Unity projects to C# 4 or C# 6. No more suggestions for features that won't compile!</li>
  <li>Highlights <tt>UnityEngine.Color</tt> and <tt>Color32</tt>. Edit via colour palette quick fix.</li>
  <li>Unity specific file and live templates.</li>
  <li>And much more!</li>
</ul>
</p>
<p>
<strong>Links</strong>
<ul>
  <li><a href="https://github.com/JetBrains/resharper-unity">GitHub</a>
  <li><a href="https://github.com/JetBrains/resharper-unity/issues">Issues</a>
</ul>
</p>
]]>
  </description>
  <change-notes>
<![CDATA[
<p>
<strong>New in 2019.3</strong>
<em>Added:</em>
<ul>
  <li>Rider: Add support for play mode tests (<a href="https://github.com/JetBrains/resharper-unity/issues/1293">#1293</a>, <a href="https://youtrack.jetbrains.com/issue/RIDER-19513">RIDER-19513</a>)</li>
  <li>Rider: Show prompt to set Rider as default external editor when Unity is started by Rider (<a href="https://github.com/JetBrains/resharper-unity/issues/1127">#1127<a/>), <a href="https://github.com/JetBrains/resharper-unity/pull/1270">#1270</a>)</li>
  <li>Rider: Add Unity specific Live Templates settings page (<a href="https://github.com/JetBrains/resharper-unity/pull/1351">#1351</a>)</li>
</ul>
<em>Changed:</em>
<ul>
  <li>Rider: Improve display of count of merged log items (<a href="https://github.com/JetBrains/resharper-unity/issues/1296">#1296</a>, <a href="https://github.com/JetBrains/resharper-unity/pull/1301">#1301</a>)</li>
  <li>Rider: Status bar icon will show when Unity Editor is paused (<a href="https://github.com/JetBrains/resharper-unity/issues/1227">#1227</a>, <a href="https://github.com/JetBrains/resharper-unity/pull/1301">#1301</a>)</li>
  <li>Rider: Show Unity actions toolbar when opening a folder without a solution, to make it easy to launch Unity (<a href="https://github.com/JetBrains/resharper-unity/pull/1325">#1325</a>)</li>
  <li>Rider: Clear on Play now supported in Rider's Unity log viewer (<a href="https://github.com/JetBrains/resharper-unity/issues/1281">#1281</a>, <a href="https://github.com/JetBrains/resharper-unity/pull/1294">#1294</a>)</li>
  <li>Unity Editor: Use new 2019.2 API to open Rider at correct column as well as line (requires Rider package 1.1.0+) (<a href="https://github.com/JetBrains/resharper-unity/issues/888">#888</a>)</li>
</ul>
<em>Fixed:</em>
<ul>
  <li>Unity Editor: Fix exception calling <tt>EditorApplication.isPlaying</tt> on wrong thread (<a href="https://github.com/JetBrains/resharper-unity/pull/1308">#1308</a>)</li>
</ul>
</p>
<p>See the <a href="https://github.com/JetBrains/resharper-unity/blob/193/CHANGELOG.md">CHANGELOG</a> for more details and history.</p>
]]>
  </change-notes>
</idea-plugin>

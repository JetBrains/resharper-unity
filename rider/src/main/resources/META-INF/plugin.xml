<idea-plugin url="https://github.com/JetBrains/resharper-unity" require-restart="true">
  <id>com.intellij.resharper.unity</id>
  <name>Unity Support</name>
  <version>2021.1.0.9999</version>
  <vendor url="https://www.jetbrains.com">JetBrains</vendor>

  <idea-version since-build="2021.1" />

  <depends>com.intellij.modules.rider</depends>
  <depends>com.intellij.modules.xdebugger</depends>
  <depends optional="true" config-file="PluginYamlPluginPart.xml">org.jetbrains.plugins.yaml</depends>
  <depends optional="true" config-file="PluginAppenderPluginPart.xml">rider.intellij.plugin.appender</depends>
  <depends optional="true" config-file="PluginCssPluginPart.xml">com.intellij.css</depends>

  <extensionPoints>
    <extensionPoint name="unityAttachConfiguration" area="IDEA_PROJECT" interface="com.jetbrains.rider.run.configurations.unity.UnityAttachConfigurationExtension" />
  </extensionPoints>

  <extensions defaultExtensionNs="com.intellij">
    <postStartupActivity implementation="com.jetbrains.rider.plugins.unity.ui.UnityUIMinimizer"/>

    <!-- Options pages -->
    <applicationConfigurable groupId="language" instance="com.jetbrains.rider.settings.UnityPluginOptionsPage" id="preferences.build.unityPlugin" />

    <projectConfigurable parentId="FileTemplatesSettingsId" instance="com.jetbrains.rider.settings.templates.UnityFileTemplatesOptionPage" groupWeight="-120" />
    <projectConfigurable parentId="LiveTemplatesSettingsId" instance="com.jetbrains.rider.settings.templates.UnityLiveTemplatesOptionPage" groupWeight="-120" />

    <spellchecker.bundledDictionaryProvider implementation="com.jetbrains.rider.plugins.unity.spellchecker.UnityBundledDictionaryProvider"/>

    <!--suppress PluginXmlValidity -->
    <ignoredFileProvider implementation="com.jetbrains.rider.plugins.unity.UnityIgnoredFileProvider"/>

    <!-- This has to be order="first", as the default Rider handler returns an empty list instead of null, and IJ considers that handled -->
    <lang.documentationProvider language="C#" implementationClass="com.jetbrains.rider.plugins.unity.quickDoc.UnityDocumentationProvider" order="first" />

    <!-- For future reference, fileTypeFactory[@id] defines the name used in the @language attributes of the other
         registration elements. This @id MUST match the value returned by FileType.getName() - case sensitive! -->

    <!-- ShaderLab support -->
    <fileType name="ShaderLab" fieldName="INSTANCE" implementationClass="com.jetbrains.rider.plugins.unity.ideaInterop.fileTypes.shaderLab.ShaderLabFileType" language="ShaderLab" extensions="shader"/>
    <lang.altEnter language="ShaderLab" implementationClass="com.jetbrains.rider.intentions.altEnter.ReSharperBulbMenuModelFactory" />
    <lang.parserDefinition language="ShaderLab" implementationClass="com.jetbrains.rider.plugins.unity.ideaInterop.fileTypes.shaderLab.ShaderLabParserDefinition" />
    <lang.syntaxHighlighterFactory language="ShaderLab" implementationClass="com.jetbrains.rider.plugins.unity.ideaInterop.fileTypes.shaderLab.ShaderLabSyntaxHighlighterProvider" />
    <backend.markup.adapterFactory language="ShaderLab" implementationClass="com.jetbrains.rdclient.daemon.FrontendMarkupAdapterFactory" />
    <backend.actions.support language="ShaderLab" implementationClass="com.jetbrains.rider.actions.RiderActionSupportPolicy" />
    <backend.autoPopup.support language="ShaderLab" implementationClass="com.jetbrains.rider.completion.BackendAndGenericRider" />
    <iconProvider implementation="com.jetbrains.rider.plugins.unity.ideaInterop.fileTypes.shaderLab.ShaderLabIconProvider" />
    <completion.contributor language="ShaderLab" implementationClass="com.jetbrains.rdclient.completion.ProtocolCompletionContributor" />
    <codeInsight.parameterInfo language="ShaderLab" implementationClass="com.jetbrains.rdclient.parameterInfo.FrontendParameterInfoHandler"/>
    <lang.documentationProvider language="ShaderLab" implementationClass="com.jetbrains.rdclient.quickDoc.FrontendDocumentationProvider"/>
    <backend.typedHandler language="ShaderLab" implementationClass="com.jetbrains.rider.cpp.fileType.CppTypedHandler"/>
    <langCodeStyleSettingsProvider implementation="com.jetbrains.rider.plugins.unity.ideaInterop.fileTypes.shaderLab.settings.ShaderLabStyleSettingsProvider"/>

    <fileType name="C++" extensions="cg;cginc;hlslinc;compute" />

    <!-- Cg support -->
    <!-- Don't forget to update CgProjectFileType list on the backend -->
    <fileType name="Cg" fieldName="INSTANCE" implementationClass="com.jetbrains.rider.plugins.unity.ideaInterop.fileTypes.cg.CgFileType" language="Cg" extensions="glsl;glslinc"/>
    <lang.parserDefinition language="Cg" implementationClass="com.jetbrains.rider.plugins.unity.ideaInterop.fileTypes.cg.CgParserDefinition" />
    <lang.syntaxHighlighterFactory language="Cg" implementationClass="com.jetbrains.rider.plugins.unity.ideaInterop.fileTypes.cg.CgSyntaxHighlighterProvider" />
    <backend.markup.adapterFactory language="Cg" implementationClass="com.jetbrains.rdclient.daemon.FrontendMarkupAdapterFactory" />
    <backend.actions.support language="Cg" implementationClass="com.jetbrains.rider.actions.RiderActionSupportPolicy" />
    <iconProvider implementation="com.jetbrains.rider.plugins.unity.ideaInterop.fileTypes.cg.CgIconProvider" />
    <completion.contributor language="Cg" implementationClass="com.jetbrains.rider.plugins.unity.ideaInterop.fileTypes.cg.CgCompletionContributor" />

    <!-- asmdef support -->
    <fileType name="AsmDef" fieldName="INSTANCE" implementationClass="com.jetbrains.rider.plugins.unity.ideaInterop.fileTypes.asmdef.AsmDefFileType" language="JSON" extensions="asmdef"/>
    <lang.altEnter language="JSON" implementationClass="com.jetbrains.rider.intentions.altEnter.ReSharperBulbMenuModelFactory" />
    <backend.actions.support language="JSON" implementationClass="com.jetbrains.rider.plugins.unity.ideaInterop.fileTypes.asmdef.AsmDefActionCallPolicy" />
    <backend.markup.adapterFactory language="JSON" implementationClass="com.jetbrains.rdclient.daemon.FrontendMarkupAdapterFactory" />
    <completion.contributor language="JSON" implementationClass="com.jetbrains.rdclient.completion.ProtocolCompletionContributor" />
    <quoteHandler fileType="AsmDef" className="com.intellij.json.JsonQuoteHandler"/>

    <!-- YAML asset support -->
    <fileType name="UnityYaml" fieldName="INSTANCE" implementationClass="com.jetbrains.rider.plugins.unity.ideaInterop.fileTypes.yaml.UnityYamlFileType" language="UnityYaml" extensions="meta;unity;prefab;asset"/>
    <iconProvider implementation="com.jetbrains.rider.plugins.unity.ideaInterop.fileTypes.yaml.UnityYamlIconProvider" />
    <lang.altEnter language="UnityYaml" implementationClass="com.jetbrains.rider.intentions.altEnter.ReSharperBulbMenuModelFactory" />
    <lang.parserDefinition language="UnityYaml" implementationClass="com.jetbrains.rider.plugins.unity.ideaInterop.fileTypes.yaml.UnityYamlParserDefinition" />
    <backend.actions.support language="UnityYaml" implementationClass="com.jetbrains.rider.actions.RiderActionSupportPolicy" />
    <backend.markup.adapterFactory language="UnityYaml" implementationClass="com.jetbrains.rdclient.daemon.FrontendMarkupAdapterFactory" />
    <backend.typedHandler language="UnityYaml" implementationClass="com.jetbrains.rdclient.editorActions.FrontendTypedHandler"/>

    <!-- UXML support -->
    <fileType name="UXML" language="UXML" fieldName="INSTANCE" implementationClass="com.jetbrains.rider.plugins.unity.ideaInterop.fileTypes.uxml.UxmlFileType" extensions="uxml" />
    <lang.parserDefinition language="UXML" implementationClass="com.jetbrains.rider.plugins.unity.ideaInterop.fileTypes.uxml.UxmlFileParserDefinition"/>
    <breadcrumbsInfoProvider implementation="com.jetbrains.rider.plugins.unity.ideaInterop.fileTypes.uxml.UxmlFileBreadcrumbsProvider" />
    <xml.schemaProvider implementation="com.jetbrains.rider.plugins.unity.ideaInterop.fileTypes.uxml.codeInsight.schema.UxmlSchemaProvider" />

    <!-- JSON support -->
    <fileType name="JSON" extensions="inputactions"/>

    <editorNotificationProvider implementation="com.jetbrains.rider.plugins.unity.ui.UssDisabledEditorNotification" />
    <editorNotificationProvider implementation="com.jetbrains.rider.plugins.unity.ui.UxmlMissingSchemaEditorNotification" />
    <editorNotificationProvider implementation="com.jetbrains.rider.plugins.unity.ui.NonUserEditableEditorNotification" />

    <!-- Unity Explorer -->
    <projectViewPane implementation="com.jetbrains.rider.plugins.unity.explorer.UnityExplorer" id="UnityExplorer" order="first, before SolutionExplorer"/>
    <projectModelViewUpdater implementation="com.jetbrains.rider.plugins.unity.explorer.UnityExplorerProjectModelViewUpdater"/>
    <projectModelViewExtensions implementation="com.jetbrains.rider.plugins.unity.explorer.UnityProjectModelViewExtensions"/>

    <!-- Run configurations -->
    <configurationType implementation="com.jetbrains.rider.plugins.unity.run.configurations.UnityDebugConfigurationType" />
    <configurationType implementation="com.jetbrains.rider.plugins.unity.run.configurations.unityExe.UnityExeConfigurationType" />

    <!-- Debugger -->
    <xdebugger.attachDebuggerProvider implementation="com.jetbrains.rider.plugins.unity.run.attach.UnityLocalAttachProcessDebuggerProvider" />
    <xdebugger.breakpointType implementation="com.jetbrains.rider.plugins.unity.debugger.breakpoints.UnityPausepointBreakpointType" />
    <rider.breakpoint.customPanelProvider implementation="com.jetbrains.rider.plugins.unity.debugger.breakpoints.UnityPausepointPanelProvider" />
    <rider.debug.breakpoint.handler.factory implementation="com.jetbrains.rider.plugins.unity.debugger.breakpoints.UnityPausepointHandlerFactory" />
    <rider.breakpoint.customPopupActionsProvider implementation="com.jetbrains.rider.plugins.unity.debugger.breakpoints.ConvertToPausepointPopupActionProvider" />

    <!-- Android support -->
    <rider.android.project.validator implementation="com.jetbrains.rider.plugins.unity.android.UnityCustomAndroidProjectValidator"/>

    <!-- Logging and feedback -->
    <rdclient.traceScenarioHolder implementation="com.jetbrains.rider.plugins.unity.logs.UnityLogTraceScenarios"/>
    <feedbackDescriptionProvider implementation="com.jetbrains.rider.plugins.unity.UnityFeedbackDescriptionProvider" />

    <!-- TODO: Fix up ordering once Rider's own status bar widgets have been migrated to StatusBarWidgetFactory
         Modern status bar widgets have an order defined in xml, the legacy style order is decided at runtime, so we
         can't order relative to other Rider status bar widgets. Previously, we only had "after readOnlyWidget", with
         no "before" -->
    <!--suppress PluginXmlValidity -->
    <statusBarWidgetFactory id="unityWidget" implementation="com.jetbrains.rider.plugins.unity.ui.UnityStatusBarWidget" order="after readOnlyWidget, before fatalErrorWidget" />
    <statusBarWidgetFactory implementation="com.jetbrains.rider.plugins.unity.ui.shaders.ShaderWidgetFactory" order="before unityWidget" />

    <!-- File Layout -->
    <standardResourceProvider implementation="com.jetbrains.rider.plugins.unity.settings.fileLayout.AdditionalFileLayoutStandardResourceProvider"/>
    <xml.schemaProvider implementation="com.jetbrains.rider.plugins.unity.settings.fileLayout.AdditionalFileLayoutSchemaProvider"/>

    <navbar implementation="com.jetbrains.rider.plugins.unity.ide.navigationToolbar.UnityNavBarModelExtension"/>

    <projectService serviceImplementation="com.jetbrains.rider.plugins.unity.ui.UnityUIManager"/>
    <projectService serviceImplementation="com.jetbrains.rider.UnityProjectDiscoverer"/>

    <diff.merge.external.AutomaticExternalMergeTool implementation="com.jetbrains.rider.plugins.unity.diff.UnityYamlAutomaticExternalMergeTool"/>
  </extensions>

  <projectListeners>
    <listener class="com.jetbrains.rider.plugins.unity.ContentModelUpdater" topic="com.intellij.openapi.project.ProjectManagerListener" />
  </projectListeners>

  <project-components>
    <component><implementation-class>com.jetbrains.rider.plugins.unity.ui.unitTesting.UnitTestLauncherState</implementation-class></component>
    <component><implementation-class>com.jetbrains.rider.plugins.unity.notifications.OutOfSyncEditorNotification</implementation-class></component>
    <component><implementation-class>com.jetbrains.rider.plugins.unity.notifications.YamlHugeFileNotification</implementation-class></component>
    <component><implementation-class>com.jetbrains.rider.plugins.unity.notifications.AssetModeForceTextNotification</implementation-class></component>
    <component><implementation-class>com.jetbrains.rider.settings.RiderUnitySettings</implementation-class></component>
    <component><implementation-class>com.jetbrains.rider.plugins.unity.run.DefaultRunConfigurationGenerator</implementation-class></component>
    <component><implementation-class>com.jetbrains.rider.plugins.unity.FrontendBackendHost</implementation-class></component>
    <component><implementation-class>com.jetbrains.rider.plugins.unity.notifications.UnityAutoSaveConfigureNotification</implementation-class></component>
    <component><implementation-class>com.jetbrains.rider.plugins.unity.toolWindow.UnityToolWindowManager</implementation-class></component>
    <component><implementation-class>com.jetbrains.rider.plugins.unity.toolWindow.UnityToolWindowFactory</implementation-class></component>
    <component><implementation-class>com.jetbrains.rider.plugins.unity.notifications.DeferredCachesInProgressNotification</implementation-class></component>
    <component><implementation-class>com.jetbrains.rider.plugins.unity.notifications.OpenUnityProjectAsFolderNotification</implementation-class></component>
    <component><implementation-class>com.jetbrains.rider.plugins.unity.notifications.UpdateMonoNotification</implementation-class></component>
    <component>
      <implementation-class>com.jetbrains.rider.plugins.unity.ProtocolInstanceWatcher</implementation-class>
    </component>
  </project-components>

  <applicationListeners>
    <listener class="com.jetbrains.rider.plugins.unity.SaveAllTracker" topic="com.intellij.openapi.actionSystem.ex.AnActionListener" />
  </applicationListeners>

  <actions>
    <action id="AttachToUnityProcessAction"
            class="com.jetbrains.rider.plugins.unity.actions.AttachToUnityProcessAction"
            text="Attach to Unity Process&#8230;"
            description="Attach debugger to Unity Editor process"
            icon="UnityIcons.Actions.AttachToUnity">
      <add-to-group group-id="XDebugger.AttachGroup" anchor="after" relative-to-action="com.jetbrains.rider.debugger.actions.RiderAttachToRemoteProcessAction" />
    </action>

    <action id="ShowUnitySettingsInRider"
            class="com.jetbrains.rider.plugins.unity.actions.UnityPluginShowSettingsAction"
            text="Unity Settings&#8230;"
            description="Show Unity settings"
            icon="AllIcons.General.Settings" />

    <action id="RiderUnityOpenEditorLogAction"
            class="com.jetbrains.rider.plugins.unity.actions.RiderUnityOpenEditorLogAction"
            text="Open Unity Editor Log"
            icon="UnityIcons.Actions.OpenEditorLog" />
    <action id="RiderUnityOpenPlayerLogAction"
            class="com.jetbrains.rider.plugins.unity.actions.RiderUnityOpenPlayerLogAction"
            text="Open Unity Player Log"
            icon="UnityIcons.Actions.OpenPlayerLog" />

    <group id="UnityToolbarActions">
      <add-to-group group-id="ActiveRuntimeGroup" relative-to-action="BuildButton" anchor="after" />

      <separator/>

      <group id="UnityShowImportantAction" popup="true" class="com.jetbrains.rider.plugins.unity.ui.UnityImportantActions" text="Important Unity Related Actions">
        <action id="StartUnityAction"
                class="com.jetbrains.rider.plugins.unity.actions.StartUnityAction"
                text="Start Unity"
                description="Start Unity with current project"
                icon="UnityIcons.Actions.StartUnity" />
        <reference ref="AttachToUnityProcessAction" />
        <reference ref="ShowUnitySettingsInRider" />

        <separator/>

        <action id="SwitchUIModeAction"
                class="com.jetbrains.rider.plugins.unity.ui.SwitchUIMode"
                text="Toggle UI Mode"
                description="Show or hide unnecessary UI tool windows" />
        <action id="ShowUnityLogInRiderAction"
                class="com.jetbrains.rider.plugins.unity.actions.ShowUnityLogInRiderAction"
                text="Show Unity Log Window" />
      </group>

      <group id="UnityDllShowImportantAction" popup="true" class="com.jetbrains.rider.plugins.unity.ui.UnityDllImportantActions" text="Important Unity Related Actions">
        <reference ref="AttachToUnityProcessAction" />
        <reference ref="ShowUnitySettingsInRider" />
      </group>

      <action id="TriggerRefreshInUnity"
              class="com.jetbrains.rider.plugins.unity.actions.RefreshInUnityAction"
              text="Refresh Unity Assets"
              description="Trigger refresh assets in Unity Editor"
              icon="UnityIcons.Actions.RefreshInUnity" />
      <action id="TriggerPlayInUnity"
              class="com.jetbrains.rider.plugins.unity.actions.PlayInUnityAction"
              text="Play/Edit"
              description="Toggle play mode in Unity Editor"
              icon="UnityIcons.Actions.Execute" />
      <action id="TriggerPauseInUnityEditor"
              class="com.jetbrains.rider.plugins.unity.actions.PauseInUnityAction"
              text="Pause/Resume"
              description="Toggle play/pause in Unity Editor"
              icon="UnityIcons.Actions.Pause" />
      <action id="TriggerStepInUnityEditor"
              class="com.jetbrains.rider.plugins.unity.actions.StepInUnityAction"
              text="Step"
              description="Step a single frame in Unity Editor"
              icon="UnityIcons.Actions.Step" />
      <separator/>
    </group>

    <group id="Rider.UnitTesting.TopToolbar.MiscOptions.Unity">
      <add-to-group group-id="Rider.UnitTesting.TopToolbar.MiscOptions.Plugin" anchor="last"/>
      <action id="UnityTestLauncher"
              class="com.jetbrains.rider.plugins.unity.ui.unitTesting.SwitchUnitTestLauncherComboBoxAction" />
    </group>

    <action id="InstallEditorPluginAction"
            class="com.jetbrains.rider.plugins.unity.actions.InstallEditorPluginAction"
            text="Install Unity Editor Plugin" />

    <action class="com.jetbrains.rider.plugins.unity.actions.FindUnityUsagesAction" id="RdFindUnityUsagesAction" text="Find Unity Usages">
      <add-to-group group-id="FindMenuGroup" anchor="after" relative-to-action="FindUsages"/>
      <add-to-group group-id="EditorPopupMenu1.FindRefactor" anchor="after" relative-to-action="FindUsages"/>
    </action>

    <group id="RiderInternal.Unity" text="Unity Actions" popup="true" internal="true">
      <add-to-group group-id="RiderInternal" anchor="last" />

      <action id="Unity_Internal_DumpDuplicateTypeNames"
              class="com.jetbrains.rider.plugins.unity.actions.internal.DumpDuplicateTypeNamesAction"
              text="Dump Duplicate Type Names"
              internal="true" />

      <action id="Unity_Internal_DumpSpellCheckWordLists"
              class="com.jetbrains.rider.plugins.unity.actions.internal.DumpSpellCheckWordListsAction"
              text="Dump Spell Check Word Lists"
              internal="true" />
    </group>
  </actions>

  <extensions defaultExtensionNs="com.intellij">
    <!-- IDEA default schemes -->
    <additionalTextAttributes file="colorSchemes/default_additional.xml" scheme="Default" />
    <additionalTextAttributes file="colorSchemes/darcula_additional.xml" scheme="Darcula" />

    <notificationGroup id="Unity log open" displayType="BALLOON"/>
    <notificationGroup id="Unity Asset Mode" displayType="BALLOON"/>
    <notificationGroup id="Unity project open" displayType="STICKY_BALLOON"/>
    <notificationGroup id="Unity connection is out of sync" displayType="BALLOON"/>
    <notificationGroup id="Unity Enable Yaml" displayType="BALLOON"/>
  </extensions>

  <extensions defaultExtensionNs="JavaScript">
    <JsonSchema.ProviderFactory implementation="com.jetbrains.rider.plugins.unity.ideaInterop.fileTypes.asmdef.jsonSchema.AsmDefJsonSchemeProviderFactory"/>
  </extensions>


  <description><![CDATA[
<p>Adds support for the Unity engine.</p>
<p>
<strong>Features</strong>
<ul>
  <li>Code completion of event function declarations in a class.</li>
  <li>Use Generate Code to create event functions, with parameters, or start typing for automatic completion.</li>
  <li>Highlights Unity event functions and serializable fields and marks as implicitly used by Unity.</li>
  <li>Supports Unity API 5.0 - 2019.2, plus undocumented functions.</li>
  <li>Inspections, Quick Fixes and Context Actions for Unity specific issues, with documented explanations.</li>
  <li>Performance indicators to avoid known code patterns that affect performance.</li>
  <li>Parse class and method usage from scene, prefab and assets.</li>
  <li>Support for ShaderLab and Assembly Definition files.</li>
  <li>Automatically connect debugger to Unity editor.</li>
  <li>Lists and debugs external players.</li>
  <li>Extra Unity data in debugger views.</li>
  <li>Play/pause/step directly from Rider.</li>
  <li>View Unity console in Rider, with parsed stack traces and text filter.</li>
  <li>Run Unity editor tests directly from Rider.</li>
  <li>Unity Explorer to view project as shown in Unity's Assets view, with Packages.</li>
  <li>Navigate to external Unity documentation.</li>
  <li>Correctly updates <tt>.meta</tt> files.</li>
  <li>Code completion, rename and find usages for "magic strings" in method calls.</li>
  <li>Automatically adds <tt>FormerlySerializedAs</tt> attribute when renaming fields.</li>
  <li>Automatically sets Unity projects to C# 4 or C# 6. No more suggestions for features that won't compile!</li>
  <li>Highlights <tt>UnityEngine.Color</tt> and <tt>Color32</tt>. Edit via colour palette quick fix.</li>
  <li>Unity specific file and live templates.</li>
  <li>And much more!</li>
</ul>
</p>
<p>
<strong>Links</strong>
<ul>
  <li><a href="https://github.com/JetBrains/resharper-unity">GitHub</a>
  <li><a href="https://github.com/JetBrains/resharper-unity/issues">Issues</a>
</ul>
</p>
]]>
  </description>
</idea-plugin>

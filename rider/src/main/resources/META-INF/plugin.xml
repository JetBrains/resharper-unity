<idea-plugin>
  <id>com.intellij.resharper.unity</id>
  <name>Unity Support</name>
  <version>2.0.3.9999</version>
  <vendor url="https://www.jetbrains.com">JetBrains</vendor>

  <idea-version since-build="171.3655" until-build="171.3655.*" />

  <depends>com.intellij.modules.rider</depends>

  <extensions defaultExtensionNs="com.intellij">
    <configurationType implementation="com.jetbrains.rider.plugins.unity.run.configurations.UnityDebugConfigurationType" />
    <applicationConfigurable groupId="language" instance="com.jetbrains.rider.settings.UnityPluginOptionsPage" id="preferences.build.unityPlugin" />

    <!-- ShaderLab support -->
    <fileTypeFactory id="ShaderLab" implementation="com.jetbrains.rider.plugins.unity.ideaInterop.fileTypes.shaderLab.ShaderLabFileTypeFactory" />
    <lang.altEnter language="ShaderLab" implementationClass="com.jetbrains.rider.intentions.altEnter.ReSharperAltEnterActionHandler" />
    <lang.parserDefinition language="ShaderLab" implementationClass="com.jetbrains.rider.plugins.unity.ideaInterop.fileTypes.shaderLab.ShaderLabParserDefinition" />
    <lang.syntaxHighlighterFactory language="ShaderLab" implementationClass="com.jetbrains.rider.plugins.unity.ideaInterop.fileTypes.shaderLab.ShaderLabSyntaxHighlighterProvider" />
    <backend.markup.adapterFactory language="ShaderLab" implementationClass="com.jetbrains.rider.daemon.RiderMarkupAdapterFactory" />
    <backend.actions.support language="ShaderLab" implementationClass="com.jetbrains.rider.actions.RiderActionSupportPolicy" />
    <iconProvider implementation="com.jetbrains.rider.plugins.unity.ideaInterop.fileTypes.shaderLab.ShaderLabIconProvider" />

    <!-- Cg support -->
    <fileTypeFactory id="Cg" implementation="com.jetbrains.rider.plugins.unity.ideaInterop.fileTypes.cg.CgFileTypeFactory" />
    <lang.parserDefinition language="Cg" implementationClass="com.jetbrains.rider.plugins.unity.ideaInterop.fileTypes.cg.CgParserDefinition" />
    <lang.syntaxHighlighterFactory language="Cg" implementationClass="com.jetbrains.rider.plugins.unity.ideaInterop.fileTypes.cg.CgSyntaxHighlighterProvider" />
    <backend.markup.adapterFactory language="Cg" implementationClass="com.jetbrains.rider.daemon.RiderMarkupAdapterFactory" />
    <backend.actions.support language="Cg" implementationClass="com.jetbrains.rider.actions.RiderActionSupportPolicy" />
    <iconProvider implementation="com.jetbrains.rider.plugins.unity.ideaInterop.fileTypes.cg.CgIconProvider" />

    <!-- ShaderLab / Cg shared -->
    <completion.contributor language="ShaderLab" implementationClass="com.jetbrains.rider.plugins.unity.ideaInterop.fileTypes.cg.CgCompletionContributor" />
    <completion.contributor language="Cg" implementationClass="com.jetbrains.rider.plugins.unity.ideaInterop.fileTypes.cg.CgCompletionContributor" />
  </extensions>

  <project-components>
    <component><implementation-class>com.jetbrains.rider.UnityReferenceDiscoverer</implementation-class></component>
    <component><implementation-class>com.jetbrains.rider.UnityConfigurationImpl</implementation-class></component>
    <component><implementation-class>com.jetbrains.rider.settings.AutoSaveNotification</implementation-class></component>
    <component><implementation-class>com.jetbrains.rider.plugins.unity.run.DefaultRunConfigurationGenerator</implementation-class></component>
  </project-components>

  <description><![CDATA[
<p>Adds support for the Unity engine.</p>
<p></p>
<p><b>Features</b></p>
<p>
<ul>
  <li>Highlights Unity event functions and fields with an icon in the editor gutter.</li>
  <li>Marks fields and methods implicitly used by Unity as in use.</li>
  <li>Knows about all Unity script classes (<code>MonoBehaviour</code>, <code>ScriptableObject</code>, <code>EditorWindow</code>, etc).</li>
  <li>Marks empty event methods as dead code.</li>
  <li>Supports Unity API 5.0 - 5.6, and 2017.1</li>
  <li>Inspections and Quick Fixes for incorrect event function method signature and return types.</li>
  <li>Support for undocumented functions such as <code>OnValidate</code> and <code>OnPreGeneratingCSProjectFiles</code>.</li>
  <li>Warns if a coroutine return value is unused.</li>
  <li>Context action to convert event function method signature to/from coroutine.</li>
  <li>Use Generate Code to create event functions, with parameters.</li>
  <li>Start typing for automatic completion of event function declarations in a class.</li>
  <li>Event function descriptions for methods and parameters displayed in tooltips and QuickDoc.</li>
  <li>Creates, deletes and renames .meta files automatically when refactoring.</li>
  <li>Code completion, find usages and rename support for <code>Invoke</code>, <code>InvokeRepeating</code>, <code>IsInvoking</code> and <code>CancelInvoke</code>. Also <code>Start</code>/<code>StopCoroutine</code>.</li>
  <li>Inspection and Quick Fix to use CompareTag instead of string comparison.</li>
  <li>Inspection and Quick Fix for using new with ScriptableObject or MonoBehaviour.</li>
  <li>"Create serialized field" from usage Quick Fix.</li>
  <li>Suppress naming consistency checks on event functions.</li>
  <li>Prevent ReSharper from suggesting <code>Assets</code> or <code>Scripts</code> as part of the namespace of your code.<li>
  <li>Automatically sets Unity projects to C# 4 or C# 6. No more suggestions for features that won't compile!</li>
  <li>Highlights <code>UnityEngine.Color</code> and <code>Color32</code>. Edit via colour palette quick fix.</li>
  <li>Treats Unity debug assertions as assertion methods in ReSharper control flow analysis.<li>
  <li>String formatting assistance for debug log methods.</li>
  <li>Regex assistance for <code>EditorTestsWithLogParser.ExpectLogLineRegex</code>.</li>
  <li>Types and type members marked with UnityEngine.Networking attributes are marked as in use.</li>
  <li>Code completion, find usages and rename support for <code>SyncVarAttribute</code> hook function.</li>
  <li>Inspections for incorrect SyncVarAttribute usage.</li>
  <li>Marks empty event functions as dead code, with Quick Fix to remove.</li>
  <li>Automatically excludes large Library and Temp folders from Rider's text index.</li>
  <li>Creates "Attach to Unity Editor" run configuration to attach the debugger to the Editor.</li>
</ul>
</p>
<p></p>
<p><b>Links</b></p>
<p>
<ul>
  <li><a href="https://github.com/JetBrains/resharper-unity">GitHub</a>
  <li><a href="https://github.com/JetBrains/resharper-unity/issues">Issues</a>
</ul>
</p>
]]>
  </description>
  <change-notes>
<![CDATA[
<ul>
  <li>Parse pre-processor directives in ShaderLab (<a href="https://github.com/JetBrains/resharper-unity/issues/186">#186</a>)</li>
  <li>Parse CGINCLUDE blocks at any point in shader file (<a href="https://github.com/JetBrains/resharper-unity/issues/188">#188</a>)</li>
  <li>Parse property references for BlendOp in ShaderLab files (<a href="https://youtrack.jetbrains.com/issue/RIDER-8386">RIDER-8386</a>)</li>
  <li>Add annotations for modularised UnityEngine assemblies (<a href="https://github.com/JetBrains/resharper-unity/issues/207">#207</a>)</li>
  <li>Allow disabling simple word completion for .shader and .cginc files (<a href="https://youtrack.jetbrains.com/issue/RIDER-5996">RIDER-5996</a>)</li>
  <li>Choose path and set Rider as default editor from the Unity3dRider plugin</li>
  <li>Customise the target framework version in the Unity3dRider plugin options</li>
  <li>Fix path to finding Rider installed by Toolbox on Mac<li>
  <li>Updates the reference to nunit.framework.dll to a version shipped by Unity that works in the Rider test runner (<a href="https://github.com/JetBrains/resharper-unity/issues/194">#194</a>)</li>
</ul>
]]>
  </change-notes>
</idea-plugin>

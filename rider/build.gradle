plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.1.1'
    id 'org.jetbrains.intellij' version '0.2.16'
}

group 'com.jetbrains'

if (!ext.has("myArgs")){
    ext.myArgs = "Release,2.0.3.9999"
}

ext.args = myArgs.split(',')
ext.configuration = ext.args[0]
ext.version = ext.args[1]

version ext.version

println("ext.version=$ext.version")
println("ext.configuration=$ext.configuration")

ext.kotlin_version = '1.1.1'
ext.nupkg_path = "$projectDir/../resharper/build/resharper-unity.rider/bin/$ext.configuration/JetBrains.Unity.$ext.version-rider.nupkg"

sourceCompatibility = 1.8
targetCompatibility = 1.8

intellij {
    type = 'RD'

    // Download a version of Rider to compile and run with. Either set `version` to
    // 'LATEST-TRUNK-SNAPSHOT' or 'LATEST-EAP-SNAPSHOT' or a known version.
    // This will download from www.jetbrains.com/intellij-repository/snapshots or
    // www.jetbrains.com/intellij-repository/releases, respectively.
    // Note that there's no guarantee that these are kept up to date
    // version = 'LATEST-TRUNK-SNAPSHOT'
    // If the build isn't available in intellij-repository, use an installed version via `localPath`
    // localPath = '/Users/matt/Library/Application Support/JetBrains/Toolbox/apps/Rider/ch-1/171.4089.265/Rider EAP.app/Contents'
    // localPath = "C:\\Users\\Ivan.Shakhov\\AppData\\Local\\JetBrains\\Toolbox\\apps\\Rider\\ch-0\\171.4456.459"
    // localPath = "C:\\Users\\ivan.pashchenko\\AppData\\Local\\JetBrains\\Toolbox\\apps\\Rider\\ch-0\\dev"

    def dir = file('dependencies')
    if (dir.exists()) {
      localPath = dir.absolutePath
    }
    else {
      version = '171.4456.2169' // 2017.1 RTM
    }

    // Sources aren't available for Rider
    downloadSources = false
}

repositories {
    mavenCentral()
}

dependencies {
    testCompile 'junit:junit:4.12'
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
}

assert file(nupkg_path).exists()

prepareSandbox {
    from(nupkg_path, {
        into "$intellij.pluginName"
    })
}
